
;-------------------
;DEBUGER
;-------------------


@BP   EQU PW [DSP+00]
@SP   EQU @BP  + 2
@DI   EQU @SP  + 2
@SI   EQU @DI  + 2
@DX   EQU @SI  + 2
@CX   EQU @DX  + 2
@BX   EQU @CX  + 2
@AX   EQU @BX  + 2
@FL   EQU @AX  + 2
@RA   EQU @FL  + 2
@TOP  EQU @RA  + 2

@SAVEREGS:
       ;14 12 10  8  6  4  2  0
  PUSH  AX BX CX DX SI DI SP BP
  MOV   BP,SP
  PUSHF
  POP   AX
  XCHG  AX,[@FL]
  PUSH  AX
  LEA   AX,[@TOP]   ; TOP OF RETURN STACK
  MOV   [@SP],AX
  RET

@REGS:  
  CALL  @SAVEREGS
@REGSZ:  
  CALL  @CR  
  MOV   SI,SP
  CALL  @DOTR
  CALL  @DOTR
  CALL  @DOTR4
  CALL  @DOTR4
@WAITLOAD:
  CALL  _@BIOSK
@POPREGS:
  MOV   SP,BP ; SKIP SP
  POP   BP DI DI SI DX CX BX AX
  POPF
  RET
  
@REGSTR:
  CALL  @SAVEREGS
  CALL  @CR  
  MOV   AX,@RA
  CALL  @SHOWSTR
  MOV   @RA,AX
  JMP   @REGSZ
  
@DBG:
  CALL  @SAVEREGS
  CALL  @CR  
  MOV   AX,SI       ; IP - CURRENT ADDRESS OF VIRTUALMASHINE FORTH
  CALL  @CALD3      ; IP. [IP]. [IP+2].

  MOV   AX,BX       ; TOP. [NXT]. [NXT+2].
  MOV   SI,[@BP]
  CALL  @CALD3
  
  MOV   SI,[@SP]
  LODSW
  CALL  @CALD3
  
  MOV   AX,PW[VAL_+_DP]
  MOV   SI,BP
  CALL  @CALD3
  
  MOV   BX,[@SI]
  MOV   AX,BX
  MOV   CX,[BX-2]
  MOV   DI,[@DI]
  LEA   DI,[DI-2]   
  CMP   CX,DI
  JNE   @NOTALBL
  CALL  @LBLID
@NOTALBL:  
  
  MOV   ax,[@DI]
  CALL  @STRID
  JMP   @WAITLOAD


;-----------------------------
@CALDOT:
  LODSW
@CALDOTZ:
  CALL  @WORDOUT
  MOV   AL,'|'
  JMP   @COUT
  
@CALD3:
  CALL  @CALDOTZ
  JMP   @DOTR2
@DOTR4:
  CALL  @CALDOT
  CALL  @CALDOT
@DOTR2:
  CALL  @CALDOT
@dotR:
  LODSW
  JMP   @HDOT
 
@SEARCH2:
; INPUT: AX:=[ADDRESS_TO_SEARCH+2]
; OUTPUT: 
;    ON ZF=0 FOUND      AX:=NAME
;    ON ZF=1 NOT_FOUND  DI:=AX+2  AX:=AX-2
; USED REGS: AX CX DI

  DEC   AX
  DEC   AX

;@SEARCH2:
  MOV   DI,PW [VAL_+_DICT]
  XOR   CX,CX
  SKIPB
@@IDLP:  
  SCASW
  ADD   DI,CX
  MOV   CL,[DI+4]
  JCXZ  @IDLPX
  INC   CX
  SCASW
  JNE    @@IDLP
@@ID:
  SCASW
  XCHG  AX,DI
  SKIPA
@IDLPX:
  MOV   DI,AX
  SCASW
  OR    CX,CX
  RET
  
@TO   DB 3,'TO '  
@AT   DB 3,'AT '  
@CLN  DB 2,': '  ; COLON DEFINITION

@LBLID:
  CALL  @SEARCH2
  JE    @NOLBL
  PUSH  AX
  MOV   AX, OFFSET @CLN
  CALL  @?STR
  POP   AX
  CALL  @?STR
@NOLBL:
  RET
  
@STRID:
  CALL  @SEARCH2
  JE    @HDOT2
  JMP   @?STR
@HDOT2:  JMP    @HDOT
  
