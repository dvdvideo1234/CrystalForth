
;-------------------
;DEBUGER
;-------------------


@BP   EQU PW [DSP+00]
@SP   EQU @BP  + 2
@DI   EQU @SP  + 2
@SI   EQU @DI  + 2
@DX   EQU @SI  + 2
@CX   EQU @DX  + 2
@BX   EQU @CX  + 2
@AX   EQU @BX  + 2
@FL   EQU @AX  + 2
@LRA  EQU @FL  + 2  ; LOCAL RETURN ADDRESS
@RA   EQU @LRA + 2
@TOP  EQU @RA  + 2

@SAVEREGS:
  PUSHF;16
       ;14 12 10  8  6  4  2  0
  PUSH  AX BX CX DX SI DI SP BP
  MOV   BP,SP
  PUSH  AX
  LEA   AX,[@TOP]   ; TOP OF RETURN STACK
  MOV   [@SP],AX
  POP   AX
  JMP   @LRA

@LOADREGS:
  POP   AX
  MOV   @LRA,AX
  POP   BP DI DI SI DX CX BX AX
  POPF
  RET

@REGSTR:
  CALL  @SAVEREGS
  CALL  @CR  
  MOV   AX,@RA
  CALL  @SHOWSTR
  MOV   @RA,AX
  JJ   @REGSZ
  
  PRIM 'REGS.',_RDOT,@CALL
@REGS:  
  CALL  @SAVEREGS
@REGSZ:  
  CALL  @CR  
  MOV   SI,SP
  CALL  @DOTR
  CALL  @DOTR
  CALL  @DOTR4
  CALL  @DOTR4
  CALL  @DOTR2
  MOV   SI,@TOP
  CALL  @DOTR3
@WAITLOAD:
  CALL  _@BIOSK
@POPREGSZ:
  CALL  @LOADREGS
  RET
  
@EMIT:
  CALL @SAVEREGS
  POP   BP
  PUSH  BP AX
  CALL  DORET
  DW _POP,_EMIT,_4TH
  J @POPREGSZ
  
@KEY:   CALL @SAVEREGS
  POP   BP
  PUSH  BP
  CALL  DORET
  DW _KEY,_PUSH,_4TH
  POP   AX
  MOV   BP,SP
  MOV   @AX,AX
  J @POPREGSZ
  
  PRIM 'DBG.',_DBG,@CALL
@DBG:
  CALL  @SAVEREGS
  CALL  @CR  
  MOV   AX,SI       ; IP - CURRENT ADDRESS OF VIRTUALMASHINE FORTH
  CALL  @CALDOTZ    ; IP. 
  XCHG  AX,SI     
  CALL  @CALDOT     ; [IP]. NEXTWORD 
  XCHG  AX,SI     
  CALL  @dotR       ; [[IP]].  NEXTWORD TYPE

  MOV   AX,BX       ; TOP. [NXT]. [NXT+2].
  MOV   SI,[@BP]
  CALL  @CALD3      ; TOP. [DSP]. [DSP+2]. 
  
  MOV   SI,[@SP]
  LODSW
  CALL  @CALD3      ; [RSP]. [RSP+2]. [RSP+4]. 
  
  MOV   AX,PW[VAL_+_DP]
  MOV   SI,BP
  CALL  @CALD3      ; DP. DSP. RSP. 
  
  MOV   BX,@SI
  MOV   AX,BX
  MOV   CX,[BX]
  CMP   CX,@DI
  JNE   @NOTALBL
  CALL  @LBLID
@NOTALBL:  
  
  MOV   ax,[@DI]
  CALL  @STRID      ; ? NAME OF THE WORD
  J   @WAITLOAD


;-----------------------------
@CALDOT:
  LODSW
@CALDOTZ:
  PUSH  AX
  CALL  @WORDOUT
  MOV   AL,'|'
  CALL  @COUT
  POP   AX
  RET
  
@CALD3:
  CALL  @CALDOTZ
  JMP   @DOTR2
@DOTR4:
  CALL  @CALDOT
@DOTR3:
  CALL  @CALDOT
@DOTR2:
  CALL  @CALDOT
@dotR:
  LODSW
  JMP   @HDOT
 
@SEARCH2:
; INPUT: AX:=[ADDRESS_TO_SEARCH]
; OUTPUT: 
;    ON ZF=0 FOUND      AX:=NAME
;    ON ZF=1 NOT_FOUND  DI:=AX+2
; USED REGS: AX CX DI

  MOV   DI,PW [VAL_+_DICT]
  XOR   CX,CX
  SKIPB
@@IDLP:  
  SCASW
  ADD   DI,CX
  MOV   CL,[DI+4]
  JCXZ  @IDLPX
  INC   CX
  SCASW
  JNE    @@IDLP
@@ID:
  SCASW
  XCHG  AX,DI
  SKIPA
@IDLPX:
  MOV   DI,AX
  SCASW
  OR    CX,CX
  RET
  
@PREFIXTO:
  CALL  @PREFIX
  MAKESTR 'TO'
@PREFIXAT:
  CALL  @PREFIX
  MAKESTR 'AT'  
@PREFIXCLN:
  CALL  @PREFIX
  MAKESTR ':'  ; COLON DEFINITION

PRIM 'LBL?.',_LBL?,@DRCALL
@LBLID:
  CALL  @SEARCH2
  JNZ    @PREFIXCLN
@NOLBL:
  RET
@PREFIX:
  POP   DI
  PUSH  AX
  XCHG  AX,DI
  CALL  @NOPREFIX
  POP   AX
@NOPREFIX:  
  CALL  @SHOWSTR
  J @SPDOT

PRIM 'ID.',_IDOT,@DRCALL
  J @NOPREFIX
  
PRIM 'ID?.',_ID?,@DRCALL
@STRID:
  CALL  @SEARCH2
    JNZ    @NOPREFIX
  XCHG  AX,DI   ;AX+=2
  CALL  @SEARCH2
    JNZ    @PREFIXTO
  XCHG  AX,DI   ;AX+=2
  CALL  @SEARCH2
    JNZ    @PREFIXAT
  ADD   AX,-4
@HDOT2:  
  JMP    @HDOT
  
