: @I (J @ ; HERE >, (D#0 : C@, C@ : C, |H : C!+ (PUSH W>B @I
 (DUP W>B - + (!R+ (POP : 1- (@+; ,< -1 , : ODD (@&; ,< 1 ,  
: |ALIGNED (EX : ALIGNED HERE ODD 0; ,<  =, NOP, $90 , 
: 5+ (@+; ,< 5 , : \` : \ |LTIB (DUP 0; 1- : L/ (@&; ,< -64 , 
: (|GO` (, (@R+ (XR (PUSH ; : @+ (PUSH (@R+ (POP; ; H 2- OBJ!
: (VAR3` (, (D#2 ; : EVEN (@&; ,< -2 , ^M EMIT ^J EMIT '^ EMIT
: |UNW (EX : UNW (|GO DROP; : @H- |H : @- 2- @+ 2- ;
: HIDE FND?? 5+ '` : SWAPC! (SWAP : C! C!+ (DROP; ; UNW
: ,' |, : ' FND?? @+ @ : ODD?? ODD ?? ; : @' ' @ ;

' (@, \ GENERATING PRIMITIVE`S COMPILERS
N: (JUMP` ,' (JUMP   N: (SET2` ,' (SET2  N: (CON`  ,' (CON    
N: ABORT` ,' (ABORT  N: (@&;`  ,' (@&;   N: (@+;`  ,' (@+;    
N: "R+`   ,' ("R+    N: (IO;`  ,' (IO;   N: (VAR`  ,' (VAR
N: (IF`   ,' (IF     N: SKIP`  ,' (SKIP  N: (IF-`  ,' (IF-    
N: (NEXT` ,' (NEXT   N: (FOR`  ,' (FOR   N: @R+`   ,' (@R+    
N: XR`    ,' (XR     N: XA`    ,' (XA    N: (WARY` ,' (WARY   
N: EX`    ,' (EX     N: PUSH`  ,' (PUSH  N: DROP`  ,' (DROP   
N: POP`   ,' (POP    N: (MAC`  ,' (MAC   N: (!"`   ,' (!"    
N: POP;`  ,' (POP;   N: RDROP` ,' (RDROP N: !R+`   ,' (!R+    
N: DROP;` ,' (DROP;  N: SWAP`  ,' (SWAP  N: NOP`   ,' (NOP    
N: DUP`   ,' (DUP    N: SP@`   ,' (SP@   N: OVER`  ,' (OVER   
N: NIP`   ,' (NIP    N: J`     ,' (J     N: -/`    ,' (-/     
N: U1+`   ,' (U1+    N: +2/`   ,' (+2/   N: 2/`    ,' (2/    
N: +*`    ,' (+*     N: D2/`   ,' (D2/   N: NAND`  ,' (NAND   
N: NEG`   ,' (NEG    N: 0=`    ,' (0=    N: U<`    ,' (U<    
N: NOT`   ,' (NOT    N: BEMIT` ,' (BEMIT N: RDROP;` ,' (RDROP;
=, 0<`    ,' (0<     

\ COMMON WORDS, ERROUT & BYE
: (UNDER @R+ PUSH SKIP : DXEP| DUP : XEP| XR EXECUTE POP; ;
 UNW : |NIP EX : NIP NIP ; : NUP XEP| : DUP DUP ;
: A+L XEP| : I+ J + ;       : IXEC J PUSH ;
: |DROP EX : DROP DROP; ; UNW ' ;, =: ;;`  : C;` (JUMP` ,<`
: C:` MARK>` : ?` (|GO SWAP! : ADR' ' DUP ODD?? : NOP ; 
: X:` ADR' PUSH ; : FOR` (FOR` MARK>` BEGIN` : SWAP SWAP ; 
: NEXT` THEN` (NEXT` RELS<` RDROP` ; : ..TIMES |DROP : .TIMES
|DROP : TIMES PUSH XR : TIMES| FOR J EXECUTE NEXT : EXIT RDROP;
; UNW : (."` (, "R+ : ". CSTR : TYPE |DROP TIMES| CSTR EMIT ; 
: |SPC EX : SPACE BL SKIP : |EMIT EX EMIT ; : ID. |SPC C; ".  
: = - 0= ; : AND NAND NOT ; : -ROT SWAP : USWAP XEP| SWAP ; 
: 0>A| 0 : >A| XR XA EXECUTE : AXIT XA RDROP; ; UNW
: ROT USWAP SWAP ; : I J ; : A@ XA I XA ; : A! PUSH C; AXIT 
\ : _ERR TBUF ID. MESSAGE ID. BYE ; ' _ERR ADR' vERR 2+ !
 
\ CONTROL
: GO|` (|GO` MARK>` ;       : AHEAD` (JUMP` MARK>` ; 
: ELSE` AHEAD` SWAP THEN` ; : AGAIN` (JUMP` RELS<` ;
: WHILE` GO| ? SWAP         : IF`   (IF`  MARK>` ;   
: IF-`  (IF-` MARK>` ;      : REPEAT` AGAIN` THEN` ; 
: UNTIL` (IF` RELS<` ;      : UNTIL-` (IF-` RELS<` ;
: WHILE|  BEGIN IF ? EXIT   : UNTILZ| IXEC  C; WHILE|
: UNTIL| BEGIN  IXEC        : WHILEZ| UNTIL C; EXIT 
: ;THEN` ;;` THEN` ;

\ MAKERS
: .( ') PARSE TYPE ; : ("` (, "R+ ; 
: (CODE;` (, POP : TOBE T @ ! ; 
: QUAN (VAR3` : VALUE (SET2` : CONST :` (CON` , ;
: CREATE |UNW : VARIABLE 0 : VAR :` (VAR` , ; 
: VQUAN (VAR3` : VECTOR (SET2` : DEFER :` (JUMP` , ; 
: (CON.` (, (D#1 C@ EMIT ; : BCONST (CON.` CONST ; 
: (D# (D#0 >, HERE XEP| @, ;  : DOES>` (CODE;` |DROP 
: 0#> (D# (D#0 : 1#> (D# (D#1 : 2#> (D# (D#2 ;
: (W2 @R+ : (W1 @R+ : WITHIN OVER- (UNDER - U< ; 
0#> C@, : REL, HERE 2+ - , ; N: CALL, $E8 ,  =, JUMP, $E9 ,  
0#> C@, : BREL, HERE 1+ - : BREL?, DUP (W2 ,< -128 , 128 , >,
 N?? C, ; =, JMPS, $EB ,  : WFIND vTARG (IO; ,<
 $04E8 , $3B00 , $FC5D , $C3 C, ' @FIND? JUMP, ALIGNED
0#> : `@A'+ @ ADR' + ; N: AT' -4 , N: TO' -2 , =, VAL' 2 ,
0#> `@A'+ ! ;          N: BE Z, : META ' ,<    =, IS   2 , 
0#> `@A'+ , ;          N: AT` -4 ,             =, TO` -2 , 
0#> `@A'+ PUSH ; N: AT  -4 ,  =, TO  -2 ,  : VAL@ VAL' @ ;
' NOP VECTOR `vDO : `DO ' TO `vDO POP ; : DO# `DO TOKEN? ">NUM
`vDO ; : ZDO `DO 0 `vDO ; : DO `DO `vDO ; : DO' `DO ' `vDO ;
' |ALIGNED VECTOR v",  : `ZBLK 0 ,< 0 VALUE BLK

\ HIDE UNNECESSARY WORDS
DO HIDE 53 TIMES   (ABORT (@&; (@+; ("R+ (IO; (; (IF (SKIP (IF-
(NEXT (FOR (JUMP (BEMIT (@R+ (!R+ (XR (XA (WARY (RDROP; (NOP 
 (EX (NIP (DROP (DROP; (PUSH (J (DUP (OVER (POP  (POP;
 (RDROP (SWAP (-/ (U1+ (+2/ (2/ (+* (D2/ (NAND (NEG (0= (NOT
 (U< (0< ;, (SET2 (CON (VAR (MAC (!" (SP@ DROP; NOP;

\ MACRO & STR,
: M: ';  : ?M: =H WORD (MAC` : WORD, CSTR v", : STR, DUP C, 
: S, |DROP TIMES| CSTR  C, ; : BS, CSTR  S, ; : A"` (!"` 
: "STR,  '" WORD  WORD, ; : ."` (."` "STR, ; : "` ("` "STR, ; 
: |[] ." [" EX ." ]" ; : [ID] CSTR : [S] |SPC |DROP : [TYPE] 
|[] TIMES| CSTR DUP BL U< IF DROP '. THEN EMIT ;  : MEMTI| A+L 
 0 : TI| BLK XR LTIB PUSH ETIB PUSH PUSH CALL EX POP POP POP
 THEN TO BLK TO LTIB TO ETIB : /BLK BLK 0; 0 TO ETIB ;
M: TWICE|` CALL THEN; M: TRICE|` CALL TWICE| THEN;
M: -IF` DUP 0< IF;    M: |VAL;` CALL EX (SET2 THEN ,<;   
M: .TIMES|` |DROP TIMES|;  
' MEMTI| BE EVAL 
 
\ VARIABLES 
DO# BCONST 4 TIMES   8 bs  '- c-  13 cr  10 lf     
: BASE! 2- W>B 2+ ,< 10 VALUE BASE     DO# CONST 6 
TIMES  $10 1H  -$700 SBUF  -$600 TIB  1024 1K  $40 1L  256 1B 
: |HLD |VAL; 0 CONST HLD    : |SCR |VAL; 0 CONST SCR
: ?|CR 0; : |CR EX : CR TO cr TO lf 0 TO CNTC ; 
: _OK ."  Ok" CR ." >>" ;

\ KEY StdKey WAITKEY
: BKEY? CALL 1L AND 0= ;; THEN 1B (IO; ,< $16CD , $589C , $90C3
 , : |WAIT EX  : WAITKEY |DROP : BKEY BEGIN BKEY? UNTIL
  CALL DUP W>B 0; W>B ;; THEN 0 (IO; ,< $16CD , $90C3 ,
' BKEY VALUE StdKey : `StdKey! StdKey ,< ' BKEY VALUE `KEY ;;`
' `KEY 2+ =: KEY : /LINE? 0<>; |CR BKEY 27 = 0;  : EOS! cr ,< 
0 VALUE EOS : EOS| EOS XR PUSH 0 TO EOS EX POP TO EOS ;
 
\ MULTIPLY, DIVIDE & MODULO
: >LO 1B : U/ |DROP : (/MD >A| 0 TWICE|  TWICE| -/ -/ -/ -/ ; 
: UMOD |DROP : U/MOD (/MD SWAP ; 
: >HI 1B : U* |DROP : UM*  >A| 0 TWICE|  TWICE| +* +* +* +* ;
: 1KMOD (@&; ,< 1K 1- , : W>BB 1B U/MOD ; : B>HH W>B 1H U/MOD ;
: `9>? 9 OVER U< : 8MOD (@&; ,< 7 ,  
 
\ NUMOUT \ tab NUMOUT 
: S6 GO|  XEP| XEP| XEP|  THEN : S3 |SPC TRICE| ROT DUP 
: H. W>BB CALL : B. |SPC THEN B>HH TWICE| : DIG. |EMIT   
: ALPHA `9>? +   : 48+ (@+; ,< '0 , 
: ?TAB HLD - : SPACES TIMES| SPACE ; : <# 0 TO HLD BASE! ;  
: # BASE U/MOD : HOLD |HLD 1+ ; : <#>| <# EX ?TAB : #> DROP HLD
TIMES| DIG. ; : `6 DUP 0< 0; NEG EX XEP| -10 SWAP HOLD ; : U. 0 
: U.RS |SPC : U.R lf : U.R# <#>| : u. 31 AND XEP| : S# UNTILZ| 
# DUP ; : . 0 : .RS |SPC : .R lf : .R# <#>| SWAP `6 SWAP C; u. 

\ DEBUGERR 1
: 2@ |DROP 4+ : 2@- @- @- ; : 2! !+ ! ; 0 VAR `DBGSAV Z, Z, 
: `EMTIN TO EMIT A@ `DBGSAV 2! StdEmit! CR ; : R3 POP POP POP J
 H. PUSH J H. PUSH J H. PUSH ; : `.WID. ID. : WID. 4+ ID. ; 
: @ID. DUP H. STR DUP H. SWAP @ H.  : ?ID. WFIND IF WID. ;THEN 
 2+ WFIND IF " TO" (JUMP `.WID. THEN 2+ WFIND IF  " AT" 
 (JUMP `.WID. THEN 4 -  : $. '$ EMIT H. ; : DBG. `EMTIN R3 I
 |WAIT : `DBG SPACE (UNDER S3 HERE H. vTARG H. `DBGSAV @ H.
 SPACE @ID. `DBGSAV 2@ A! AT EMIT ;

\ DUMP
: 2DUP OVER OVER ; : 2PICK PUSH OVER XR POP; ; UNW : UNITS? 
U/MOD SWAP 0; 1+ ; : `BDM |SPC .TIMES| CSTR B. ; : DUMP 1H
 UNITS? .TIMES| : DU CR DUP H. SPACE 1H 2DUP `BDM [TYPE] ;

\ CMOVE, PRUNE & DEA - DICTIONARY ENTRY ADDRESS
: >DEA 4+ : NAME> CSTR + ; : `NAMOV? DXEP| 5+ C@ '` - 0; J @ 1B
 HERE  WITHIN 0; J DUP >DEA OVER- MESSAGE SWAP 
: CMOVE |DROP FOR PUSH CSTR POP C!+ NEXT C; MSG! 
: PRUNE HERE MSG! CALL |T DROP PUSH HERE MESSAGE OVER- POP
 MPUSH ;THEN T CALL WHILE| `NAMOV? >DEA THEN DUP : DEA? 4+ C@ ;
\ WORDS 
: `NAME. XEP| J DEA?
 1 + CNTC + 80 U< /LINE?  J 4+ ID. ; : WORDS EOS| CR 0 T BEGIN
 DUP DEA? WHILE `NAME. >DEA U1+ EOS UNTIL THEN DROP . ; 
: FORGET FND?? DUP  >DEA TO T  @ EVEN C; OBJ!
: DICT>S CALL  OVER- 5+ ;THEN T DUP TO DEA? WHILE| AT DEA? ; 
: CMOVE> A+L SWAP MPUSH C; MSG! 

\ BSCAN, SCAN, (BSC & READLN
: (BSCN XR CSTR POP : BSCAN W>B PUSH XR PUSH J FOR CSTR J - IF
 X: -ROT NEXT : NFND J PUSH : /SCAN THEN DROP POP NOT RDROP POP
 + ; : (WSC XR STR POP  : SCAN PUSH XR PUSH J FOR STR J - IF 
 ? /SCAN NEXT C; NFND 
0#> PUSH W>B XR CSTR I BSCAN 1+ XR POP DUP 0; NIP ;
=, (BSC  2 C, cr C, bs C, ALIGNED 
: `BS 2PICK OVER- 0; 1- TO bs SPACE TO bs ;
: `AKEY DUP BL 1B WITHIN   IF ? DROP  DUP EMIT SWAP C!+ 
 2DUP = TO EOS ; : `TABKEY (WARY `AKEY EOS! `BS ,< 
: _RL  TIB 1L : ACCEPT |SPC EOS| OVER + OVER BEGIN KEY 
(BSC `TABKEY @EXECUTE EOS  UNTIL    NIP OVER-   ;

\ ERROR ROUTINE ESTABLISH    : |BYE EX BYE ; 
: XY? 1K LTIB - ; : |XY CALL EX : >XY 1KMOD (SET2 THEN 
,< 0 CONST XY : `(ERR StdEmit! `StdKey! CR TBUF ID. MESSAGE ID.
CR BLK 0; BLK TO SCR  `ZBLK : XY!  XY? >XY ;
: CSP! SP@ ,< 0 VALUE CSP  : CSP? SP@ CSP - ;
META `(ERR vERR    META _OK vOK    META _RL READLN

\ DEBUGERR 2 \ STEP BY STEP
VAL@ ;;` =: @MAIN  ALIGNED  HERE 1+ =: 4TH>  $E3FF , 
: TROFF (IO; ,< $8BB9 , $0F C, 
HERE =: `@X_TRACE   $0E87 , ' @MAIN , $C3 C, 
: TRON   (IO; ,<  $EBB9 ,  VAL@ (NEXT` 4 - ' @MAIN 2+ - BREL?, 
  ' `@X_TRACE JMPS, ALIGNED
  : @DBG      ,<  VAL' TROFF CALL,    VAL@ EX` 1- CALL, >, 
 `EMTIN R3 I `DBG BKEY  4TH> ,< 
VAL' TRON  CALL,    $DF24 , $533C ,  $75AD , 03 C,
VAL' TROFF CALL,    $8B5B , $F C, ' @MAIN 2+ JUMP, ALIGNED
: TRACE ' TRON EXECUTE TROFF ;
' @DBG VAL@ (NEXT` 1- -      VAL@ (NEXT` 3 - !
' TROFF 2+ VAL@ ABORT` 8 + - VAL@ ABORT` 6 + !
HIDE @MAIN
HIDE ABORT`

\ FGSDFGSDFGSD---  =FDYFGHDFGH- OR



\ PREPARE FOR COMPILING EDITOR


\ COMPARING PRIMITIVES  
: RED| 2DUP EX IF ? SWAP ; 
: UMAX |NIP : URED RED| U< ; : UMIN |DROP URED ; 
: MAX |NIP  : REDI RED| : < - 0< ; : <> - : 0<> 0= 0= ;
: MIN |DROP C; REDI

: |2DROP EX : 2DROP DROP DROP; ; UNW 0#> C@ : FILL PUSH FOR J
 SWAP C!+ NEXT : .EXIT DROP RDROP; ; UNW ' .EXIT 2- =: .2EXIT
N: ERASE Z,  =, BLANK BL ,  

\ EMPTY FOR NOW STUBS
: UPDATE ; : -BUF ; : /BUFS ; : FLUSH ;
: ONPLACE GO| DXEP| TWICE| NUP THEN : `REVERT |2DROP CALL 
WHILE| PUSH PUSH J C@ I C@ J C! POP C!+ POP THEN 1- 2DUP U< ;

: { '} PARSE 2DROP ;    ' { =: {`
' \ =: \`       \ COMMENTS WORKS NOW IN COMPILER STATE
: _BLK 1K U* 1B + ;  ' _BLK DEFER BLOCK
: 2* DUP + ; 

: SCR- |SCR DUP 0; 1- ; : SCR+ |SCR 1+ ;

: |SPTR |VAL; 0 CONST SPTR
0 VALUE SPTRTOP  : D0 0 0 ;  
: (@|; @R+ RDROP : OR NOT SWAP NOT NAND ;

: S> SPTR : SDROP |SPTR : NAME> CSTR + ; : SPTRTOP? SPTRTOP T -
 SPTR SPTRTOP U< 0= OR 0; T DUP  TO SPTRTOP TO SPTR TWICE| D0 
: >S W>B |SPTR MPUSH 1- ; : >S! CSTR >S ;  

: LIST DUP TO SCR BLOCK : .BLOCK CALL SCR : NU. 6 U.R ;THEN 
 1H .TIMES| 1H J NOT + J ?|CR : .LINE 2 U.RS 1L [TYPE] ;

ZDO VALUE 5 TIMES _FL _AX _BX _CX _DX  
: BB, SWAP C, C, ; : C@+ DUP 1+ XEP| C@ ; : BB>W >HI SWAP W>B 
+ ; : |REGS EX TO _FL  TO _AX  TO _BX  TO _CX  TO _DX ;
: (DOS |REGS (IO; ,< $21CD , =H `@INT  DO# C, 16 TIMES  
 $89 $1C $89 $4C $02 $89 $54 $04 $9C $4E $4E $89 $04 $58 $C3 0
: >POS: CREATE BB,  >, DOES> C@+ C@+ PUSH : GOTOXY BB>W D0 $200
: (VID |REGS (IO; ,< $10CD , ' `@INT  JMPS, : CRS TIMES| CR ; 
0 24 >POS: PAGE 26  CRS  : HOME D0 GOTOXY ; 

' (# =: (LIT
: TEST 1 2 3 " 1234" ; 0 VALUE `ADR2 : `" (WSC ,< 3 , >, (!" ("
 (." ,< : `|WW |VAL; 0 CONST `WW : `A:? WFIND IF ? DROP ." : " 
WID. ; : SEE ' : @SEE TO `WW : SL bs TIMES| : WW `|WW CR DUP H.
 DUP `A:? STR DUP H. DUP ?ID. `" 1+ 0; PUSH "R+ [ID] POP ;
 


17 . \ 17 BLOCK1 OF EDITOR
ZDO VALUE 6 TIMES  `PDATA `INS  `SZ  `ALTER `X `Y
' ETIB =: `EOS^ 

: `MOVER CONST DOES> @ : `XY+ |XY + ; 4 `MOVER `4+> 
-1 `MOVER `<-  1 `MOVER `->  -64 `MOVER `L_UP 64 `MOVER `L_DN    
: `L_END |XY : `/L (@|; ,< 63 , : `<_| `L_DN  : `L_BEG |XY L/ ;
: `|POS XY EX `PDATA + ; : `POS^ `|POS ;; ,< 
: `LINE/ `|POS L/ ;  : `/LINE `|POS `/L ; : `EOL `|POS `/L 1+ ;
: `PREPINS XEP|  `POS^ J `SZ - DUP : `SZBLANK `SZ BLANK ;
: `|DELPOS `POS^ DUP `SZ + OVER `SZBLANK EX ONPLACE ;
: `|INSPOS EX `PREPINS ONPLACE ; : `SZMOV `/LINE `POS^ - ;
: `REST 1K XY - ;


18 . \  BLOCK2 OF EDITOR
: `XY>CR XY 1L U/MOD TO `Y TO `X ; : `_INS `INS 0= TO `INS ; 
75 15 >POS: `ENDPOS EOS! ; : `ESQ/E /BUFS `ENDPOS ; 
72 0 >POS: `.INS `INS IF ." INS" ;THEN ." OVT" ; 
70 2 >POS: `.INBUF XY NU. ; : `Q/ED FLUSH `ENDPOS ; 
70 4 >POS: `.X.Y `X 3 U.R `Y 3 U.R ; 
70 6 >POS: `.CH `POS^ C@ DUP '$ EMIT B. 3 .R ; 
70 8 >POS: `.TEST ."  TEST " `Y . ;
: `STATE. `.INS `.INBUF `.CH `XY>CR `.X.Y
: `POSXY `X 4+ `Y GOTOXY ;
: `|LDRU 1 TO `SZ EX UPDATE `POSXY `LINE/ `Y TO cr .LINE DROP ;
: `TAB> `4+> SKIP : `<TAB  `<- |XY (@&; ,< -4 , 
: `RELOAD SCR BLOCK DUP TO `PDATA 1K + TO ETIB  SPTRTOP? ;

19 . \  BLOCK2 OF EDITOR
: `1L<?| 1L   : `>SZ?| TO `SZ 
: `SZ<?| `REST `SZ U< IF RDROP; THEN : `|RDRC EX SKIP
: `RESET -BUF : `LOADRAW `RELOAD : `REDRAW HOME `PDATA .BLOCK ;
: `B SCR- SKIP : `N SCR+ `LOADRAW ; : `ZPOS 0 TO XY ;  
: `ALT GO| ? `LOADRAW `ALTER |SCR TO `ALTER ; 
: `DELL `1L<?| : `DO-DEL `|DELPOS `EOS^ ; 
: `INSL `1L<?| : `DO-INS `|INSPOS `EOS^ ; 
: `INSC `|LDRU CALL `POS^ C! ;THEN `INS 0; `SZMOV 0; `|INSPOS
 `EOL ; : `BS `<-  : `DELC `|LDRU `|DELPOS `EOL ; : `ONEC DUP
 BL U< IF : `WHAT? DROP : WHAT? 7 EMIT ;THEN `INSC `-> ;
: `TEST BL `POS^ C@ U< ;  : `<XY0; `<- : `XY0; XY C; 0;
: `BACK BEGIN `<XY0; `TEST UNTIL BEGIN `<XY0; `TEST 0= UNTIL 
`-> ; : `ADV `REST TO LTIB BL PARSE TO `SZ DROP XY! `XY0; `<- ;
 
20 . \  BLOCK2 OF EDITOR
: `AW `ADV : `PREP { ARE} `BACK  : `SKIP `ADV `-> ;
: `SCR; `ZPOS `<- : `PREPARE `L_END `PREP ;
: `altS 1L 1+ `>SZ?| 1L TO `SZ `POS^
`<_| `DO-INS `POS^ 2DUP - NUP - ONPLACE ; 
: `COPY `1L<?| RDROP : `DO-COPY `POS^ `SZ DUP `XY+ >S ; 
: `CUT `1L<?| : `DO-CUT `DO-COPY  `SZ NEG `XY+ `DO-DEL ;
: `BKCW `AW `BACK `BACK 
: `CUTW `AW `SZ 0; `SZ 1+ TO `SZ `BACK `|RDRC `DO-CUT `PREP ; 
: `MOVE `CUTW `SZ 0; GO| ? `SKIP 
: `PASTE SPTR C@ DUP TO `SZ 0; `SZ<?| 
: `DO-PASTE `DO-INS S> 1+ `POS^ `SZ CMOVE ; 

: `WIPE ;



21 . \  BLOCK5 OF EDITOR \ KEY CONSTANTS}
DO# =: 19 TIMES 
30 kaA 75 kLEFT 72 kUP 71 kHOME 79 kEND 73 kPGUP 81 kPGDN
80 kDOWN 77 kRIGHT 82 kINS 83 kDEL 17 kaW 116 kcRIGHT
115 kcLEFT 117 kcEND 15 ksTAB 119 kcHOME 31 kaS 32 kaD
 
@' (BSC =, `EFtblC 19 C,  DO' C, 19 TIMES 
 kaA kLEFT kUP kHOME kEND kPGUP kPGDN kDOWN kRIGHT kINS kDEL
 kaW kcRIGHT kcLEFT kcEND ksTAB kcHOME kaS kaD 

ALIGNED : `EFtbl (WARY  
 `WHAT? `ALT `<- `L_UP `L_BEG `L_END `B `N `L_DN `-> `_INS
 `DELC `WIPE `ADV `BACK `SCR; `<TAB `ZPOS `altS `DELL ,<

22 . \  BLOCK5 OF EDITOR \ KEY CONSTANTS
 @' (BSC =, `EKtblC  20 C, DO# C, 20 TIMES
^J ^K ^X 127 ^H ^D ^M ^G ^Z ^N ^B ^R ^I ^C ^V ^Q ^F ^A ^[ ^S
ALIGNED : `EKtbl (WARY
 `ONEC `<- `-> `CUT `BKCW `BS `DELC `<_| `CUTW `PREPARE `N `B
 `RESET `TAB> `COPY `PASTE `ESQ/E `MOVE `ADV `Q/ED `INSL  ,<
: `@KEY KEY W>BB DUP 
    IF     NIP `EFtblC `EFtbl 	;THEN DROP `EKtblC `EKtbl ;
: EDIT TO SCR : PE PAGE : E  D0 MEMTI| `LOADRAW EOS|
 BEGIN `STATE. `@KEY @EXECUTE EOS UNTIL ;  


23 . \  BLOCK5 OF EDITOR \ KEY CONSTANTS}

EDITOR----
