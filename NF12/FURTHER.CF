: MCLR $D800 : MOBJ! (SET2 : MOBJ (CON (; : <M> MOBJ |H MOBJ! ;
: ?ODD (DUP : ODD (@&; ,< 1 , : ?:, (DUP : :, :|, ; H >, (D#0 
: C@, C@ : C, |H : C!+ (PUSH W>B @I (DUP W>B - + (!R+ (POP : 1-
(@+; ,< -1 , :, NOP, $90 , : SWAPC! SWAP : C! C!+ (DROP; 
: \` : \ |LTIB (DUP 0; 1- : L/ (@&; ,< -64 , : CSP! (SP@ (SET2 
: CSP (CON ; : ORG! H - (SET2 : HOFS (CON ; H ORG!  MCLR \ FIX
\ : BE (BE ; ^M BE ^J BE '^ BE : TEST (JUMP NOP ; \ TEST & FIX
: HERE H : R>T HOFS + ; : D# HERE >, CSP! : |LASTH (EX LASTH! ;
<M> : ' FND?? @ ; : 0#> D# (@, (D#0 ; <M> : WAITKY |DROP : `K 0
(IO; ,< $16CD , $90C3 , : |ALIGN (EX : ALIGNED |LASTH HERE ODD 
0; NOP, ; 0#> C@, HERE 2+ - , ; ?:, CAL#, $E8 , :, JMP#, $E9 , 
: (, (@R+ |, (; (SET2 : v", (JUMP |ALIGN : BEGIN` HERE LASTH! ;
: CALL` : [` : MARK>` H : Z, |, 0 ; : T>R HOFS - ; 
: =P ALIGNED HERE 1+ =: ; =P BRK $CC C, ' (NOP 1- JMP#,
: |THEN (EX : THEN` BEGIN` SWAP! ; : "STR, '" : `", WORD ?C@ 
N?? : ", CSTR v", (DUP C, : S, STR| CSTR C, ; : (" ("SKIP ; 
: Emt! (# (BE (SET2 (CON : EMIT (BE CALL 1+ : `CNTC (SET2 THEN
: CNTC (CON ; : T. vTARG : WID. 4+ : ID. |SPC : ". CSTR : TYPE 
STR| CSTR (JUMP EMIT : |C. (EX EMIT ; : (." ("SKIP ". ; : WKEY 
|DROP : BK `K (DUP W>B 0; (JUMP W>B : Key! (# BK (SET2 (CON 
: KEY BK ; : ?|CR 0; : |CR (EX : CR (." ,< $D02 , ^J , >, 0 
`CNTC ; : `. Emt! Key! CR TBUF ID. ID. CR : vINI (JUMP BYE ; 
' `. ' vERR 2+ ! ' |C. ' SPC !  ' HERE ' =H ! \ FIX
\ : ATEST CR TYPE CR '# EMIT ; ' ATEST ' TEST 2+ ! \ FIX
<M> : ."` (, (." "STR, ; : A"` (, (!" "STR, ; <M> \ FIXERING
: @2 @+ @ ; : ' FND?? : UND?? @2 ODD A" UNDEF?" ; : ADR' ' (DUP
: ODD?? ODD A" ODDH?" ; 0#> : @ADR+ @ ADR' + ; ?:, TO' -2 , ?:,
AT' -4 , :, VAL' 2 , 0#> @ADR+ , ; ?:, TO` -2 , ?:, AT` -4 , 
?:, C:` Z, :, VAL` 2 , 0#> @ADR+ (PUSH ; ?:, TO -2 , ?:, AT -4 
, ?:, X:` Z, :, VAL 2 , 0#> @ADR+ : T! T>R ! ; ?:, TO! -2 , ?:,
AT! -4 , ?:, BE! Z, :, VAL! 2 , : |[] ." [" (EX ." ]" ; 
: DXEP2-| 1- : DXEP-| 1- : DXEP| (DUP : XEP| (XR EXECUTE (POP ;
: (MAC (D#0 CSTR @STATE @ (PUSH >, EVAL (POP @STATE ! ; : [ID] 
CSTR : [S] |SPC |DROP : [TYPE] |[] TIMES| CSTR (DUP |C. BL (U< 
0; (DROP '. ; : ?SAME TFND 0; 4+ [ID] TBUF ; ' ?SAME TO! (=: 
: M: '; : ?M: <M> HOFS (PUSH 0 TO HOFS :` (, (MAC `", (POP TO 
HOFS <M> ; : (| (@R+ (XR (PUSH (; 0 (SET2 : BLK (CON ,< 0 , : 
A+L XEP| : I+ (J + ; : MEMTI| A+L 0 : TI| BLK (XR LTIB (PUSH 
ETIB (PUSH (PUSH CALL (EX (POP (POP (POP THEN TO BLK TO LTIB TO
ETIB : /BLK BLK 0; 0 TO ETIB ; ' MEMTI| BE! EVAL \ FIX META
<M> M: :JUMP` (JUMP; '" ?M: ;;` (;" M: RDROP` (RDROP; <M> : `SP
(SP@ CSP SWAP - ; : `PR `SP (0< A" PAIR?" ; ' CSP! BE! : \ FIX
: DXEP+| (DUP 1+ (JUMP XEP| : U2B 1+ : 2/ 0 : AVR (+2/ : NIP 
XEP| (DROP; : 2* (DUP (JUMP + : <RNG| RANGE>S A+L (JUMP STR| 
: (RDROP (POP (XR (DROP; : |UNW (EX : UNW` : UNW |DROP : @H- |H
: @- 2- @+ 2- ; : (code (POP vTARG @ ! ; : ]` : ;THEN` |THEN 
: ;` `SP ,<? (| ;;` `PR LASTH H - 2+ 0<>; LASTH @ ODD 0<>; 
RDROP @H- : AGAIN` |, :JUMP :JUMP` : ALLOT |H + ;
: `OK ."  ok" CR ." >>" ;  ' `OK TO! QUIT \ FIX   
: `HODD? HERE ODD?? ; ' `HODD? BE! :` \ FIX
: (IXEC (J (PUSH ; : WHILE| (IF EXIT : UNTILZ| \ CALLABLE PRIMS
(IXEC (JUMP WHILE| : UNTIL| BEGIN (IXEC : WHILEZ| (IF <RELS
(RDRP; : NUP XEP| : DUP (DUP ; : TUCK (DUP : -ROT SWAP : USWAP 
XEP| SWAP ; : ROT USWAP SWAP ; : AND (NAND : NOT (NOT ; : OR 
(NOT SWAP (NOT : NAND (NAND ; : = - : 0= (0= ; : SP@ (SP@ ; 
: A@ (A@ ; : I (J ; : 5+ (@+; ,< 5 , : 2DUP (OVER : OVER 
(OVER ; : |SWAP (EX : CSWAP` SWAP ; : >DEA 4+ : NAME> CSTR + ; 
: FORGET FND?? DUP UND?? EVEN TO H >DEA TO T ; : HIDE FND?? 5+
 '` SWAPC! ; 0#> @2 : WITHIN OVER- (PUSH - (POP : U< (U< ; 
?:, `RSTACK -$2C0 10 + , -$40 , ?:, `DSTACK -$2C0 $280 - , 
-$2C0 , :, BREL? -128 , 128 , : NEG (NEG ;



\ PRIMITIV'S MACROSES 
M: :0>` (D#0;        M: :1>` (D#1;        M: :2>` (D#2; 
M: :VAR3` (VAR3;     M: :SET2` (SET2;     M: :CON` (CON;
M: :0"` (0";         M: :!"` (!";         M: :"` (";
M: :code` (code;     M: :BARY` (BARY;     M: :."` (.";
M: :QARY` (QARY;     M: :LARY` (LARY;     M: :WARY` (WARY;
M: POP` (POP;        M: SP@` (SP@;        M: !R+` (!R+;
M: @R+` (@R+;        M: XR`  (XR;         M: XA` (XA;
M: SKIP` (SKIP;      M: +2/` (+2/;        M: OVER` (OVER;
M: DUP` (DUP;        M: J` (J;            M: D2/` (D2/;   
M: NOT` (NOT;        M: PUSH` (PUSH;      M: 0=` (0=;     
M: +*`  (+*;         M: U<` (U<;          M: NAND` (NAND; 
M: U1+`  (U1+;       M: NEG` (NEG;        M: 0<` (0<;      
M: -/` (-/;          M: A@` (A@;          M: RP@` (RP@;  
M: EX` (EX;          M: 2/` (2/;          M: DROP` (DROP;
M: :VAR` (VAR; '" ?M: RDROP;` (RDRP;" '" ?M: 2RDROP;` (2RDRP;"
'" ?M: DROP;` (DROP;" '" ?M: TROFF;` (TROFF;" M: -IF` 1+ IF-;
'" ?M: :IO;` (IO;"   M: IF-` (IF- MARK>;  M: IF` (IF MARK>; 
M: TRICE|` CALL TWICE| THEN; M: TWICE|` CALL THEN; 
M: UNTIL` (IF <RELS;  M: |` (| MARK>; M: ITER|` RNG| DXEP+|;  
M: <ITER|` <RNG| DXEP-|; 

<M>  : PRBA :0> :1> :2> :IO; :VAR  \ PRIMITIV'S
:VAR3 :SET2 :CON :0" :!" :" :." :code :BARY :QARY :LARY :WARY 
POP SP@ !R+ @R+ XR XA SKIP +2/ DUP J D2/ NOT PUSH 0= +* U< NAND
U1+ NEG 0< -/ A@ RP@ EX 2/ DROP RDROP; DROP; TROFF; 2RDROP; 
RDROP TRICE| TWICE| ITER| <ITER| OVER BEGIN UNTIL :JUMP ;; 
| THEN IF- THEN -IF THEN IF THEN ,<  
FORGET PRBA 
: QUAN :VAR3` : VALUE :SET2` : CONST :|, :CON` ; : VQUAN :VAR3`
: VECTOR :SET2` : DEFER :|, :JUMP` ; : CREATE |UNW : VARIABLE 0
: VAR :|, :VAR` ; : .( ') PARSE TYPE ;; 2* 2* : `ARY| 2* U2B :`
EX |LASTH : CLARYW TIMES| Z, ; : DOES>` |DROP :code` : 0#> D# 
:0>` ; : 1#> D# :1>` ; : 2#> D# :2>` ; : BARY VAL `ARY| :BARY` 
; : WARY `ARY| :WARY` ; : LARY TO `ARY| :LARY` ; : QARY AT 
`ARY| :QARY` ; : BCONST (, |C. CONST ; : `DO POP ADR' ,< 0 
VECTOR `vDO : DO# `DO TOKEN? ">NUM `vDO ; : ZDO `DO 0 `vDO ; 
: DO `DO `vDO ; : DO' `DO ' `vDO ; : IO;` ,<` :IO;` ; : 0"` 
:0"` "STR, ; : "` :"` "STR, ; : A"` :!"` "STR, ; 
: WHILE` |SWAP IF` ;
: |VALUE :` CALL` EX` :SET2` THEN` CONST ;  <M>







8 BCONST bs   \ VARIABLES CMOVE ERASE
0 |VALUE |SCR SCR     0 |VALUE |XY  XY  0 |VALUE |HLD HLD 
DO# CONST 10 TIMES   -$700 SBUF  -$600 TIB  1024 1K  $40 1L  
  13 cr  16 1H   10 lf  9 tab  26 eof  256 1B 

: |NIP EX  NIP ; : `NAMOV? DXEP| 5+ C@ '` - 0; J @ 1B HERE  
  WITHIN 0; J DUP >DEA OVER- |HLD 
: CMOVTO SWAP |NIP TIMES| PUSH CSTR POP C!+ ; 
: PRUNE HERE TO HLD  CALL |T DROP PUSH HERE HLD OVER- POP
 MPUSH ;THEN T CALL WHILE| `NAMOV? >DEA THEN DUP : DEA? 4+ C@ ;
: >ZSTR CSTR TBUF DXEP| CMOVTO : OFF 0 SWAP! ; 
: CMOVE |DROP VAL CMOVTO ;

: EOS! cr ,< 0 VALUE EOS : EOS| EOS XR PUSH 0 TO EOS EX POP TO 
EOS ; : /LINE? 0<>; |CR BK 27 = 0; EOS! ; : `NAME. XEP| J DEA?
1 + CNTC + 80 U< /LINE?  J 4+ ID. ; : WORDS EOS| CR 0 T BEGIN 
DUP DEA? WHILE `NAME. >DEA U1+ EOS UNTIL THEN DROP TO CSP ; 

: A! PUSH XA RDROP; : >LO 1B \ MULTIPLY & DIVIDE  U* U/ MOD
: U/ |DROP : D/M A! 0 : (D/M TWICE| TWICE| -/ -/ -/ : -/ (-/ ; 
: BB>W [ SWAP W>B + ] : >HI 1B : U* |DROP : UM* A! 0 TWICE| 
TWICE| +* +* +* : +* (+* ; : UMOD |DROP : U/MOD D/M SWAP ; 

: 9>? tab OVER U< : 7& (@&; ,< 7 , \ HEX NUMOUT 
: S6 | XEP| XEP| XEP| THEN : S3 |SPC CALL TWICE| THEN ROT DUP 
: H. 1B U/MOD CALL : B. W>B |SPC THEN 1H  U/MOD TWICE| 
: DIG. |C. : ALPHA 9>? + : 48+ (@+; ,< '0 , 

: ?TAB HLD - : SPACES TIMES| SPC ; \ TAB NUMOUT 
: <# 0 TO HLD : BASE! 2- W>B 2+ ,< 10 VALUE BASE : <#>| <# EX 
?TAB : #> DROP HLD TIMES| DIG. ; : `6 DUP 0< 0; NEG EX XEP| -10
SWAP : HOLD |HLD 1+ ; : U. 0 : U.RS |SPC : U.R lf : U.R# <#>| 
: u. 31 AND XEP| : S# UNTILZ| : # BASE U/MOD DUP HOLD ; : . 0 
: .RS |SPC : .R lf : .R# <#>| SWAP `6 SWAP u. ; : #. 0 SWAP 
|SPC .R# ; : .TEST HERE 5 U.RS T. SPC SPC CNTC 65 U< 0<>; CR ; 
.TEST

: `RSTACK?? (RP@ 2- 2- `RSTACK (0= A" RSTACK?" ; 
: `DSTACK?? (SP@ 2- `DSTACK (0= A" DSTACK?" ; : `STACK 
`RSTACK?? `DSTACK?? ; : `LT! (DUP (SET2 : >LT< (CON (; ,<  
' `STACK VAL! EVAL  ' `LT! ' PARSE 6 + ! \ FIX
.TEST

: XY? 1K LTIB - ; : ` BLK 0; BLK TO SCR  AT BLK : XY! XY?
: >XY TO XY |XY : 1KMOD (@&; ,< 1023 ,   
' ` VAL! vINI  ' EVAL  AT! QUIT  \ FIX
.TEST

: .STR| XR POP : ..TIMES |DROP .TIMES ; \ -ROT MEMORY PUSH XR 
: |2DROP EX DROP DROP; : |NIP EX NIP ; 0#> @ : FILL -ROT .STR| 
NUP C!+ ; ?:, ERASE 0 , :, BLANK  BL , 
: C@+ DXEP+| C@ ; : PAD H
 320 + ; : ON -1 SWAP! ; 
.TEST

: (BSCN XR CSTR POP : BSCAN W>B A! DUP  \ BSCAN, SCAN SCAN_TEST
PUSH (FOR MARK>  : `BS CSTR A@ - (IF MARK> CSWAP THEN (NEXT `BS
: NFND J XR DROP : /SCAN THEN DROP POP NOT POP + ; : (WSCN XR 
STR POP : SCAN A! DUP PUSH (FOR MARK> : `WS STR A@ - (IF /SCAN
 THEN (NEXT `WS NFND ;
\ : SCTEST " 0123456789ABCDEFGH" ; ' (BSCN ' SCTEST ! UNW
\ CR 0 H. 'Z SCTEST  H. 'C SCTEST H. SP@ H. CR
.TEST

\ IO 
ZDO VALUE 6 TIMES _FL _AX _BX _CX _DX _DX2 
: XDROT XEP| : DROT (| ROT  : D0 0 0 ; : IO? _FL ODD A" IO?" ;
: |REGS EX TO _FL TO _AX TO _BX TO _CX TO _DX ; 
: `File| >ZSTR : `IO?| EX IO? _AX _DX TO _DX2 ; 
0#> @ : (DOS |REGS IO; $21CD , =H `@INT  DO# C, 16 TIMES  
 $89 $1C $89 $4C $02 $89 $54 $04 $9C $4E $4E $89 $04 $58 $C3 0
?:, Fread $3F00 , ?:, Fwrite $4000 ,  :, Fseek $4200 ,
: >POS: CREATE SWAP C, C,  >, DOES> C@+ C@+ PUSH : GOTOXY BB>W
 D0 $200 : (VID |REGS IO; $10CD , ' `@INT  $EB C, HERE 1+ - C, 
: CRS TIMES| CR ; 0 24 >POS: PAGE 26  CRS  : HOME D0 GOTOXY ; 
.TEST

0#> @ DROT (DOS ; : FOPEN `File|   ,<  ?:, `Fopen $3D02 , 
: FCREATE `File| ,<  ?:, `Fcreate $3C00 ,  :, StdOut $200 ,
0#> @ XDROT (DOS ;  :, Fclose $3E00 ,
.TEST

\ FLUSH OK
4 CONST `NBUFS    ZDO VALUE 4 TIMES `PREV FIRST `USE SCRH

$E800 TO FIRST : `@FBUFS `PREV ,< `NBUFS BARY `FBUFS  
   -1 TO SCRH  : `@BUFS  `PREV ,< `NBUFS WARY `BUFS   
.TEST

: `1KRW| DROP 1K : `AXDX| SCRH `IO?| ;
: `fsk 1K UM* `AXDX| Fseek ; : WBLK `fsk |DROP `1KRW| Fwrite ;
: RBLK `fsk |DROP `1KRW| Fread ; 
: `@BUF `PREV 1K U* FIRST + ; : UPDATE  `@FBUFS 1 SWAPC! ; 
: -BUF `@BUFS ON : DISCARD `@FBUFS 0 SWAPC! ; 
: `+BUF `USE 1+ `NBUFS 1- AND DUP TO `USE ;    
: !BUFS  `NBUFS TIMES| `+BUF TO `PREV
: `?SAVE `@FBUFS C@ 0; `@BUF `@BUFS @ WBLK DISCARD ;
.TEST

: FLUSH !BUFS       : /BUFS `NBUFS TIMES| `+BUF TO `PREV
: `EMPTY-BUF -BUF   : `/BUF `@BUF 1K ERASE ;
: `?BUF PUSH 0 `BUFS `NBUFS POP SCAN ;
: `;ABLK /BLK  XR PUSH J `?BUF EX `@BUF RDROP;
: BUFFER `;ABLK -IF `?BUF  -IF DROP BEGIN `+BUF `PREV - UNTIL
     `USE THEN THEN TO `PREV `?SAVE `/BUF J `@BUFS ! ;
: BLOCK `;ABLK -IF DROP J BUFFER J RBLK ;THEN TO `PREV ;
: `-USE SCRH 1+ 0; SCRH Fclose : `/SCR -1 TO SCRH ; 
: USE/ `/SCR /BUFS ; : FCUT FLUSH `fsk 0 SCRH Fwrite ;
: USING TOKEN? : USED FLUSH `-USE FOPEN TO SCRH ;
: `SOURCE BLK 0; ETIB 0<>; BLK BLOCK 1K + TO ETIB ;
: THRU ITER| : LOAD 1K OVER TI| VAL EVAL ;
' `SOURCE BE! PARSE   USE/  USING PIF.COM \ FIX
.TEST

>, EOS! : `CR  NIP DUP ; \ COMMAND LINE INPUT ROUTINE FOR
: `bs DUP 0; 1- TO bs SPC TO bs ; : `CH A@ BL 1B WITHIN 0; A@
 SKIP : `tab BL DUP EMIT  OVER HLD + C! 1+ : `ZERO ; : `CHTAB
 (BSCN ,< 7 C, bs C, tab C, cr C, eof C, 0 C, 255 C, 127 C,  
: (JARY 1+ 2* POP + @ PUSH ; : `JTAB (JARY `CH `bs `tab `CR  
TO `CR `ZERO `ZERO `ZERO : READLN TIB 1L : ACCEPT  SWAP TO HLD
0 [ DROP HLD SWAP SPC ] CALL WHILE| KEY `CHTAB `JTAB THEN 
: <>? OVER OVER- ; ' READLN BE! QUIT \ FIX
.TEST

: CHARS ITER| DUP EMIT B. ;  \ 33 66 CHARS CR CR  HERE H.
.TEST


0 VALUE TSRC  0 VALUE TDST   : |DST TDST EX TO TDST ; 
0 VALUE TCOD  0 VALUE TLEN   : |SRC TSRC EX TO TSRC ;  
0 VALUE TBEG  0 VALUE TADR   : SKIPER |SRC + ;

: LASTB? 1023 2DUP AND = ;   : (ADRV) 1K U/MOD BLOCK + ; 
: CSTRV |SWAP : C@V+ DXEP+|  : C@V (ADRV) C@ ;
: @V+ DUP 2+ XEP| : @V LASTB? IF C@V+ C@V BB>W ;THEN (ADRV) @ ; 
: SRC>DST |SRC |DST ROT : COPYV TIMES| PUSH C@V+ SWAP POP
: C!V+ DXEP+| : C!V (ADRV) C! UPDATE ; : !V+ DUP 2+ XEP| : !V 
LASTB? IF PUSH 1B D/M I C!V POP 1+ C!V ;THEN (ADRV) ! UPDATE ;

: VDEA? 4+ C@V ; : V>DEA 4+ CSTRV + ; : VDEA?2 C@V DUP 1+ TO 
 TLEN ; : VNAME. XEP| J VDEA? 1 + CNTC + 80 U< /LINE?  J 4+ 
: VID. |SPC CSTRV STR| CSTRV EMIT ; : VINIT (# VAL H $100 - @V
$100 - DUP TO TBEG  6 + CSTRV + DUP TO TDST 7 + DUP TO TSRC ; 
: VORDS EOS| CR 0 VINIT   DROP TBEG 2+ BEGIN 
DUP VDEA? WHILE VNAME. V>DEA U1+ EOS UNTIL THEN DROP TO CSP ; 

: COPYDEA TLEN SKIPER 4 SRC>DST TLEN 4+ NEG SKIPER  TLEN 
 SRC>DST 4 SKIPER ; : VDICT VINIT DROP BEGIN TSRC
VDEA?2 WHILE COPYDEA AGAIN THEN  1 SRC>DST TDST 1- TO TSRC 4 
SRC>DST  TDST TBEG - 2- TBEG !V  2 1K U* DUP 1- SWAP 
DUP 1K + COPYV + DROP FLUSH ; 

RAZBERI_PIE BK


: INDENT  CNTC 48 U< CR ?; 16 CNTC OVER UMOD - SPACES ;

\ : >DUMP (DUP ID. WKEY ; ' >DUMP ' ?C@ 2- !
\ : SHOW -4 `FBUFS 17 DUMP ;   .( GAGAGA) HOME


