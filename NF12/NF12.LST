Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 1
NF12.asm



      1				     locals  @@
      2
      3	      =	dword ptr	     pd	 equ dword ptr
      4	      =	word  ptr	     pw	 equ word  ptr
      5	      =	byte  ptr	     pb	 equ byte  ptr
      6
      7	      =-0002		     TO_     =	-2
      8	      =-0004		     AT_     =	-4
      9	      =0002		     VL_     =	2
     10
     11				     JMPS    MACRO LBL
     12					       jmp  SHORT LBL
     13					     ENDM
     14
     15				     SKIPA   MACRO
     16					     DB	   03DH
     17					     ENDM
     18
     19				     SKIPB   MACRO
     20					     DB	   03CH
     21					     ENDM
     22
     23				     SKIPr   MACRO reg
     24					     mov   reg,0
     25					     org   $-2
     26					     ENDM
     27
     28
     29				     X	     MACRO
     30				       xchg Rsp,DSP
     31					     ENDM
     32
     33				     TO_R    MACRO  REG
     34				       PUSH   REG
     35					     ENDM
     36
     37
     38				     R_TO    MACRO  REG
     39				       POP    REG
     40					     ENDM
     41
     42				     TO_D    MACRO  REG
     43				       X
     44				       PUSH   REG
     45				       X
     46					     ENDM
     47
     48				     _DUP_   MACRO
     49				       TO_D  TOP
     50						     ENDM
     51
     52				     D_TO    MACRO  REG
     53				       X
     54				       POP    REG
     55				       X
     56					     ENDM
     57
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 2
NF12.asm



     58				     _DROP_  MACRO
     59				       D_TO  TOP
     60						     ENDM
     61
     62				     rchg    macro   reg
     63				       xchg  ax,reg
     64					     endm
     65
     66				     DUP2    MACRO   R1,R2
     67				       X
     68				       PUSH  R1
     69				       PUSH  R2
     70				       X
     71					     ENDM
     72
     73				     DROP2   MACRO   R1,R2
     74				       X
     75				       POP   R1
     76				       POP   R2
     77				       X
     78					     ENDM
     79
     80	      =0000		     qqqqq = 0
     81	      =0000		     ppppp = qqqqq
     82
     83				     __nam    macro   msg
     84				       local endstr
     85				       db    endstr-$-1
     86				       db    msg
     87				     endstr  label   byte
     88					     endm
     89
     90				     __ln     macro   token
     91				     ppppp = $
     92				       __nam  token
     93				       dw    qqqqq
     94				     qqqqq = ppppp
     95					     endm
     96
     97				     __ALIGN  MACRO  FLAG
     98					     IF	($-@_START+FLAG) AND 1
     99					     NOP
    100					     ENDIF
    101					     ENDM
    102
    103				     _ALIGN  MACRO
    104					     __ALIGN 0
    105					     ENDM
    106
    107				     __entry  macro nam,ADR
    108					     __nam  nam
    109					     DW	   ADR,0
    110					     endm
    111
    112
    113				     ;	ASSIGNMENT OF THE REGISTERS
    114
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 3
NF12.asm



    115	      =BX		     ip	 = BX	     ; ip INSTRUCTION POINTER for THE interpretter
    116	      =AX		     dsp = AX		     ; dsp DATA	STACK POINTER
    117	      =SP		     rsp = SP		     ; rsp RETURN STACK	POINTER
    118	      =BP		     ar	 = BP	 ; address  register
    119	      =CX		     top = CX		     ; DATA STACK TOP REGISTER
    120	      =CL		     topL= CL		     ; DATA STACK TOP REGISTER LOW LOWER HALF
    121	      =DI		     DST = DI		     ; DESTINATION POINTER
    122	      =SI		     SRC = SI		     ; SOURCE POINTER
    123	      =DX		     W	 = DX		     ; WORK REGISTER
    124	      =DL		     WL	     = DL	     ; LOWER HALF OF THE WORK REGISTER
    125
    126				     ;
    127				     ; MINIMAL SET INTERPRETTER	COMMANDS
    128				     ; CONTROL	    COMMANDS  (IF (JUMP	(RETURN	(IF-
    129				     ; RETURN STACK COMMANDS  POP PUSH
    130				     ; DATA STACK   COMMANDS  DUP J
    131				     ; DATA TRANSF  COMMANDS  @R+ !R+ XCHG XR
    132				     ; MATH	    COMMANDS  +2/ +* -/	NAND
    133				     ; EXTENSION    COMMANDS  (IO C!R+ C@R+  MEM-
    134
    135	0000			     MyCseg  segment para  use16
    136
    137					     assume cs:	MyCseg,	 ds: MyCseg, ss: MyCseg, es: MyCseg
    138
    139					     org 100h
    140
    141	      =-0100		     @TBUF  = -256		     ; -256    TBUF = 256
    142	      =-0200		     @TIB   = @TBUF * 2	     ; -512    TIB  = 256  +
    143	      =-0200		     @RTOP  = @TIB	     ; -512  RSTACK = 768  +
    144	      =-0500		     @STOP  = @TBUF+@TIB*2   ; -1280 DSTACK = 768  += TOTAL = 2048
    145	      =-1800		     @VOCTOP= @TIB * 12	     ; -6144 = 4 BUFFERS * 1024	+ TOTAL
    146
    147	0100			     @_Start   Label byte
    148				       jmpS   _start
1   149	0100  EB 1E			       jmp  SHORT _start
    150				     ;--------------------------------------------------------
    151				     ; VARIABLES
    152				     ;--------------------------------------------------------
    153	0102			     @_OPER:
    154	0102  0000 0000	0000 0000 +    DW    0,0,0,0,0
    155	      0000
    156
    157	010C			     @_AX:
    158	010C  0000		       DW    0
    159	010E  0000		     _AX DW 0
    160	0110			     @_BX:
    161	0110  0000		       DW    0
    162	0112  0000		     _BX DW 0
    163	0114			     @_CX:
    164	0114  0000		       DW    0
    165	0116  0000		     _CX DW 0
    166	0118			     @_DX:
    167	0118  0000		       DW    0
    168	011A  0000		     _DX DW 0
    169	011C			     @_FL:
    170	011C  0000		       DW    0
    171	011E  0000		     _FL DW 0
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 4
NF12.asm



    172
    173	0120			     _start:
    174	0120  BB 1000		       mov   bx,1000h	  ; only 64k allocate
    175	0123  B4 4A		       mov   ah,4ah
    176	0125  CD 21		       int   21h
    177				       _ALIGN
1   178					     __ALIGN 0
2   179					     IF	($-@_START+0) AND 1
2   180	0127  90			     NOP
2   181					     ENDIF
    182	0128			     @_ABORT:
    183	0128  FC		       CLD
    184	0129  BC FE00		       MOV   RSP,@RTOP
    185	012C  B8 FB00		       MOV   DSP,@STOP
    186				       __ALIGN 1
1   187					     IF	($-@_START+1) AND 1
1   188					     NOP
1   189					     ENDIF
    190	012F  E8 002E		       CALL  @_RET
    191	0132			     @_INIT:
    192	0132  0000		       DW    0
    193
    194
    195				       _ALIGN
1   196					     __ALIGN 0
2   197					     IF	($-@_START+0) AND 1
2   198					     NOP
2   199					     ENDIF
    200	0134			     @_INT:
    201	0134  55		       PUSH  AR
    202				       X
1   203	0135  94		       xchg Rsp,DSP
    204	0136  88 0E 0144r	       MOV PB @INTNOM,TOPL
    205	013A  5F 5B 59 5A	       POP   DST BX CX DX
    206				       X
1   207	013E  94		       xchg Rsp,DSP
    208				       RCHG  DST
1   209	013F  97		       xchg  ax,DST
    210	0140  57 1E 06		       PUSH  DST DS ES
    211	0143  CD 21		       INT   21H
    212	      =MYCSEG:0144	     @INTNOM = $-1
    213	0145  07 1F 5F		       POP   ES	DS DST
    214				       RCHG  DST
1   215	0148  97		       xchg  ax,DST
    216	0149  9C		       PUSHF
    217	014A  8F 06 011Er	       POP   _FL
    218	014E  89 16 011Ar	       MOV   _DX,DX
    219	0152  89 0E 0116r	       MOV   _CX,CX
    220	0156  89 1E 0112r	       MOV   _BX,BX
    221	015A  89 3E 010Er	       MOV   _AX,DST
    222				       _ALIGN
1   223					     __ALIGN 0
2   224					     IF	($-@_START+0) AND 1
2   225					     NOP
2   226					     ENDIF
    227	015E			     @_POPA:
    228	015E  5D		       POP AR
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 5
NF12.asm



    229
    230				       _ALIGN
1   231					     __ALIGN 0
2   232					     IF	($-@_START+0) AND 1
2   233	015F  90			     NOP
2   234					     ENDIF
    235	0160			     @_RET:
    236	0160  5B		       POP IP
    237				       JMPS  _MAIN
1   238	0161  EB 41			       jmp  SHORT _MAIN
    239
    240				     ; DATA TRANSFER  COMMANDS	@R+ !R+	XCHG XA	C!R+ C@R+,
    241				      _ALIGN
1   242					     __ALIGN 0
2   243					     IF	($-@_START+0) AND 1
2   244	0163  90			     NOP
2   245					     ENDIF
    246
    247				      _ALIGN
1   248					     __ALIGN 0
2   249					     IF	($-@_START+0) AND 1
2   250					     NOP
2   251					     ENDIF
    252	0164			     @_CRTO:			     ; C!R+,
    253				       RCHG  TOP
1   254	0164  91		       xchg  ax,TOP
    255	0165  5F		       POP   DST
    256	0166  AA		       STOSB
    257				       JMPS  _RTO
1   258	0167  EB 04			       jmp  SHORT _RTO
    259
    260				      _ALIGN
1   261					     __ALIGN 0
2   262					     IF	($-@_START+0) AND 1
2   263	0169  90			     NOP
2   264					     ENDIF
    265	016A			     @_RTO:			     ; !R+,
    266				       RCHG  TOP
1   267	016A  91		       xchg  ax,TOP
    268	016B  5F		       POP   DST
    269	016C  AB		       STOSW
    270	016D			     _RTO:
    271	016D  57		       PUSH  DST
    272				       RCHG  TOP
1   273	016E  91		       xchg  ax,TOP
    274				       JMPS  @_DROP
1   275	016F  EB 43			       jmp  SHORT @_DROP
    276
    277				      _ALIGN
1   278					     __ALIGN 0
2   279					     IF	($-@_START+0) AND 1
2   280	0171  90			     NOP
2   281					     ENDIF
    282	0172			     @_RAT:			     ; @R+,
    283				       _DUP_
1   284				       TO_D  TOP
2   285				       X
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 6
NF12.asm



3   286	0172  94		       xchg Rsp,DSP
2   287	0173  51		       PUSH   TOP
2   288				       X
3   289	0174  94		       xchg Rsp,DSP
    290				       RCHG  TOP
1   291	0175  91		       xchg  ax,TOP
    292	0176  5E		       POP   SRC
    293	0177  AD		       LODSW
    294				       JMPS  _RAT
1   295	0178  EB 08			       jmp  SHORT _RAT
    296
    297				      _ALIGN
1   298					     __ALIGN 0
2   299					     IF	($-@_START+0) AND 1
2   300					     NOP
2   301					     ENDIF
    302	017A			     @_CRAT:			     ; C@R+,
    303				       _DUP_
1   304				       TO_D  TOP
2   305				       X
3   306	017A  94		       xchg Rsp,DSP
2   307	017B  51		       PUSH   TOP
2   308				       X
3   309	017C  94		       xchg Rsp,DSP
    310				       RCHG  TOP
1   311	017D  91		       xchg  ax,TOP
    312	017E  5E		       POP   SRC
    313	017F  AC		       LODSB
    314	0180  32 E4		       XOR   AH,AH
    315	0182			     _RAT:
    316	0182  56		       PUSH  SRC
    317				       RCHG  TOP
1   318	0183  91		       xchg  ax,TOP
    319				       JMPS  _MAIN
1   320	0184  EB 1E			       jmp  SHORT _MAIN
    321
    322				      _ALIGN
1   323					     __ALIGN 0
2   324					     IF	($-@_START+0) AND 1
2   325					     NOP
2   326					     ENDIF
    327	0186			     @_XCHG:			     ; XCHG,
    328				       R_TO  W
1   329	0186  5A		       POP    W
    330	0187  87 CA		       XCHG  TOP,W
    331				       JMPS  _MAIN
1   332	0189  EB 19			       jmp  SHORT _MAIN
    333
    334				      _ALIGN
1   335					     __ALIGN 0
2   336					     IF	($-@_START+0) AND 1
2   337	018B  90			     NOP
2   338					     ENDIF
    339	018C			     @_XA:			     ; XA,
    340				       R_TO  W
1   341	018C  5A		       POP    W
    342	018D  87 EA		       XCHG  AR,W
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 7
NF12.asm



    343				       JMPS  _MAIN
1   344	018F  EB 13			       jmp  SHORT _MAIN
    345
    346				     ; CONTROL	    COMMANDS  (IF (JUMP	(RETURN	(IF-
    347				      _ALIGN
1   348					     __ALIGN 0
2   349					     IF	($-@_START+0) AND 1
2   350	0191  90			     NOP
2   351					     ENDIF
    352	0192			     @_IF:			     ; (IF,
    353	0192  E3 08		       JCXZ  @_JUMP
    354
    355	0194			     @SKIP:
    356	0194  43		       INC   IP
    357	0195  43		       INC   IP
    358				       JMPS  _MAIN
1   359	0196  EB 0C			       jmp  SHORT _MAIN
    360
    361				      _ALIGN
1   362					     __ALIGN 0
2   363					     IF	($-@_START+0) AND 1
2   364					     NOP
2   365					     ENDIF
    366	0198			     @_IFM:			     ; (IF-.
    367	0198  49		       DEC   TOP
    368	0199  79 F9		       JNS   @SKIP
    369
    370				      _ALIGN
1   371					     __ALIGN 0
2   372					     IF	($-@_START+0) AND 1
2   373	019B  90			     NOP
2   374					     ENDIF
    375	019C			     @_JUMP:			     ; (JUMP,
    376	019C  8B 1F		       MOV   IP,[IP]
    377				       JMPS  _MAIN
1   378	019E  EB 04			       jmp  SHORT _MAIN
    379
    380				     ; MAIN  LOOP
    381				     ;	SKIPr	     W			     ; !!!
    382				      _ALIGN
1   383					     __ALIGN 0
2   384					     IF	($-@_START+0) AND 1
2   385					     NOP
2   386					     ENDIF
    387	01A0			     @_EX:
    388	01A0  5A		       POP   W
    389	01A1			     @NEST:			     ; (NEST
    390	01A1  87 DA		       XCHG  IP,W
    391	01A3			     @MAINW:
    392	01A3  52		       PUSH  W
    393
    394	01A4			     _MAIN:
    395	01A4  8B 17		       MOV   w,[IP]
    396	01A6  8D 5F 02		       LEA   IP,[IP+2]
    397	01A9  F6 C2 01		       TEST  WL,1
    398	01AC  74 F3		       jE    @nest
    399	01AE  4A		       DEC   W
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 8
NF12.asm



    400	01AF  FF E2		       JMP   W
    401
    402				     ;	STACK COMMANDS	 PUSH DUP J POP
    403				      _ALIGN
1   404					     __ALIGN 0
2   405					     IF	($-@_START+0) AND 1
2   406	01B1  90			     NOP
2   407					     ENDIF
    408	01B2			     @_PUSH:			     ; PUSH,
    409				       TO_R  TOP
1   410	01B2  51		       PUSH   TOP
    411
    412				      _ALIGN
1   413					     __ALIGN 0
2   414					     IF	($-@_START+0) AND 1
2   415	01B3  90			     NOP
2   416					     ENDIF
    417	01B4			     @_DROP:
    418				       _DROP_
1   419				       D_TO  TOP
2   420				       X
3   421	01B4  94		       xchg Rsp,DSP
2   422	01B5  59		       POP    TOP
2   423				       X
3   424	01B6  94		       xchg Rsp,DSP
    425				       JMPS  _MAIN
1   426	01B7  EB EB			       jmp  SHORT _MAIN
    427
    428				      _ALIGN
1   429					     __ALIGN 0
2   430					     IF	($-@_START+0) AND 1
2   431	01B9  90			     NOP
2   432					     ENDIF
    433	01BA			     @_DUP:			     ; DUP,
    434				       to_r  top
1   435	01BA  51		       PUSH   top
    436
    437				      _ALIGN
1   438					     __ALIGN 0
2   439					     IF	($-@_START+0) AND 1
2   440	01BB  90			     NOP
2   441					     ENDIF
    442	01BC			     @_POP:			     ; POP,
    443				       _DUP_
1   444				       TO_D  TOP
2   445				       X
3   446	01BC  94		       xchg Rsp,DSP
2   447	01BD  51		       PUSH   TOP
2   448				       X
3   449	01BE  94		       xchg Rsp,DSP
    450
    451				      _ALIGN
1   452					     __ALIGN 0
2   453					     IF	($-@_START+0) AND 1
2   454	01BF  90			     NOP
2   455					     ENDIF
    456	01C0			     @_DRPOP:
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 9
NF12.asm



    457				       R_TO  TOP
1   458	01C0  59		       POP    TOP
    459	01C1  EB E1		       JMP   _MAIN
    460
    461				     ;	STACK	COMMANDS
    462				      _ALIGN
1   463					     __ALIGN 0
2   464					     IF	($-@_START+0) AND 1
2   465	01C3  90			     NOP
2   466					     ENDIF
    467	01C4			     @_J:			     ; J,
    468				       _DUP_
1   469				       TO_D  TOP
2   470				       X
3   471	01C4  94		       xchg Rsp,DSP
2   472	01C5  51		       PUSH   TOP
2   473				       X
3   474	01C6  94		       xchg Rsp,DSP
    475				       R_TO  W
1   476	01C7  5A		       POP    W
    477				       R_TO  TOP
1   478	01C8  59		       POP    TOP
    479				       TO_R  TOP
1   480	01C9  51		       PUSH   TOP
    481				       JMPS  @MAINW
1   482	01CA  EB D7			       jmp  SHORT @MAINW
    483
    484				     ; MATH	    COMMANDS  +2/ +* -/	NAND
    485				      _ALIGN
1   486					     __ALIGN 0
2   487					     IF	($-@_START+0) AND 1
2   488					     NOP
2   489					     ENDIF
    490	01CC			     @_DIVMOD:			     ; -/,
    491				       X
1   492	01CC  94		       xchg Rsp,DSP
    493	01CD  5A		       POP   W
    494	01CE  D1 E2		       SHL   W,1
    495	01D0  D1 D1		       RCL   TOP,1
    496	01D2  3B CD		       CMP   TOP,AR
    497	01D4  72 03		       JB    _MDIV
    498	01D6  2B CD		       SUB   TOP,AR
    499	01D8  42		       INC   W
    500	01D9			     _MDIV:
    501	01D9  52		       PUSH  W
    502	01DA			     _MDIV2:
    503				       X
1   504	01DA  94		       xchg Rsp,DSP
    505	01DB  EB C7		       JMP   _MAIN
    506
    507				      _ALIGN
1   508					     __ALIGN 0
2   509					     IF	($-@_START+0) AND 1
2   510	01DD  90			     NOP
2   511					     ENDIF
    512	01DE			     @_P2DIV:			     ; +2/,
    513				       X
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 10
NF12.asm



1   514	01DE  94		       xchg Rsp,DSP
    515	01DF  5A		       POP   W
    516	01E0  03 D1		       ADD   W,TOP
    517	01E2  8B CA		       MOV   TOP,W
    518	01E4  D1 D9		       RCR   TOP,1
    519				       JMPS  _MDIV
1   520	01E6  EB F1			       jmp  SHORT _MDIV
    521
    522				      _ALIGN
1   523					     __ALIGN 0
2   524					     IF	($-@_START+0) AND 1
2   525					     NOP
2   526					     ENDIF
    527	01E8			     @_PMUL:			     ; +*,
    528				       X
1   529	01E8  94		       xchg Rsp,DSP
    530	01E9  5A		       POP   W
    531	01EA  F6 C2 01		       TEST  WL,1
    532	01ED  74 02		       JE    _PMUL2
    533	01EF  03 CD		       ADD   TOP,AR
    534	01F1			     _PMUL2:
    535	01F1  D1 D9		       RCR   TOP,1
    536	01F3  D1 DA		       RCR   W,1
    537				       JMPS  _MDIV
1   538	01F5  EB E2			       jmp  SHORT _MDIV
    539
    540				      _ALIGN
1   541					     __ALIGN 0
2   542					     IF	($-@_START+0) AND 1
2   543	01F7  90			     NOP
2   544					     ENDIF
    545	01F8			     @_NAND:			     ; NAND,
    546				       X
1   547	01F8  94		       xchg Rsp,DSP
    548	01F9  5A		       POP   W
    549	01FA  23 CA		       AND   TOP,W
    550	01FC  F7 D1		       NOT   TOP
    551				       JMPS  _MDIV2
1   552	01FE  EB DA			       jmp  SHORT _MDIV2
    553
    554	0200			     @_end:
    555
    556	      =0000		     lastw = ppppp
    557
    558	0200			     MyCseg  ends
    559					     end  @_Start
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 11
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "12/08/18"
??FILENAME		Text   "NF12	"
??TIME			Text   "22:48:06"
??VERSION		Number 0314
@CPU			Text   0101H
@CURSEG			Text   MYCSEG			   #135
@FILENAME		Text   NF12
@INTNOM			Number MYCSEG:0144		   204	#212
@MAINW			Near   MYCSEG:01A3		   #391	 482
@NEST			Near   MYCSEG:01A1		   #389	 398
@RTOP			Number -0200			   #143	 184
@SKIP			Near   MYCSEG:0194		   #355	 368
@STOP			Number -0500			   #144	 185
@TBUF			Number -0100			   #141	 142  144
@TIB			Number -0200			   #142	 143  144  145
@VOCTOP			Number -1800			   #145
@WORDSIZE		Text   2			   #135
@_ABORT			Near   MYCSEG:0128		   #182
@_AX			Near   MYCSEG:010C		   #157
@_BX			Near   MYCSEG:0110		   #160
@_CRAT			Near   MYCSEG:017A		   #302
@_CRTO			Near   MYCSEG:0164		   #252
@_CX			Near   MYCSEG:0114		   #163
@_DIVMOD		Near   MYCSEG:01CC		   #490
@_DROP			Near   MYCSEG:01B4		   275	#417
@_DRPOP			Near   MYCSEG:01C0		   #456
@_DUP			Near   MYCSEG:01BA		   #433
@_DX			Near   MYCSEG:0118		   #166
@_END			Near   MYCSEG:0200		   #554
@_EX			Near   MYCSEG:01A0		   #387
@_FL			Near   MYCSEG:011C		   #169
@_IF			Near   MYCSEG:0192		   #352
@_IFM			Near   MYCSEG:0198		   #366
@_INIT			Near   MYCSEG:0132		   #191
@_INT			Near   MYCSEG:0134		   #200
@_J			Near   MYCSEG:01C4		   #467
@_JUMP			Near   MYCSEG:019C		   353	#375
@_NAND			Near   MYCSEG:01F8		   #545
@_OPER			Near   MYCSEG:0102		   #153
@_P2DIV			Near   MYCSEG:01DE		   #512
@_PMUL			Near   MYCSEG:01E8		   #527
@_POP			Near   MYCSEG:01BC		   #442
@_POPA			Near   MYCSEG:015E		   #227
@_PUSH			Near   MYCSEG:01B2		   #408
@_RAT			Near   MYCSEG:0172		   #282
@_RET			Near   MYCSEG:0160		   190	#235
@_RTO			Near   MYCSEG:016A		   #265
@_START			Byte   MYCSEG:0100		   #147	 179  187  197	224  232  243  249  262	 279  299  324	336  349  +
							   363	372  384  405  414  430	 439  453  464	487  509  524  542  559
@_XA			Near   MYCSEG:018C		   #339
@_XCHG			Near   MYCSEG:0186		   #327
AR			Number BP			   #118	 201  228  342	496  498  533
AT_			Number -0004			   #8
DSP			Number AX			   #116	 185  203  207	286  289  306  309  421	 424  446  449	471  474  +
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 12
Symbol Table



							   492	504  514  529  547
DST			Number DI			   #121	 205  209  210	213  215  221  255  268	 271
IP			Number BX			   #115	 236  356  357	376  376  390  395  396	 396
LASTW			Number 0000			   #556
PB			Text   byte  ptr		   #5  204
PD			Text   dword ptr		   #3
PPPPP			Number 0000			   #81	556
PW			Text   word  ptr		   #4
QQQQQ			Number 0000			   #80	81
RSP			Number SP			   #117	 184  203  207	286  289  306  309  421	 424  446  449	471  474  +
							   492	504  514  529  547
SRC			Number SI			   #122	 292  312  316
TOP			Number CX			   #119	 254  267  273	287  291  307  311  318	 330  367  410	422  435  +
							   447	458  472  478  480  495	 496  498  516	517  518  533  535  549	  +
							   550
TOPL			Number CL			   #120	 204
TO_			Number -0002			   #7
VL_			Number 0002			   #9
W			Number DX			   #123	 329  330  341	342  388  390  392  395	 399  400  476	493  494  +
							   499	501  515  516  517  530	 536  548  549
WL			Number DL			   #124	 397  531
_AX			Word   MYCSEG:010E		   #159	 221
_BX			Word   MYCSEG:0112		   #162	 220
_CX			Word   MYCSEG:0116		   #165	 219
_DX			Word   MYCSEG:011A		   #168	 218
_FL			Word   MYCSEG:011E		   #171	 217
_MAIN			Near   MYCSEG:01A4		   238	320  332  344  359  378	 #394  426  459	 505
_MDIV			Near   MYCSEG:01D9		   497	#500  520  538
_MDIV2			Near   MYCSEG:01DA		   #502	 552
_PMUL2			Near   MYCSEG:01F1		   532	#534
_RAT			Near   MYCSEG:0182		   295	#315
_RTO			Near   MYCSEG:016D		   258	#270
_START			Near   MYCSEG:0120		   149	#173

Macro Name						   Cref	(defined at #)

DROP2							   #73
DUP2							   #66
D_TO							   #52	419
JMPS							   #11	148  237  257  274  294	 319  331  343	358  377  425  481  519	  +
							   537	551
RCHG							   #62	208  214  253  266  272	 290  310  317
R_TO							   #38	328  340  457  475  477
SKIPA							   #15
SKIPB							   #19
SKIPR							   #23
TO_D							   #42	284  304  444  469
TO_R							   #33	409  434  479
X							   #29	202  206  285  288  305	 308  420  423	445  448  470  473  491	  +
							   503	513  528  546
_ALIGN							   #103	 177  195  222	230  241  247  260  277	 297  322  334	347  361  +
							   370	382  403  412  428  437	 451  462  485	507  522  540
_DROP_							   #58	418
_DUP_							   #48	283  303  443  468
__ALIGN							   #97	178  186  196  223  231	 242  248  261	278  298  323  335  348	  +
							   362	371  383  404  413  429	 438  452  463	486  508  523  541
__ENTRY							   #107
Turbo Assembler	 Version 3.2	    12/08/18 22:48:06	    Page 13
Symbol Table



__LN							   #90
__NAM							   #83

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

MYCSEG			16  0200 Para	none		   #135	 137  137  137	137
