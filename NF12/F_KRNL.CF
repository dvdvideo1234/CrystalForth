$100 ORG!                 

INCLUDE NF12.CF
INCLUDE NF12.C1    
           
241 =: --END--

APT-     _ABORT   =: ABORT   
APT-     _@INIT   =: `INIT    
APT-     _HX      =: |H
APT-     _H       =: H       
APT-     _TX      =: |T      
APT-     _T       =: T       
APT-     _LTIBX   =: |LTIB   
APT-     _LTIB    =: LTIB    
APT-     _ETIB    =: ETIB  
APT-     _MSG     =: MESSAGE    
APT-     _TBUF    =: TBUF    
APT-     _VNUMC   =: vNUMC   
APT-     _VTARG   =: vTARG     
APT-     _RELSP   =: _THEN
APT-     _SWAPST  =: SWAP!
APT-     _ST      =: !
APT-     _MARKP   =: _MARK
APT-     _ZCOM    =: Z,
APT-     _0       =: 0       
APT-     _DZ0     =: (D#0
APT-     _SET2    =: (SET2    
APT-     _SET     =: (SET     
APT-     __@COM   =: (@,   
APT-     _@COM    =: @,   
APT-     _LD      =: @      
APT-     _CON     =: (CON     
APT-     _EXIT    =: EXIT    
APT-     _STR     =: STR     
APT-     _CSTR    =: CSTR    
APT-     _XCOM    =: |,   
APT-     _COMMA   =: ,   
APT-     _STP     =: !+     
APT-     _VAR     =: (VAR     
APT-     _XLIT    =: |LIT,,  
APT-     _LITCC   =: LIT,,  
APT-     _COMLIT  =: LIT,  
APT-     _LIT     =: (LIT     
APT-     _ABDOT   =: ((A"   
APT-     _XN??    =: |N??    
APT-     _N??     =: N??     
APT-     _??      =: ?? 
APT-     _BRK     =: _BRK      
APT-     _BK      =: (BK      
APT-     _OSTR    =: (?S   
APT-     _IO      =: (IO      
APT-     _RET     =: (;     
APT-     _IF      =: (IF      
APT-     _SKIP    =: SKIP    
APT-     _IFM     =: (IF-     
APT-     _NEXTP   =: (NEXT+   
APT-     _@DBG    =: (@DBG  
APT-     _NEXT    =: (NEXT    
APT-     _MIF     =: (-IF     
APT-     _NFOR    =: (FOR+    
APT-     _FOR     =: (FOR     
APT-     _JUMP    =: (DEF    
APT-     _BE      =: (BE      
APT-     _RSTM    =: !R-   
APT-     _RST     =: !R    
APT-     _RLDM    =: @R-    
APT-     _RLD     =: @R     
APT-     _RLDP    =: @R+    
APT-     _RSTBP   =: C!R+   
APT-     _RSTP    =: !R+    
APT-     _RLDBP   =: C@R+   
APT-     _XR      =: XR      
APT-     _XA      =: XA      
APT-     _1M      =: 1-      
APT-     _1P      =: 1+      
APT-     _RDRPX   =: RDROP;   
APT-     _NOP     =: NOP   
APT-     _EX      =: EX      
APT-     _NIP     =: NIP     
APT-     _DROP    =: DROP    
APT-     _DROPX   =: DROPX   
APT-     _PUSH    =: PUSH    
APT-     _J       =: J       
APT-     _DUP     =: DUP     
APT-     _STKP    =: SP@    
APT-     _OVER    =: OVER    
APT-     _POP     =: POP     
APT-     _POPX    =: POP;    
APT-     _RDROP   =: RDROP   
APT-     _SWAP    =: SWAP    
APT-     _XOR     =: XOR     
APT-     _MDIV    =: -/    
APT-     _P2DIV   =: +2/   
APT-     _2DIV    =: 2/    
APT-     _PMUL    =: +*    
APT-     _D2DIV   =: D2/   
APT-     _NAND    =: NAND    
APT-     _NEG     =: NEG     
APT-     _ZEQ     =: 0=     
APT-     _NOT     =: NOT     
APT-     _ULESS   =: U<
APT-     _ODD     =: ODD
APT-     _0LESS   =: 0<
APT-     _TOKEN?  =: TOKEN?  
APT-     _TOKEN   =: TOKEN   
APT-     _?C@     =: ?C@     
APT-     _C@      =: C@
APT-     _BCON    =: (C@
APT-     _WORD    =: WORD    
APT-     _PARSE   =: PARSE   
APT-     _PARS    =: (PARS    
APT-     _CFNDTAR =: CFNDT
APT-     _CFIND   =: CFND   
APT-     _COMTICK =: ,'   
APT-     _TICK    =: '   
APT-     _FINDT   =: FIND    
APT-     _FIND    =: FND    
APT-     _TONUMC  =: ">NUMC  
APT-     _TONUM   =: ">NUM   
APT-     _ATOI    =: (ATOI    
APT-     _HDICT   =: H>DICT   
APT-     _TODICT  =: >DICT  
APT-     _MPUSH   =: MPUSH   
APT-     _XTBUF   =: |S>TBUF"!   
APT-     _TOTBUF  =: S>TBUF"!  
APT-     _MKSTR   =: S>"!   

' (DEF =: (JUMP 

\ =! STATE?

0 VALUE; CNTC
:VALUE EMIT CNTC; 1+ ; 
' (BE   ' EMIT T!

: OVER- OVER
: -  NEG 
: +  +2/
: DROP;  DROPX ; UNW
 
\ INCLUDE EXT.CF      
  
: STATE! POP (SET2
: FINDEX  (JUMP ;;

: REINI  POP (SET2
: @INIT  (JUMP ;;

: vERR  NOP ;  
: vOK  NOP ;  

1 =: BYE

: TARG:` : =H H    : =: 0 : =F TOKEN?
  \ DUP ID.
  \ 12 STATE?
: (=:     ?C@ 1+ |T MPUSH TWICE : !- PUSH !R- POP; ; UNW
      
      \   COMPILER
      
: TARG: NOP =H      : TARG>, STATE!   
  CFNDT IF @ DUP ODD IF CSWAP> , ;THEN
  vTARG FND vNUMC ?; @, ;THEN
: EXECUTE PUSH ;

      \   INTERPRETTER 
      
: TARG,< STATE! 
: `INTER FIND 
  \ 1 STATE?
  IF @ CALL SKIP THEN (SET : `LASTWORD NOP 
  \ 2 STATE?
  ;; THEN 
  \ 3 STATE?
  ,< 
' ">NUM DEFER vNUM
: TARG;  NOP TARG,<  : ;, (@, ;;

      \ LAST WORDS 


: (MAC (D#0
: SEVAL CSTR
: EVAL NOP
: @EVAL 
  \ 4 STATE? 
  TOKEN 
  \ 5 STATE? 
  \ OVER ID.
  \ 10 STATE?  
  DROP; ?; 
  FINDEX 
  \ 6 STATE?
RECURSE ;

: READLN NOP ; \ TIB TBL 

: `INI H>DICT 
  \ 7 STATE?
    CALL 
  AHEAD CSWAP> 
    THEN 
  \ 8 STATE?
    REINI 
    MESSAGE vERR           
: QUIT TARG,< 
: `QUIT READLN
: `MAIN 
  THEN 
  \ 9 STATE?
  EVAL vOK  `QUIT ;
        
        
      \   FIXES
      
APT-  (?S     =: (?S`  
APT-  (IO     =: (IO`
APT-  (IF     =: (IF`
APT-  SKIP    =: SKIP`
APT-  (IF-    =: (IF-`
APT-  (NEXT+  =: (NEXT+`
APT-  (NEXT   =: (NEXT`
APT-  (-IF    =: (-IF`
APT-  (FOR+   =: (FOR+` 
APT-  (FOR    =: (FOR`
THIDE (DEF   
APT-  !R-     =: !R-`
APT-  !R      =: !R
APT-  @R-     =: @R-`
APT-  @R      =: @R`
APT-  @R+     =: @R+`
APT-  C!R+    =: C!R+`
APT-  !R+     =: !R+`
APT-  C@R+    =: C@R+`
APT-  XR      =: XR`
APT-  XA      =: XA`
APT-  RDROP;  =: RDROP;`
APT2  (;         ;;`
APT-  EX      =: EX`
APT-  DROPX   =: DROP;`
APT-  PUSH    =: PUSH`
APT-  POP     =: POP`
APT-  POP;    =: POP;`
APT-  RDROP   =: RDROP`

 
APT2  TARG:`  :`  
APT2  TARG;   ;`  
APT-  TARG:   =: :    
APT-  TARG>,  =: >, 
APT2  TARG,<  ,<` 
APT2  _THEN   THEN`
APT-  _MARK   =: MARK>`
'  , THIDE ,  DUP
              =: RELS<`
              =: ,   
' SWAP  THIDE SWAP  DUP  
              =: CSWAP`    
              =: SWAP    


' `INI   ' `INIT T!   \ STARTUP
META `INTER FINDEX    \ FORTH STATE
HERE    VAL' H T!     \ FORTH HEAP

      \   WORD THE ONE
12 , ' =: , 0 , "=:" -1 ALLOT \ HERE T>R 16 - 16 DUMP
THIDE =:  0 , 0 , 0 C,  

      \ ALIGNING TO 1K
      
\ 10 ALLOT       

      \ STATISTICS
      
CR ."_BODY_LENGTH_" VAL' H T@ $100 - . CR
CR ."_CODE_LENGTH_" HERE $100 - . CR
CR 1K $100 + HERE - ."BYTES_TO_ADD__" . CR

      \ SAVE RESULT
      
TSAVE PIF.COM 


      \ PREPARE NEW WORDS TO BE ASSIGNED 
      
USING PIF.COM
\ NAMES
RNAMES
USING PB5.COM

_END_OF_COMPILATION_
