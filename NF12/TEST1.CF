0#> EXECUTE @ ; 
1#> EXECUTE ! ; ,< , :, @Emt ' EMIT ,
'G  @Emt EXECUTE

\ : IDUMP (DUP  ID. ; ' IDUMP TO' ?C@  T! unw
\ : 3MAKER , : 2MAKER , : MAKER :|, : ,' ' , ;

: |SCR CALL (EX (SET2 THEN 
: SCR (CON (; 
: |XY CALL (EX (SET2 THEN 
: XY (CON (; 
: `(ERR Emt! Key! CR TBUF ID. ID. \ ERROR ROUTINE ESTABLISH 
 CR BLK 0; BLK TO SCR  AT BLK 
: XY!  XY? 
: >XY TO XY |XY 
: 1KMOD (@&; ,< 1023 , META `(ERR vERR 
 
: UNITS? D/M  0; 1+ ; 
: `BD |SPC STR| CSTR B. ; : DUMP 1H UNITS? STR| 
: DU CR DUP H. SPC 1H (OVER (OVER `BD [TYPE] ;;

\ : (VAR2 (D#1 ;; 

'3 EMIT BYE
MCLR   \ C
<M> : FOR` :FOR MARK>` BEGIN` SWAP ; : DOES>` |DROP :code : 0#>
 D# :0> ; : 1#> D# :1> ; : 2#> D# :2> ; : IO;` ,<` :IO ; 
: ELSE` |THEN |SWAP : AHEAD` |MARK> :JUMP ; 0#> : @ADR @ ADR' +
; ?:, TO' -2 , ?:, AT' -4 , :, VAL' 2 , 0#> @ADR LASTH! , ; 
?:, TO` -2 , ?:, AT` -4 , ?:, C:` Z, :, VAL` 2 , 
0#> @ADR (PUSH ; ?:, TO -2 ,  ?:, AT -4 ,  ?:, X:` Z, :, VAL  2
 , : VQUAN :VAR3 : VECTOR :SET2 : DEFER :|, :JUMP ; : @' ' @ ;
: QUAN :VAR3 : VALUE :SET2 : CONST :|, :CON ; : @VAL VAL' @ ;
: CREATE AT @H- : VARIABLE 0 : VAR :|, :VAR ; \ AT' @H- |UNW
: VAL;` :SET2 THEN` 0 CONST ,<` ;  : .(` : .( ') PARSE TYPE ; 
: UNTIL` |<RELS :IF ; : WHILE` |SWAP : IF` |MARK> :IF ; 
: UNTIL-` |<RELS :IF- ; : ?` ADR' SWAP! ; 
: NEXT` THEN` |<RELS :NEXT ; : IF-` |MARK> :IF- ; 
: |` |MARK> :| (; 2* 2* : `ARY 2* U2B POP @ :, TIMES| Z, ;
: BARY VAL `ARY :BARY : WARY `ARY :WARY : LARY TO `ARY :LARY 
: QARY AT `ARY :QARY : `DO POP ADR' ,< 0 VECTOR `vDO : DO# `DO
 TOKEN? ">NUM `vDO ; : ZDO `DO 0 `vDO ; : DO `DO `vDO ; : DO' 
 `DO ' `vDO ; : BCONST :CH. CONST ;  : 0"` :0" "STR, ;
: "` :" "STR, ; : ."` :." "STR, ; : A"` :!" "STR, ;
0#> C@, : REL, HERE 2+ - , ; ?:, CALL#, $E8 ,  :, JUMP#, $E9 ,
0#> C@, : BREL, HERE 1+ - BREL?  N?? C, ; :, JMPS, $EB , 
: =P ALIGNED  HERE 1+ =: ; M: :PROBA PROBA<M>; : META ' VAL' ! ; 
<M> 


\ CALLABLES PRIMS 
: BS, CSTR S, ; 
: ONPLACE | DXEP| TWICE| NUP THEN : REVERT |2DROP 1-U<? WHILE|
PUSH @I PUSH XR @I J C! POP C!+ POP 1-U<? ; 

ERROR

\ ERROR ROUTINE ESTABLISH    
: `(ERR  MSG Emt! Key! CR TBUF ID. ID. 29664 LTIB - 1L U/  
206 - U. CR BLK 0; BLK TO SCR  AT BLK : XY!  XY? >XY ;
META `(ERR vERR 
: 2. OVER H. DUP . ;   
\ BREAK8 A
: |KWAIT EX : K? |DROP : /LINE? 0<>; |CR BKEY 27 = 0; EOS! ;



\ CMOVE, PRUNE & DEA - DICTIONARY ENTRY ADDRESS
: >DEA 4+ : NAME> CSTR + ; : `NAMOV? DXEP| 5+ C@ '` - 0; J @ 1B
 HERE  WITHIN 0; J DUP >DEA OVER- MESSAGE CMOVTO ;
: PRUNE HERE MSG! CALL |T DROP PUSH HERE MESSAGE OVER- POP
 MPUSH ;THEN T CALL WHILE| `NAMOV? >DEA THEN DUP : DEA? 4+ C@ ;
\ : UPDATE ; : -BUF ; : /BUFS ; : FLUSH ;

\ WORDS 
: EVEN (@&; ,< -2 ,  
: `NAME. XEP| J DEA? 1 + CNTC + 80 U< /LINE?  J 4+ ID. ; 
: WORDS EOS| CR 0 T BEGIN
 DUP DEA? WHILE `NAME. >DEA U1+ EOS UNTIL THEN DROP . ; 
: FORGET FND?? DUP  >DEA TO T  @ EVEN >; OBJ!
: DICT>S CALL  OVER- 5+ ;THEN T DUP TO DEA? WHILE| AT DEA? ; 
\ : CMOVE> A+L SWAP MPUSH >; MSG! 

-------------------

\ DEBUGERR 1
: WFIND vTARG IO; $04E8 , $3B00 , $FC5D , $C3 C, ' @FIND? 
JUMP#, ALIGNED CREATE `DBGSAV Z, Z, 
: `EMTIN TO EMIT A@ `DBGSAV 2! StdEmit! CR ; : R3 POP POP POP J
 H. PUSH J H. PUSH J H. PUSH ; : `.WID. ID. : WID. 4+ ID. ; 
: @ID. DUP H. STR DUP H. SWAP @ H.  : ?ID. WFIND IF WID. ;THEN 
 2- WFIND IF " VAL" (JUMP `.WID. THEN 4+ WFIND IF " TO" (JUMP 
`.WID. THEN 2+ WFIND IF " AT" (JUMP `.WID. THEN 4 - : $. ." $" 
H. ; : DBG. `EMTIN R3 I |WAIT : `DBG SPC PUSH S3 POP HERE H. 
vTARG H. `DBGSAV @ H. SPC @ID. `DBGSAV 2@ A! AT EMIT ;



: TEST 1 2 3 " 1234" ; 0 VALUE `ADR2 : `" (WSC ,< 3 , >, (!" ("
 (." ,< : `|WW CALL EX (SET2 THEN ,< 0 CONST `WW 
 : `A:? WFIND IF ? DROP ." : " 
WID. ; : SEE ' : @SEE TO `WW : SL bs TIMES| : WW `|WW CR DUP H.
 DUP `A:? STR DUP H. DUP ?ID. `" 1+ 0; PUSH ("R+ [ID] POP ;
 
=P 4TH>  $E3FF , \ DEBUGERR 2 \ STEP BY STEP
: TRACE ' CALL : TROFF IO; $8BB9 , $0F C, HERE =: `@X_TRACE
   $0E87 , @VAL ;;` , $C3 C,  : TRONEX THEN PUSH
: TRON IO; $EBB9 ,  @VAL :NEXT` 4 - @VAL ;;` 2+ - 
  BREL? N?? C, ' `@X_TRACE JMPS, ALIGNED
: @DBG      ,<  VAL' TROFF CALL#,   @VAL EX` 1- CALL#, >, 
 `EMTIN R3 I `DBG BKEY  4TH> ,< 
VAL' TRON  CALL#,    $DF24 , $533C ,  $75AD , 03 C,
VAL' TROFF CALL#,    $8B5B , $F C, @VAL ;;` 2+ JUMP#, ALIGNED
' @DBG @VAL :NEXT` 1- -      @VAL :NEXT` 3 - !
VAL' TROFF  @' RESTART 8 + - @' RESTART 6 + !
HIDE 4TH>   HIDE @DBG

SPC H H. H DUP U. .   DFH-DFG-HDF-GHD-FGH

\ PREPARE FOR COMPILING EDITOR


\ COMPARING PRIMITIVES  
: RED| 2DUP EX IF ? SWAP ; 
: UMAX |NIP : URED RED| U< ; : UMIN |DROP URED ; 
: MAX |NIP  : REDI RED| < ;
: MIN |DROP >; REDI

\ EMPTY FOR NOW STUBS

: { '} PARSE 2DROP ;    ' { =: {` \ }
' \ =: \`       \ COMMENTS WORKS NOW IN COMPILER STATE
\ : _BLK 1K U* 1B + ;  ' _BLK DEFER BLOCK

: SCR- |SCR DUP 0; 1- ; : SCR+ |SCR 1+ ;

: |SPTR CALL EX (SET2 THEN ,< 0 CONST SPTR
0 VALUE SPTRTOP   
: (@|; @R+ RDROP : OR NOT SWAP NOT NAND ;

: S> SPTR : SDROP |SPTR : NAME> CSTR + ; : SPTRTOP? SPTRTOP T -
 SPTR SPTRTOP U< 0= OR 0; T DUP  TO SPTRTOP TO SPTR TWICE| D0 
: >S W>B |SPTR MPUSH 1- ; : >S! CSTR >S ;  

: LIST DUP TO SCR BLOCK : .BLOCK CALL SCR : NU. 6 U.R ;THEN 
 1H STR| 1H J NOT + J ?|CR : .LINE 2 U.RS 1L [TYPE] ;

\ ' (# =: (LIT


17 . \ 17 BLOCK1 OF EDITOR
ZDO VALUE 6 TIMES  `PDATA `INS  `SZ  `ALTER `X `Y
' ETIB =: `EOS^ 

: `MOVER CONST DOES> @ : `XY+ |XY + ; 4 `MOVER `4+> 
-1 `MOVER `<-  1 `MOVER `->  -64 `MOVER `L_UP 64 `MOVER `L_DN    
: `L_END |XY : `/L (@|; ,< 63 , : `<_| `L_DN  : `L_BEG |XY L/ ;
: `|POS XY EX `PDATA + ; : `POS^ `|POS ;; ,< 
: `LINE/ `|POS L/ ;  : `/LINE `|POS `/L ; : `EOL `|POS `/L 1+ ;
: `PREPINS XEP|  `POS^ J `SZ - DUP : `SZBLANK `SZ BLANK ;
: `|DELPOS `POS^ DUP `SZ + OVER `SZBLANK EX ONPLACE ;
: `|INSPOS EX `PREPINS ONPLACE ; : `SZMOV `/LINE `POS^ - ;
: `REST 1K XY - ;


18 . \  BLOCK2 OF EDITOR
: `XY>CR XY 1L U/MOD TO `Y TO `X ; : `_INS `INS 0= TO `INS ; 
75 15 >POS: `ENDPOS EOS! ; : `ESQ/E /BUFS `ENDPOS ; 
72 0 >POS: `.INS `INS IF ." INS" ;THEN ." OVT" ; 
70 2 >POS: `.INBUF XY NU. ; : `Q/ED FLUSH `ENDPOS ; 
70 4 >POS: `.X.Y `X 3 U.R `Y 3 U.R ; 
70 6 >POS: `.CH `POS^ C@ DUP '$ EMIT B. 3 .R ; 
70 8 >POS: `.TEST ."  TEST " `Y . ;
: `STATE. `.INS `.INBUF `.CH `XY>CR `.X.Y
: `POSXY `X 4+ `Y GOTOXY ;
: `|LDRU 1 TO `SZ EX UPDATE `POSXY `LINE/ `Y TO cr .LINE DROP ;
: `TAB> `4+> SKIP : `<TAB  `<- |XY (@&; ,< -4 , 
: `RELOAD SCR BLOCK DUP TO `PDATA 1K + TO ETIB  SPTRTOP? ;

19 . \  BLOCK2 OF EDITOR
: `1L<?| 1L   : `>SZ?| TO `SZ 
: `SZ<?| `REST `SZ U< IF RDROP; THEN : `|RDRC EX SKIP
: `RESET -BUF : `LOADRAW `RELOAD : `REDRAW HOME `PDATA .BLOCK ;
: `B SCR- SKIP : `N SCR+ `LOADRAW ; : `ZPOS 0 TO XY ;  
: `ALT GO| ? `LOADRAW `ALTER |SCR TO `ALTER ; 
: `DELL `1L<?| : `DO-DEL `|DELPOS `EOS^ ; 
: `INSL `1L<?| : `DO-INS `|INSPOS `EOS^ ; 
: `INSC `|LDRU CALL `POS^ C! ;THEN `INS 0; `SZMOV 0; `|INSPOS
 `EOL ; : `BS `<-  : `DELC `|LDRU `|DELPOS `EOL ; : `ONEC DUP
 BL U< IF : `WHAT? DROP : WHAT? 7 EMIT ;THEN `INSC `-> ;
: `TEST BL `POS^ C@ U< ;  : `<XY0; `<- : `XY0; XY >; 0;
: `BACK BEGIN `<XY0; `TEST UNTIL BEGIN `<XY0; `TEST 0= UNTIL 
`-> ; : `ADV `REST TO LTIB BL PARSE TO `SZ DROP XY! `XY0; `<- ;
 
20 . \  BLOCK2 OF EDITOR
: `AW `ADV : `PREP { ARE} `BACK  : `SKIP `ADV `-> ;
: `SCR; `ZPOS `<- : `PREPARE `L_END `PREP ;
: `altS 1L 1+ `>SZ?| 1L TO `SZ `POS^
`<_| `DO-INS `POS^ 2DUP - NUP - ONPLACE ; 
: `COPY `1L<?| RDROP : `DO-COPY `POS^ `SZ DUP `XY+ >S ; 
: `CUT `1L<?| : `DO-CUT `DO-COPY  `SZ NEG `XY+ `DO-DEL ;
: `BKCW `AW `BACK `BACK 
: `CUTW `AW `SZ 0; `SZ 1+ TO `SZ `BACK `|RDRC `DO-CUT `PREP ; 
: `MOVE `CUTW `SZ 0; GO| ? `SKIP 
: `PASTE SPTR C@ DUP TO `SZ 0; `SZ<?| 
: `DO-PASTE `DO-INS S> 1+ `POS^ `SZ CMOVE ; 

: `WIPE ;



21 . \  BLOCK5 OF EDITOR \ KEY CONSTANTS}
DO# =: 19 TIMES 
30 kaA 75 kLEFT 72 kUP 71 kHOME 79 kEND 73 kPGUP 81 kPGDN
80 kDOWN 77 kRIGHT 82 kINS 83 kDEL 17 kaW 116 kcRIGHT
115 kcLEFT 117 kcEND 15 ksTAB 119 kcHOME 31 kaS 32 kaD
 
@' (BSC :, `EFtblC 19 C,  DO' C, 19 TIMES 
 kaA kLEFT kUP kHOME kEND kPGUP kPGDN kDOWN kRIGHT kINS kDEL
 kaW kcRIGHT kcLEFT kcEND ksTAB kcHOME kaS kaD 

ALIGNED : `EFtbl (WARY  
 `WHAT? `ALT `<- `L_UP `L_BEG `L_END `B `N `L_DN `-> `_INS
 `DELC `WIPE `ADV `BACK `SCR; `<TAB `ZPOS `altS `DELL ,<

22 . \  BLOCK5 OF EDITOR \ KEY CONSTANTS
 @' (BSC :, `EKtblC  20 C, DO# C, 20 TIMES
^J ^K ^X 127 ^H ^D ^M ^G ^Z ^N ^B ^R ^I ^C ^V ^Q ^F ^A ^[ ^S
ALIGNED : `EKtbl (WARY
 `ONEC `<- `-> `CUT `BKCW `BS `DELC `<_| `CUTW `PREPARE `N `B
 `RESET `TAB> `COPY `PASTE `ESQ/E `MOVE `ADV `Q/ED `INSL  ,<
: `@KEY KEY W>BB DUP 
    IF     NIP `EFtblC `EFtbl   ;THEN DROP `EKtblC `EKtbl ;
: EDIT TO SCR : PE PAGE : E  D0 MEMTI| `LOADRAW EOS|
 BEGIN `STATE. `@KEY @EXECUTE EOS UNTIL ;  


23 . \  BLOCK5 OF EDITOR \ KEY CONSTANTS ;; }

EDITOR----
M: TRICE|` CALL TWICE| THEN; M: |VAL;` CALL EX (SET2 THEN ,<;
M: RANGE>|` RANGE> 1+DXEP|;  M: RANGE<|` RANGE< 1-DXEP|;  
: 2PICK PUSH OVER XR POP ; 

\ '1 '2 : GAGA BEGIN UNTIL ;  GAGA EMIT
\ : //? ?? ;  H 2- @ ' ?? - 'A + EMIT


 
: (KPRES? UNTILZ| 1B IO; $16CD , $589C , $4025 , $C300 , 
: BKEY (KPRES? BK DUP W>B 0; W>B ; 
\ ' BKEY AT KEY META BKEY Key!
