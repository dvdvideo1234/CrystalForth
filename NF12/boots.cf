: \ |LTIB DUP 0; 1 - (@&; ,< -64 ,   \ NOW WE HAVE COMMENTS

: |2- EX 2- ; 
: ODD (@&; ,< 1 , 
: @+ PUSH @R+ POP; ; 
 
\ STACK   
: |DROP EX DROPX ; UNW
: (UNDER @R+ PUSH  
: XEP| XR EXEC POP; 
; UNW  

: -ROT SWAP 
: USWAP XEP| SWAP 
; 
    
: ROT USWAP SWAP ;
: 2DUP OVER OVER ;
: 2PICK (UNDER OVER SWAP ;
: TREXE| PUSH J XR 
: (IXEC J PUSH 
;

\ ITERATORS & PRINTING
: (CON. (D#1 @ EMIT ; 
META (CON. SPACES

: ..TIMES |DROP  
: .TIMES |DROP  
: TIMES PUSH XR 
: TIMES| (FOR CALL BEGIN J EXEC THEN (NEXT RELS< 
: 2EXIT RDROP RDROP; ;    
' TIMES| ' SPACES T!

\ REGISTERS
: WITHIN OVER- (UNDER - U< ;  
: = - 0= ; 
: I J ;  
: I@ J @ ;
: A! PUSH XA EXIT ; 
: A@ XA I XA ; 
: 0>A| 0 
: >A| XR XA EXEC XA EXIT 
;

\ SEARCHING
: WHERE? |N?? TOKEN? vTARG FND ;         
: AT' |2-   
: TO' |2-   
: ' WHERE? @+ @ 
: ODD? ODD ?? 
;
\ : TO` TO' , ; : AT` AT' , ;
: TO TO' EXEC ; 
: AT AT' EXEC ;  
: ADR' ' DUP ODD? ; 
: VAL' ADR' 2+ ; 
: META ' 
: IS VAL' ! 
;

\ MULTIPLY & DIVIDE
: U/ |DROP  
: (/MD  >A| 0 TWICE TWICE -/ -/ -/ -/ 
; 
: U* |DROP  
: UM*   >A| 0 TWICE TWICE +* +* +* +* 
;
: UMOD |DROP    
: U/MOD (/MD SWAP 
; 

\ ERR
: `HALT ^M EMIT ^J EMIT 'E EMIT 'R EMIT 'R EMIT BYE ; 
' `HALT ' vERR  2+ T!

\ ASIGNING
: N: DUP 
: =, |, =: 
;

\ COMPILING 
HERE >, (D#0 
: C@, C@
: C, |H 
: C!+ PUSH W>B I@ DUP W>B - + !R+ POP 
: 1- (@+; ,< -1 , 
=, NOP, $90 ,
: C! C!+ DROP ;

HERE  >, (D#0 C@,
: REL, HERE 2+ - , ;
N: CALL, $E8 ,
=, JUMP, $E9 ,
HERE  >, (D#0 C@,
: BREL, HERE 1+ - DUP -128 128 WITHIN N?? C, ;
=, JMPS, $EB ,

: |ALIGNED EX 
: ALIGNED HERE ODD 0; NOP, ;;  \ NEEDS FIXING
: (GO| @R+ XR PUSH ; 
: (R#, @R+ , ;     
: ,ER (D#0 STR , @ PUSH ; 
: |UNW EX 
: UNW -2 
: ALLOT |H + 
; 
: (D#2 POP XR 
: 4+ (@+; ,< 4 ,          
: (VAR3  @R+ DROP 
: (VAR2  @R+ DROP POP; 
; UNW  

: CREATE |UNW
: VARIABLE 0
: VAR =H ,ER (VAR , ,<

: QUAN (R#, (VAR3 
: VALUE (R#, (SET2 
: CONST =H ,ER (CON , ,<

: VQUAN (R#, (VAR3 
: VECTOR (R#, (SET2 
: DEFER =H ,ER (JUMP , ,<  

' |ALIGNED  VECTOR v", 
: M: ';
: ?M: =H WORD  (R#, (VAR \ (MAC
: WORD, CSTR  
: STR,  v",  DUP C, 
: S, |DROP TIMES| CSTR  C, 
; 
: BS, CSTR  S, ;


\ PRINTING
: ((." (?S SKIP
: ID. |SPC 
: ". CSTR 
: TYPE |DROP 
: TYPE+ TIMES| CSTR EMIT 
;

: ((" (?S ; 
: |CR EX 
: CR ((." ,< $D02 , $A , >, 0 TO CNTC 
;   
: _OK ((." ,< $2003 , $4B4F , >, CR 
      ((." ,< $3E02 ,  $3E , >, ;;

META _OK vOK        



$10 CONST 1H    $40 CONST 1L    256 CONST 1B    1024 CONST 1K

: `9>? 9 OVER U< 
: `7& (@&; ,< 7 ,    
\ : S6 PUSH PUSH PUSH  CALL  POP POP POP THEN           
: S3 |SPC TREXE|  ROT DUP  
: H. 1B U/MOD CALL  
: B. |SPC THEN W>B 1H U/MOD TWICE  
: DIG. (GO| EMIT    
: ALPHA `9>? +   
: `'0'+ (@+; ,< '0 , 
  

: XY? 1K LTIB - ;
: `In1K   (@&; ,< 1K 1- ,
: `ZBLK      0 ,< 
0 VALUE BLK
: `BLK>SCR BLK ,< 
0 VALUE SCR

: |WAIT EX
: WAITKEY |DROP 
: BKEY CALL DUP W>B 0; W>B ;; THEN 0 (IO; ,< $16CD , $90C3 ,
' BKEY  VALUE StdKey

: `StdKey! StdKey ,< 
' BKEY  VALUE `KEY  >, (; ,<    
VAL' `KEY =: KEY

: `(ERR StdEmit! `StdKey! CR TBUF ID. MESSAGE ID. CR BLK 0;
   `BLK>SCR `ZBLK   
: XY!  XY?    
: >XY `In1K ,< 
0 VALUE XY

META `(ERR vERR    \ vERR FIXED


: A+L XEP| 
: I+ J + 
;
: MEMTI| A+L 0  
: TI| BLK XR LTIB PUSH ETIB PUSH PUSH CALL
  EX POP POP POP THEN  TO BLK TO LTIB TO ETIB 
: /BLK BLK 0; 0 TO ETIB 
;

: (OF OVER-  IF @R+  XR DROPX ;  UNW
: 0?SKIP DUP IF ;THEN THEN DROP @R+ DROPX ;  UNW

: . DUP 0< IF '- EMIT NEG THEN  
: U. |SPC 
: ` 10 U/MOD  0?SKIP RECURSE  DIG. ;

8 CONST bs  13  CONST cr  -$700 CONST SBUF  -$600 CONST TIB

\ : `SRC BLK 0; ETIB 0<>; BLK BLOCK 1K + TO ETIB ;

: CR?    cr OF NIP DUP ;THEN
 bs OF 2PICK OVER- 0; 1- bs EMIT SPACE bs EMIT ;THEN
 DUP BL 1B WITHIN  (IF DROP; DUP EMIT SWAP C!+ ; 
	
: `RDLN TIB 1L 
: ACCEPT 
  |SPC OVER + OVER BEGIN KEY CR? 2DUP = UNTIL NIP OVER- ;

META `RDLN READLN \ READLN FIXED


: CSP! SP@ ,< 
0 VALUE CSP
: CSP? SP@ CSP - ;
\ THIDE ;`
   
\ : ;`  ,;  CSP? TARG,< ?; ;;


\ DEBUGERR

: WFIND vTARG (IO; ,<
 $04E8 , $3B00 , $FC5D , $C3 C, ' @FIND? $E9 ,R 2ALIGNED

0 VALUE SAVEMT
: `.WID. ID. 
: `WID. 4+ ID. ; 
: `EMTIN TO EMIT TO SAVEMT  StdEmit! CR ;
: R3 POP POP POP J H. PUSH J H. PUSH J H. PUSH ;
: @ID. DUP H. STR DUP H. SWAP @ H.  
: ?ID. WFIND IF `WID. ;THEN  2+ WFIND IF "_TO" `.WID. ;THEN
  2+  WFIND IF "_AT" `.WID. ;THEN 4 -  : $. '$ EMIT H. 
;
: DBG. `EMTIN R3 I |WAIT   
: `DBG SPACE (UNDER S3 HERE H. vTARG H. A@ H.
 SPACE @ID. SAVEMT AT EMIT ;


' (; =: @MAIN
2ALIGNED
=P 4TH>  $E3FF , \ ,"~c~"  \ FROMF

: TROFF (IO; ,< $8BB9 , $0F C, 
HERE =: `@X_TRACE   $0E87 , ' @MAIN , $C3 C, 

: TRON   (IO; ,<  $EBB9 ,  ' (NEXT 4 - ' @MAIN 2+ - C, 
 $EB C, ' `@X_TRACE HERE 1+ - C, 


2ALIGNED
: @DBG      ,<  VAL' TROFF CALL,    ' _@JSR4TH CALL, >, 
 `EMTIN R3 I `DBG BKEY  4TH> ,< 
VAL' TRON  CALL,    $DF24 , $533C ,  $75AD , 03 C,
VAL' TROFF CALL,    $8B5B , $F C, ' @MAIN 2+ $E9 ,R 
2ALIGNED
: TRACE ' TRON EXEC TROFF ;

' @DBG ' (NEXT 1- -     ' (NEXT 3 - T!
' TROFF 2+ ' ABORT 8 + - ' ABORT 6 + T!

: WORDS CR T BEGIN 4+ ?C@ WHILE DUP ID. CSTR + 
72 CNTC U< IF CR THEN REPEAT DROP ;

\ 0 VALUE `WW 
\ 0 VALUE `STR
\ : `;WW `WW EX TO `WW ; 
\ : ;[] '[ EMIT EX '] EMIT ;
\ : `STR0 0 TO `STR CR DUP 2- H. OVER H. OVER ?ID.
\ : `STR1 OVER @R+ - IF ;THEN PUSH (?S TO `STR POP ;
\ : SEE ' : @SEE TO `WW : SL bs TIMES| 
\ : WW `;WW @+ `STR0 ((A" `STR1 ((" `STR1 ((." `STR 0;
\    ;[] `STR ". ;
\ : TEST 1 2 3 "1234" ;


: _IF   ,ER (IF   _MARKP ,<
: _IF-  ,ER (IF-  _MARKP ,< 
APT2  _IF     IF`
APT2  _IF-    IF-`





