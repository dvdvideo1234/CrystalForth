0 VALUE SCRH  
0 VALUE `USE  
0 VALUE `PREV 
4  DUP DUP
CONST `NBUFS  
BARY `FBUFS 
WARY  `BUFS    
: `RW 1K UM* SCRH Fseek  IO?  1K SCRH  EX IO? ;
: `WBLK `RW Fwrite ; 
: `RBLK `RW Fread ; 
: `@BUF `PREV 1K U* FIRST + ;
0#> C@ `PREV `FBUFS C! ; 
DUP  =, DISCARD  0 C, =, UPDATE  -1 C,
: -BUF DISCARD -1 
: `!BUF `PREV `BUFS ! ;
: `+BUF `USE 1+ `NBUFS 1- AND DUP TO `USE ;
: !BUFS  `NBUFS 
	LOOPS `+BUF TO `PREV
: `?SAVE `PREV `FBUFS C@ 0; `@BUF `PREV `BUFS @ `WBLK DISCARD ;
: FLUSH !BUFS 
: /BUFS `NBUFS  
	LOOPS `+BUF TO `PREV
: `EMPTY-BUF -BUF 
: `/BUF `@BUF 1K ERASE ;
: `?BUF PUSH 0 `BUFS `NBUFS POP SCAN ;
: `;ABLK /BLK 0 TO _FR XCHG PUSH J `?BUF  EX RDROP `@BUF IO? ;
: BUFFER `;ABLK -IF `?BUF  -IF DROP BEGIN `+BUF `PREV - UNTIL
     `USE THEN THEN TO `PREV `?SAVE `/BUF J `!BUF ;
: BLOCK `;ABLK -IF DROP J BUFFER J `RBLK ;THEN TO `PREV ;
: `-USE SCRH 1+ 0; SCRH Fclose 
: `/SCR -1 TO SCRH ;
: USE/ `/SCR /BUFS ;
: USING FLUSH `-USE TOKEN? FOPEN TO SCRH ;
: FCUT FLUSH `RW 0SWAP Fwrite ;
: `SRC BLK 0; ETIB 0<>; BLK BLOCK 1K + TO ETIB ;
META `SRC SOURCE
: SHOW -2 `FBUFS 10 DUMP ;

