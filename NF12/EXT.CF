: ,ER (D#0 STR , @EXEC ;   
: AT' |2- : TO' |2- : ' TOKEN? T : LOCATE FND? @ ; 
: (R#, @R+ , ; 
: (GO; @R+ XR PUSH ; 
: |DROP EX DROPX ; -2 ALLOT
: UNW |DROP 
: @H- |H 
: @- 2- DUP @ ; 

: (VAR3  @R+ DROP : (VAR2  @R+ DROP : (VAR POP; ; UNW
: QUAN (R#, (VAR3 : VALUE (R#, (SET2 : CONST =H ,ER (CON , ,<
: VQUAN (R#, (VAR3 : VECTOR (R#, (SET2 
: DEFER =H  ,ER (JUMP , ,<  \ FURTHER

: _TWICE |,  : HP _HERE 2+ ; 
: _IF   ,ER (IF   _MARKP ,<
: _IF-  ,ER (IF-  _MARKP ,< 
: DXEP| DUP : XEP| XR EXECUTE POP; ; UNW
: ((" (?S ;;
: `RDLN1 "BYE" CSTR ;
META `RDLN1 READLN \ READLN FIXED

: 0?SKIP DUP IF @R+ PUSH ;THEN 
: .SKIP DROP @R+ DROP; ;  
: (OF OVER- .SKIP ?; 
: (GO XR DROP ;
: ..TIMES |DROP 
: .TIMES |DROP 
: TIMES  PUSH XR  
: TIMES| FOR J EXECUTE NEXT DROP RDROP; ; UNW
: SPACES TIMES| SKIP 
: |SPC EX 
: SPACE BL EMIT ;
: ID. |SPC  
: ". CSTR  
: TYPE |DROP 
: TYPE+ TIMES| CSTR EMIT ;
: ((." (?S ". ;  
: |CR EX 
: CR ."^M^J" 0 TO CNTC ; 
META CR vOK \ vOK FIXED

\ : @DBG
\  2DUP H. H. PUSH PUSH 2DUP H. H. POP POP SP@ H. 
\  POP DUP PUSH H. @R H. H H. ;

1024 CONST 1K
: XY? 1K LTIB - ;
0 VALUE BLK
0 VALUE SCR
0 VALUE XY
:VALUE KEY  ;
' BKEY   ' KEY  T!
\ : |KEY EX KEY DROP ; 
: `(ERR @BEMIT AT EMIT  @BKEY AT KEY CR TBUF ID. MESSAGE ID.
 CR BLK 0; BLK TO SCR 0 TO BLK XY? 
: >XY 1K 1- AND TO XY ;
META `(ERR vERR    \ vERR FIXED

  
256 CONST 1B
16  CONST 1H
: >A| XR XA EXECUTE XA EXIT ; 
: U/ |DROP 
: (/MD  >A| TWICE TWICE -/ -/ -/ -/ ; 
: 1B* 1B 
: U* >A| TWICE TWICE +* +* +* +* ;
: B>HH W>B 1H SKIP \ U/MOD ; 
: W>BB 1B
: U/MOD (/MD SWAP ; 

: 9>? 9 OVER U< 7 AND ;
: ALPHA 9>? + '0 + ;  
: H. W>BB CALL  
: B. |SPC THEN B>HH TWICE 
: DIG. ALPHA EMIT ; 

: A+L XEP| : I+ J + ;
: `MEMTI| A+L 0 
: TI| BLK XR LTIB PUSH ETIB PUSH PUSH CALL EX POP POP POP THEN
 TO BLK TO LTIB TO ETIB : /BLK BLK 0; 0 TO ETIB ;
\ ' `MEMTI| ' EVAL T! \ EVAL FIXED

: . DUP 0< IF '- EMIT NEG THEN 
: U. |SPC 
: ` 10 U/MOD 0?SKIP RECURSE DIG. ;

8   CONST bs
13  CONST cr
$40 CONST 1L
-$700 CONST SBUF    
-$600 CONST TIB     

: WITHIN OVER- PUSH - POP U< ; 
\ : C!+ PUSH C!R+ POP; ; UNW
: I J ; : = - 0= ; 
: 2DUP OVER OVER ;
\ : `SRC BLK 0; ETIB 0<>; BLK BLOCK 1K + TO ETIB ;
: `RDLN TIB 1L
: ACCEPT OVER + PUSH DUP BEGIN KEY \ CASE 
  cr OF DUP XR DROP ENDOF
  bs OF OVER OVER- IF 1- bs EMIT SPACE bs EMIT THEN  ENDOF
  DUP BL 1B WITHIN  IF DUP EMIT OVER ! 1+ DUP THEN
  DROP THEN THEN \ ;CASE 
  DUP I = UNTIL  OVER- 
EXIT ;
META `RDLN READLN \ READLN FIXED

\ DEBUGERR
: TROFF  (IO1 ,<  ,"9~^K~" =P _@X_TRACE ,"^O^G~^N^F~^AC~"
: TRON   (IO1 ,<  ,"9~k~E~k~t~^P~"

: _@DBGW0  ,< VAL' TROFF CALL, ' _@JSR4TH CALL, 
: _@DBGW1   NOP FROMF ,<   VAL' TRON  CALL,
,"$"_~<S-~u^C"  VAL' TROFF CALL, ,"[^K~^O" ' _NOP 1+ $E9 ,R
,"^P~"

APT2  _IF     IF`
APT2  _IF-    IF-`
APT2  _TWICE  TWICE`

