XT_ _AND15,__AND
  DW 15
  
XT_ _CNTC,__VAR
  DW 0
    
;XT_ _U2SWAP,@U2SWAP
;L_ _2SWAP
;  DW _U2SWAP,_PUSH,_U2SWAP,_POP,_RET
  
XT_ _BYE,0
P_ _LIT,@LIT           ; ( DUP
P_ _PUSHX,@PUSHX            ; (PUSH;
P_ _C@,@C@
P_ _HWTOB,@HWTOB
P_ _WTOB,@WTOB
P_ _SKIP,@SKIP		      ; (SKIP
P_ _ROT,@ROT
P_ _MROT,@MROT
P_ _SWAP,@SWAP
P_ _D2DIV,@D2DIV
P_ _NEG,@NEG
P_ _NOT,@NOT
P_ _0LESS,@0LESS
P_ _ZEQ,@ZEQ
P_ _MIF	,@MIF
P_ _2DIV,@2DIV          ; ( 2/
P_ _NEXT,@NEXT          ; (NEXT
P_ _DROPX,@DROPX        ; (DROP;
;P_ _NOP,@NOP        
P_ _ABORT,@ABORT
p_ _INC,@INC	          ; (INC
p_ _DEC,@DEC	          ; (DEC
P_ _ALPHA,@ALPHA
P_ _RDROP,@RDROP        ; RDROP
P_ _RDROPX,@RDROPX      ; RDROPX
P_ _FOR,@FOR				    ; (FOR	
p_ _BE,@BE
P_ _EX,@EX
P_ _BREAK,@BRK3
p_ _2M,@2M
p_ _1M,@1M  
p_ _2P,@2P
p_ _1P,@1P  
P_ _NIP,@NIP
P_ _LD,@LD
   
;----------------------------------	

P_ _IFM,@IFM2           ; (IF-        
P_ _JUMP,@JUMP          ; (JUMP
;P_ _IF,@IF              ; (IF
P_ _RET,@RET            ; ( (;

P_ _PLAVG,@PLAVG				; ( +2/
P_ _SDIV,@SDIV          ; ( -/
P_ _PMUL,@PMUL          ; ( +*
;P_ _nAND,@NAND	        ; ( NAND

P_ _PUSH,@PUSH          ; (PUSH
;P_ _POP,@POP            ; ( POP
;P_ _J,@_DUP            ; ( J
;P_ _DUP,@_DUP          ; ( DUP

;P_ _RLDP,@_DUP         ; (@R+
P_ _XR,@XR           ; ( XR  XCHG
P_ _XA,@XA

P_ _STKEY,__SETVAR
P_ _GTKEY,__CONST
L_ _KEY
@KEY  DW _BK
L_ _NOP
  DW _RET
  
P_ _STEMIT,__SETVAR
P_ _GTEMIT,__CONST
L_ _EMIT
@EMIT  DW _BE,_CNTC,_INC,_RET
  
L_ _TRICE
  DW _PUSH,_J,_XR
L_ _IXEC
  DW _J
L_ _EXECUTE
  DW _PUSHX

L_ _XSPC
  DW _EX
L_ _SPC
  DW _BL,_EMIT,_RET
P_ _BL,__CONST
  DW 32

L_ _ROTD
  DW _XSPC,_TRICE,_ROT,_DUP
L_ _WDOT
  DW _DUP,_HWTOB,_BDOT,_XSPC
L_ _BDOT
  DW _WTOB,_DUP,_2DIV,_2DIV,_2DIV,_2DIV,_HDOT
L_ _HDOT  
  DW _AND15,_ALPHA,_EMIT,_RET
  
L_ _I
  DW _J,_RET

  DW __VAR3,__TO_PUSH
XT_ _FORWARDS,__TO_POP
  DW @@1,@@1,20 DUP (0)
@@1:  
  DW __VAR3,__TO_PUSH
XT_ _BACKWARDS,__TO_POP
  DW @@2,@@2,20 DUP (0)
@@2:  
XT_ _HTOP,@HTOP
  DW __VAR3,__TO_PUSH
XT_ _HANDLES,__TO_POP
  DW @@3,@@3,20 DUP (0)
@@3:  

L_ _ABORT_INI
  DW AT_+_FORWARDS,_STKINI
  DW AT_+_BACKWARDS,_STKINI
  DW _CLOSE_ALL,_STDEMIT,_STDKEY
L_ _HANDLES_INI
  DW AT_+_HANDLES
L_ _STKINI
  DW _STR
L_ _SWAPST  
  DW _SWAP
L_ _ST  
  DW _STP,_DROPX
  
L_ _SHOW_ERR
  DW _TBUF,_ID,_ID
L_ _CR
    DW _SDOT
    DB 2,13,10,0
    DW _CNTC
L_ _OFF
    DW _LDZST,_DROPX
    
L_ _DLD
  DW _LDP,_XDROP
L_ _LDP
  DW _PUSH,_RLDP,_POP,_RET
L_ _STKSIZE
  DW _DLD,_SUB,_2DIV,_RET
  
L_ _CLOSE_ALL
  DW AT_+_HANDLES,_2P,_LD,_XDROP   ; ADRES
  DW AT_+_HANDLES,_STKSIZE
  DW _TIMES,_STR,_CLOSE,_RET

L_ _XDROP
  DW _EX,_DROPX

L_ _TIMES
        DW _FOR,@@LPS
@@LPS0  DW _J,_EXECUTE
@@LPS   DW _NEXT,@@LPS0
__@EXT2 DW _RDROP
__@EXIT DW _RDROPX

L_ _0X 
  DW _IF,__@EXIT,_RET

L_    _SDOT
  DW _SLSKIP
L_ _TYPES
  DW _CSTR
L_ _TYPE
  DW _XDROP
L_ _ATP
    DW _TIMES,_CSTR,_EMIT,_RET

L_ _OK
    DW _SDOT
    NAM_ ' Ok'
    DW _CR
    DW _SDOT
    NAM_ '>'
    DW _RET
    
L_ _WIDOT
  DW _DICT,_WFND,_IF,_WDOT
L_ _WID
  DW _2P,_1P
L_ _ID
    DW _XSPC,_TYPES,_RET
    
L_ _OVERM
  DW _OVER
L_ _SUB
  DW _NEG
L_ _ADD
  DW _PLAVG
L_ _DROP
  DW _DROPX
  
CONST_  _TBL,80H
CONST_  _TIB,-512
CONST_  _TBUF,-256
CONST_  _0,0
     
VALUE_  _H,FREEMEM
VALUE_  _HOFS,0
L_ _HERE
  DW _H,_HOFS,_ADD,_RET

VALUE_  _BLK,0
VALUE_  _ETIB,0
VALUE_  _LTIB,0
VALUE_  _DICT,@VOCTOP
VALUE_  _CMDLN,0
POINT_  _FIND,__@DICTPTR
POINT_  _INIT,__@INI

__DOES  DW  _@DOES
__DOES2 DW  _@DOES2
__DOES3 DW  _@DOES3

P_ _OPERAT,__WARY
  DW _NUMBER,_PERFORM,_COMP_NUM,_@COMMA 

__commaer:
  DW __does
@commaer:
  dw _STR,_comma,_perfORM,_RET
ADR?_  

__MAKER:
  DW __does
  dw _HERE,_1P,_ENTRY,_JUMP,@commaER    ; _HERE !!!
ADR?_  

_VAR    DW __MAKER,__VAR,_COMMA         ; VAR
_CONST  DW __MAKER,__CONST,_COMMA       ; CONST
_SEMICO DW __commaer,_RET,_LPAR         ; ;
_clit   dw __@COMMA,_lit                ; (#,

L_ _NUMBER
  DW _CSTR,_NUM
L_ _??
  DW _ABORT?
  NAM_  "?"
  DW _RET

L_ _COMP_NUM
  DW _NUMBER,_cLIT,_comma,_RET
  
L_ _TOKEN
  DW _BL,_WORD,_DC@,_RET
L_ _WORD  
  DW _PARSE,_TBUF
 BP_ 
  DW _MAKESTR
 BP_ 
  DW _LIT,'`',_ALD,_ST,_RET

L_ _PARSE
__@SOURCE:
  DW _NOP,_ETIB,_LTIB,_PARS,TO_+_LTIB,_RET
  
L_ _HENTRY
  DW _HERE
L_ _ENTRY
  DW _0,_TOKEN?,_DICT,_STRPUSH,_STM,_1P,_STM,TO_+_DICT,_RET

L_    _TOKEN?
  DW _TOKEN
L_ _N??  
  DW _ZEQ,_??,_RET

__@COMMA:
  DW  __does
L_ _@COMMA
      DW _LD
L_ _COMMA
      DW _H,_STP,TO_+_H,_RET
ADR?_      

L_ _ABORT?
  DW _SLSKIP,_SWAP,_IF,_DROP   ; IF NO ERROR JUST EXIT
__@ERR:  ; SHOW ERROR  VECTOR
  DW _ABORT_INI
__@AFTER:  ; INIT AFTER ERROR AND BEFORE ABORT VECTOR
  DW _SHOW_ERR,_ABORT

L_ _XEVAL
  DW _EX
L_ _EVAL
      DW _MEMTI
@EVAL DW _TOKEN,_IF,_DROP
  BP_
      DW _FIND
  BP_
      DW _OPERAT,_PERFORM
      DW _JUMP,@EVAL
        
L_ _MEMTI
  DW _APLSL,_0
L_ _TI 
  DW _BLK,_XR,_LTIB,_PUSH,_ETIB,_PUSH,_TIEX,_EX,_POP,_POP,_POP
L_ _TIEX
  DW TO_+_BLK,TO_+_LTIB,TO_+_ETIB,_BLK,_IF,_DROP,_0,TO_+_ETIB,_RET
  
L_ _?XEPMM ; ?XEP--|
  DW _1M
L_ _?XEPM ; ?XEP-|
  DW _1M
L_ _?XEP  ; ?XEP|
  DW _DUP
L_ _XEP   ; XEP|
  DW _XR,_EXECUTE
L_ __DOVAR
  DW _POP,_RET
L_ _SPLSL
  DW _XEP
L_ _APLSL  
  DW _XEP
L_ _IPLS
  DW _J,_ADD,_RET
  
L_ _LOCATE
  DW _TOKEN?,_DICT,_FND,_N??,_RET

__@INI:
    
    DW _NOP      ; INIT VECTOR
    DW  _H,_STR,_DICT,_MPUSH, TO_+_DICT
    
    DW  _TRON
    DW _LIT,1
    DW _LIT,2
    DW _LIT,3 ;,_ROTD,_OK,_BYE
    
    DW _NOP     
    DW _NOP     
    DW _NOP     
    DW _NOP     
    DW _NOP     
    
    DW  _TBL,_TBUF,_STRPUSH, TO_+_CMDLN
  BP_    
    DW  _LIT,EndMem,_LIT,8000H,_XEVAL
    
    DW  TO_+_INIT
L_ _LPAR                    ; INTERPRETTER
      DW TO_+_FIND    ; EXECUTE OR TRY FOR NUMBER
__@DICTPTR   DW _DICT ; DICTPTR - POINTS DICTIONARY IN WHITCH TO SEARCH 
      DW _FND,_RET       

L_ _COLON
  DW _HENTRY
L_ _RPAR                    ; COMPILER
  DW TO_+_FIND,_DUP,_INC,_DICT,_MFND,_IFM,@RPAR   ; EXECUTE COMPILING WORD
  DW _DROP,_DUP,_DEC,_DICT,_MFND,_1P              ; COMPILE WORD OR  LITERAL
@RPAR DW _1P,_RET

