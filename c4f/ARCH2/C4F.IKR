XT_ _BYE,0
P_ _APLSL,@APLSL
P_ _LIT,@LIT            ; (LIT
P_ _PUSHX,@PUSHX        ; (PUSH;
P_ _C@,@C@              ; (C@
P_ _HWTOB,@HWTOB        ; (HW>B
P_ _WTOB,@WTOB          ; (W>B
P_ _SKIP,@SKIP		      ; (SKIP
P_ _ROT,@ROT            ; (ROT
P_ _MROT,@MROT          ; (-ROT
P_ _SWAP,@SWAP          ; (SWAP
P_ _D2DIV,@D2DIV        ; (D2/
P_ _NEG,@NEG            ; (NEG
P_ _NOT,@NOT            ; (NOT
P_ _0LESS,@0LESS        ; (0<
P_ _ZEQ,@ZEQ            ; (0=
P_ _MIF	,@MIF           ; (-IF
P_ _2DIV,@2DIV          ; (2/
P_ _NEXT,@NEXT          ; (NEXT
P_ _DROPX,@DROPX        ; (DROP;
P_ _ABORT,@ABORT
p_ _INC,@INC	          ; (INC
p_ _DEC,@DEC	          ; (DEC
P_ _ALPHA,@ALPHA
P_ _RDROP,@RDROP        ; RDROP
P_ _RDROPX,@RDROPX      ; RDROPX
P_ _FOR,@FOR				    ; (FOR	
p_ _BE,@BE
P_ _EX,@EX
P_ _BREAK,@BRK3
p_ _2M,@2M
p_ _1M,@1M  
p_ _2P,@2P
p_ _1P,@1P  
P_ _NIP,@NIP
P_ _LD,@LD
   
;----------------------------------	CORE

P_ _IFM,@IFM2           ; (IF-        
P_ _JUMP,@JUMP          ; (JUMP
;P_ _IF,@IF             ; (IF
P_ _RET,@RET            ; (;

P_ _PLAVG,@PLAVG				; (+2/
P_ _SDIV,@SDIV          ; (-/
P_ _PMUL,@PMUL          ; (+*
;P_ _nAND,@NAND	        ; (NAND

P_ _PUSH,@PUSH          ; (PUSH
;P_ _POP,@POP           ; (POP
;P_ _J,@_DUP            ; (J
;P_ _DUP,@_DUP          ; (DUP

;P_ _RSTP,@_DUP         ; (!R+
;P_ _RLDP,@_DUP         ; (@R+
P_ _XR,@XR              ; (XR  
P_ _XA,@XA              ; (XA  

;vvvvvv--------------   IO  ---------------

L_ _ILD
  DW _J,_LD,_RET

L_ _SKIPROW  
  DW _LTIB,_0X,_XLTIB,_1M,_LL,_NEG
L_ _AND
  DW _NAND,_NOT,_RET
  
L_ _XREADLN
  DW _XLDSTO,_NOP
L_ _READLN
  DW    _TBL,_LL,_ACCEPT,_RET

L_ _XLTIB
  DW _LTIB,_EX,TO_+_LTIB,_RET
  
L_ _STRENDZ
  DW _CSTR,_TBUF,_MAKESTR,_ALD,_OFF,_RET
  
;P_ _ATFKEY,__VAR
L_ _FKEY
  DW _HTOP,_DOSkey,_RET
  
L_ _INCLUDE
  DW _TOKEN?
L_ _INCLUDED  
  DW _SKIPROW
L_ FEVAL
  DW _XLDSTI,_FKEY
  DW _STRENDZ,_1P,TO_+_HANDLES,_HANDLES ; CHK FOR PUSH
  DW _OPENR
  BP_
  DW _??,TO_+_HANDLES
  DW _SKIP
@ALINE:
  DW _EVAL,_XREADLN,_TEOF,_LDZST,_IF,@ALINE,_EVAL
L_ _CLOSE1
  DW _HANDLES,_CLOSE,_RET
  
L_ _XLDSTO
  DW _GTEMIT,_XR,_PUSH,_RLDP,_STEMIT,_EX,_POP,_STEMIT,_RET
  
L_ _XLDSTI
  DW _GTKEY,_XR,_PUSH,_RLDP,_STKEY,_EX,_POP,_STKEY,_RET
  
L_ _STDEMIT
  DW _LIT,_BE,_STEMIT,_RET
L_ _STDKEY
  DW _LIT,_BK,_STKEY,_RET
  

VAR_ _TEOF,0
@TEOF = $-2


XT_ _AND15,__AND
  DW 15
  
XT_ _ODD,__AND
  DW 1
  
L_ _ALIGN2
  DW _HERE,_ODD
L_ _ALLOT
  DW _XHERE,_ADD,_RET
  
XT_ _CNTC,__VAR
  DW 0
    
P_ _STKEY,__SETVAR
P_ _GTKEY,__CONST
L_ _KEY
@KEY  DW _BK
L_ _NOP
  DW _RET
  
P_ _STEMIT,__SETVAR
P_ _GTEMIT,__CONST
L_ _EMIT
@EMIT  DW _BE,_CNTC,_INC,_RET
  
L_ _TRICE
  DW _PUSH,_J,_XR
L_ _IXEC
  DW _J
L_ _EXECUTE
  DW _PUSHX

L_ _XSPC
  DW _EX
L_ _SPC
  DW _BL,_EMIT,_RET
P_ _BL,__CONST
  DW 32
  
L_ _DIV16
  DW _2DIV
L_ _DIV8
  DW _2DIV
L_ _DIV4
  DW _2DIV
  DW _2DIV
  DW _RET

L_ _ROTD
  DW _XSPC,_TRICE,_ROT,_DUP
L_ _WDOT
  DW _DUP,_HWTOB,_BDOT,_XSPC
L_ _BDOT
  DW _WTOB,_DUP,_DIV16,_HDOT
L_ _HDOT  
  DW _AND15,_ALPHA,_EMIT,_RET
  
L_ _I
  DW _J,_RET

  DW __VAR3,__TO_PUSH
XT_ _FORWARDS,__TO_POP
  DW @@1,@@1,20 DUP (0)
@@1:  
  DW __VAR3,__TO_PUSH
XT_ _BACKWARDS,__TO_POP
  DW @@2,@@2,20 DUP (0)
@@2:  
XT_ _HTOP,@HTOP
  DW __VAR3,__TO_PUSH
XT_ _HANDLES,__TO_POP
  DW @@3,@@3,20 DUP (0)
@@3:  

L_ _ABORT_INI
  DW AT_+_FORWARDS,_STKINI
  DW AT_+_BACKWARDS,_STKINI
  DW _CLOSE_ALL,_STDEMIT,_STDKEY
L_ _HANDLES_INI
  DW AT_+_HANDLES
L_ _STKINI
  DW _STR
L_ _SWAPST  
  DW _SWAP
L_ _ST  
  DW _STP,_DROPX
  
L_ _SHOW_ERR
  DW _TBUF,_ID
    DW _SDOT
    NAM_ ":"
  DW _ID
L_ _CR
    DW _SDOT
    DB 2,13,10,0
    DW _CNTC
L_ _OFF
    DW _LDZST,_DROPX
    
L_ _DLD
  DW _LDP,_XDROP
L_ _LDP
  DW _PUSH,_RLDP,_POP,_RET
L_ _STKSIZE
  DW _DLD,_TUCK,_SUB,_2DIV,_RET
  
L_ _CLOSE_ALL
  DW AT_+_HANDLES,_STKSIZE  ; ADRES & COUNT
  DW _TIMESDR,_STR,_CLOSE,_RET

L_ _XDROP
  DW _EX,_DROPX

L_ _TIMESDR
  DW _XR,_POP,_XDROP
L_ _TIMES
  DW _PUSH,_XR
L_ _TIMESX
        DW _FOR,@@LPS
@@LPS0  DW _J,_EXECUTE
@@LPS   DW _NEXT,@@LPS0
__@EXT2 DW _RDROP
__@EXIT DW _RDROPX

L_ _0X 
  DW _IF,__@EXIT,_RET

L_    _SDOT
  DW _SLSKIP
L_ _TYPES
  DW _CSTR
L_ _TYPE
  DW _XDROP
L_ _ATP
    DW _TIMESX,_CSTR,_EMIT,_RET

L_ _OK
    DW _SDOT
    NAM_ ' Ok'
    DW _CR
    DW _SDOT
    NAM_ '>'
    DW _RET
    
L_ _WIDOT
  DW _DICT,_WFND,_IF,@WID2
L_ _WID
  DW _2P,_1P
L_ _ID
    DW _XSPC,_TYPES,_RET
@WID2:
  DW _2P,_DICT,_WFND,_IF,@WID3
  DW _SDOT
  NAM_ 'TO '
  DW _JUMP,_WID
@WID3:
  DW _2P,_DICT,_WFND,_IF,@WID4
  DW _SDOT
  NAM_ 'AT '
  DW _JUMP,_WID
@WID4:
  DW  _2M,_2M,_WDOT,_RET
  
    
L_ _LCALC
  DW _ALD
L_ _OVERM
  DW _OVER
L_ _SUB
  DW _NEG
L_ _ADD
  DW _PLAVG
L_ _DROP
  DW _DROPX
  
CONST_  _LL,40H
CONST_  _TBL,80H
CONST_  _0,0

CONST_  _TBUF,MADR
MADR = MADR - 32
BOUND_  _RBND,512,32
@R_TOP  = $-2    ; 512 B RSTACK
BOUND_  _SBND,512,32
@S_TOP  = $-2    ; 512 B DSTACK

VALUE_  _CMDLN,MADR
VALUE_  _DICT,0
     
VALUE_  _H,FREEMEM
VALUE_  _HOFS,0
L_ _HERE
  DW _H,_HOFS,_ADD,_RET

VALUE_  _BLK,0
VALUE_  _ETIB,0
VALUE_  _LTIB,0
POINT_  _FIND,__@DICTPTR
POINT_  _INIT,__@INI

__DOES  DW  @DOES
__DOES2 DW  @DOES2
__DOES3 DW  @DOES3

P_ _OPERAT,__WARY
  DW _NUMBER,_PERFORM,_COMP_NUM,_@COMMA 

__commaer:
  DW __does
@commaer:
  dw _STR,_comma,_perfORM,_RET
ADR?_  

__MAKER:
  DW __does
  dw _ALIGN2,_HERE,_1P,_ENTRY,_JUMP,@commaER    ; _HERE !!!
ADR?_  

_VAR    DW __MAKER,__VAR,_COMMA         ; VAR
_CONST  DW __MAKER,__CONST,_COMMA       ; CONST
_SEMICO DW __commaer,_RET,_LPAR         ; ;
_clit   dw __@COMMA,_lit                ; (#,

L_ _NUMBER
  DW _CSTR,_NUM
L_ _??
  DW _ABORT?
  NAM_  "?"
  DW _RET

L_ _COMP_NUM
  DW _NUMBER,_cLIT,_comma,_RET
  
L_ _MAKESTR
  DW _1P,_MPOP
@SETLEN:  
  DW _LCALC,_SWAP,_STMB,_RET

L_ _STRPUSH
  DW _PUSH,_CSTR,_POP,_MPUSH,_JUMP,@SETLEN
  
L_ _TOKEN
  DW _BL,_WORD,_DC@,_RET
L_ _WORD  
  DW _PARSE,_TBUF
; BP_ 
  DW _MAKESTR
; BP_ 
  DW _LIT,'`',_ALD,_ST,_RET

L_ _PARSE
__@SOURCE:
  DW _NOP,_ETIB,_XLTIB,_PARS,_RET
  
L_ _HENTRY2
  DW _ALIGN2
L_ _HENTRY
  DW _HERE
L_ _ENTRY
  DW _0,_TOKEN?,_DICT,_STRPUSH,_STMB,_STM,TO_+_DICT,_RET

L_    _TOKEN?
  DW _TOKEN
L_ _N??  
  DW _ZEQ,_??,_RET

__@COMMA:
  DW  __does
L_ _@COMMA
      DW _LD
L_ _COMMA
      DW _XHERE,_STP,_RET
      
L_ _SPAREST  ; (DATA,ADR) SPARE DATA AT ADRES AND STORE
  DW _DUP,_XR,_ILD,_PUSH,_PUSH,_ST
  DW _EX,_POP,_POP,_ST,_RET
      
L_ _XHERE
  DW _H,_EX,TO_+_H,_RET
ADR?_      

L_ _ABORT?
  DW _SLSKIP,_SWAP,_IF,_DROP   ; IF NO ERROR JUST EXIT
__@ERR:  ; SHOW ERROR  VECTOR
  DW _ABORT_INI
__@AFTER:  ; INIT AFTER ERROR AND BEFORE ABORT VECTOR
  DW _SHOW_ERR,_ABORT

L_ _XEVAL
  DW _EX
L_ _SEVAL
  DW _CSTR
L_ _EVAL
      DW _MEMTI
@EVAL DW _TOKEN,_IF,_DROP
;  BP_
      DW _FIND
;  BP_
      DW _OPERAT,_PERFORM
  BP_
      DW _RPLD,TO_+_RBND
      DW _SPLD,_2P,TO_+_SBND
      DW _JUMP,@EVAL
        
L_ _MEMTI
  DW _APLSL,_0
L_ _TI 
  DW _BLK,_XR,_LTIB,_PUSH,_ETIB,_PUSH,_PUSH,@TIEX,_EX,_POP,_POP,_POP
@TIEX:
  DW TO_+_BLK,TO_+_LTIB,TO_+_ETIB,_BLK,_IF,_NOP,_0,TO_+_ETIB,_RET
  
;L_ _?XEPMM ; ?XEP--|
;  DW _1M
;L_ _?XEPM ; ?XEP-|
;  DW _1M
;L_ _?XEP  ; ?XEP|
;  DW _DUP
;L_ _XEP   ; XEP|
;  DW _XR,_EXECUTE
;L_ __DOVAR
;  DW _POP,_RET
;L_ _SPLSL
;  DW _XEP
;L_ _APLSL  
;  DW _XEP
;L_ _IPLS
;  DW _J,_ADD,_RET
  
L_ _LOCATE
  DW _TOKEN?,_DICT,_FND,_N??,_RET

__@INI:
    
    DW _NOP      ; INIT VECTOR
    DW  _H,_STR,_TBL,_CMDLN
;  BP_    
    DW _STRPUSH,_DUP, TO_+_CMDLN
;  BP_    
    DW  _MPUSH, TO_+_DICT
    
;    DW  _TRON
;    DW _LIT,1
;    DW _LIT,2
;    DW _LIT,3 ;,_ROTD,_OK,_BYE
;    
;    DW _NOP     
;    DW _NOP     
;    DW _NOP     
;    DW _NOP     
;    DW _NOP     
    
;  BP_    
    ;DW  _LIT,EndMem,_LIT,8000H,_XEVAL
    DW  _CMDLN,_XEVAL
    
    DW  TO_+_INIT
L_ _LPAR                    ; INTERPRETTER
      DW TO_+_FIND    ; EXECUTE OR TRY FOR NUMBER
__@DICTPTR   DW _DICT ; DICTPTR - POINTS DICTIONARY IN WHITCH TO SEARCH 
      DW _FND,_RET       

L_ _COLON
  DW _HENTRY2
L_ _RPAR                    ; COMPILER
  DW TO_+_FIND,_DUP,_INC,_DICT,_MFND,_IFM,@RPAR   ; EXECUTE COMPILING WORD
  DW _DROP,_DUP,_DEC,_DICT,_MFND,_1P              ; COMPILE WORD OR  LITERAL
@RPAR DW _1P,_RET

L_ @TICK
  DW __DOES
L_ T@ADD  
  DW _LD,_LOCATE,_LD,_ADD,_RET
_TICK DW @TICK,0 
  
L_ @EXEC  
  DW __DOES,T@ADD,_EXEC,_RET
_TOEX DW @EXEC,-2 
_ATEX DW @EXEC,-4 

L_ @COMP
  DW __DOES,T@ADD,_COMMA,_RET
_TOCOM DW @COMP,-2  
_ATCOM DW @COMP,-4  
