\ 15
 ' ((A" (,X A"` ,"    ' ((." (,X ."` ,"   ' (("   (,X  "` ,"
: +THRU ;RNG> : +LOAD BLK + LOAD ; : CHARS ;RNG> DUP EMIT . ;
: ;RED 2DUP EX SWAP ?; ;  : UMAX ;NIP : URED ;RED U< ;
: UMIN ;DROP URED ; : MAX ;NIP : REDI ;RED < ;
: COPY BLOCK SCR BUFFER 1K CMOVE UPDATE ;
: BLOCKS> URED ;RNG> COPY 1 : SCR+ SCR + TO SCR ;
: COPYBLX TO SCR FLUSH :; URED  OVER SCR U<  BLOCKS> ?;
   2DUP SWAP - SCR+ : BLOCKS< URED ;RNG< COPY -1 SCR+ ;
: LIST DUP TO SCR BLOCK .BLOCK ;
: #. BLK . ; ' #. TO vLOAD
17 22 THRU    16 LOAD    23 26 THRU : TT ;
DFLTEMT @EMT !
PRUNE



\ 16
\ FILE <> BLOCKS CONVERTERS   - PART OF FILE_WRITER
0 VALUE VBLK   0 VALUE `LastB : LFBLK ;UNTIL 1- DUP ;NIP
: TRIM<BLK BLOCK 1K : TRIM< FOR  DUP I+ C@ '! U< IF CSWAP> NEXT
 SKIP THEN POP 1+ ; : `L 2DUP 1+ U< 0; DUP TO `LastB EX `LastB
 TRIM<BLK 1L UN? AHEAD : B2F TOKEN? AUTO : "B2F ;@CREATE Fput
;HCLOSE `L 1- ;RNG> BLOCK 1H THEN .LOOPS DUP 1L + XEP 1L TRIM<
TYPE CR ; : `NEWBLK? [ SOURCE ] XEP LTIB 0<>; 1K TO LTIB BLK 1+
DUP TO BLK 0 TO ETIB : WIPE DUP : WIPES ;RNG> BLOCK 1K BLANK
UPDATE FLUSH ; : C>BLK `NEWBLK? DUP BL U< IF cr = 0; \` ;THEN
ETIB LTIB - C! UPDATE ;LTIB 1- ; : `FREAD DXEP : FREAD TOKEN?
: FREADED AUTO ;@OPENI Fget ;BLKTI BLK WIPE BEGIN KEY C>BLK EOS
UNTIL ; : FEDIT 100 LFBLK 1+ `FREAD DUP TO VBLK EDIT ; : FWIPE
VBLK 100 LFBLK WIPES ;



\ 17
\ BLOCK1 OF EDITOR
: WHAT? 7 EMIT ;
ZDO VALUE 4 TIMES  `PDATA `INS  `SZ  `ALTER
0#> SWAP TO XK CSTR 2DUP XK BSCAN 1+ 2* + + @EXEC ; =: `XK!

 2000 HIPUSH <H>
: -:  ' , C,  XK 2+ DUP TO XK       { BYTES FOR MOVE UP 1 }
         HERE OVER - DUP PUSH       { START ADDRESS    }
         DUP 1+ ROT                 { PREPARE FOR MOVE }
         CMOVE>  HERE C@ POP C!   ; { FIX CODE  }
: SWITCH: CREATE HERE 73 1 TO XK 0 -: (LIT  `XK!  TOBE ;
: ;SWITCH  73 - A" BAD KEYS" XK 2/ 1- SWAP C! ;
 <H>  : `?XY 1L U/MOD 4 0 { : V+} ROT + XEP + ;



\ 18
\ BLOCK2 OF EDITOR
: `POSXY XY `?XY @XY ; : `_INS `INS 0= TO `INS : `.INS 72 0 @XY
`INS IF ." INS" ;THEN ." OVT" ; ' ETIB =: `EOS^ : `;LRUD XY  EX
>XY  69 2 @XY XY 6 U.R 69 4 @XY  XY 1L U/MOD 3 U.R 3 U.R ;
: `ERR 73 1 @XY ;
: `;LPOS  XY : `;PDATA+ EX `PDATA + ;   : `POS^ `;LPOS ;;
: `RELOAD SCR BLOCK DUP TO `PDATA 1K + TO ETIB  SPTRTOP? ;
: `REDRAW  `ERR SPACE  `.INS HOME `PDATA .BLOCK ;
: `L_DN 1L : `XY+ `;LRUD + ;    : `L_UP 1L : `XY- NEG `XY+ ;
: `L_END `;LRUD : `/L  1L 1- OR ;  : `EOL `;LPOS `/L 1+ ;
: `ERR.EXIT `ERR '? EMIT : .EXIT2 RDROP .EXIT ;
: `1L<?; 1L : `>SZ?; TO `SZ : `SZ<?; 1K XY - `SZ U< 0?SKIP
 `ERR.EXIT  : `;RDRC EX  : `RDRC  `REDRAW UPDATE ;
: `WIPE `;RDRC 1K LOOPS `EOS^ J - 1- : `IWIPE   DUP C@ BL U<
        DROP ?; BL SWAP C! ;

\ 19
\ BLOCK3 OF EDITOR
: `<_|   `L_DN  : `L_BEG `;LRUD L/ ;    : `->  1 `XY+ ;
: `<-  1 `XY- ;  : `TAB> bs : `SZTB> `-> :; 1- `;LRUD OR ;
: `<TAB bs : `<SZTB `<- NEG : `TAB& `;LRUD AND ; { PREVIOUS}
: `APOS  0 `TAB& ; : `LINE/ `;LPOS  L/ ;  : `/LINE `;LPOS `/L ;
: `LDRAW `POSXY `LINE/ XY 1L U/ 1+ cr EMIT .LINE DROP ;
: `RESET -BUF : `LOADRAW `RELOAD `REDRAW ;
: `N  1 : `LB SCR + 0 MAX TO SCR `LOADRAW ;  : `B -1 `LB ;
: `ALT SCR `ALTER TO SCR TO `ALTER `LOADRAW ;
: `ADV 1K XY - TO LTIB BL PARSE TO `SZ DROP XY? >XY XY 0; `<- ;
: `TEST BL `POS^ C@ U< ;  : `BACK  BEGIN `<- XY 0; `TEST UNTIL
         BEGIN `<- XY 0; `TEST 0= UNTIL `-> ;
: `;INSPOS EX PUSH `POS^ I `SZ - DUP `SZ BLANK POP ONPLACE ;
: `;DELPOS `POS^ DUP `SZ + OVER `SZ BLANK EX ONPLACE ;
: `AW `ADV : `PREP { ARE} `BACK  : `SKIP `ADV `-> ;

\ 20
\ BLOCK4 OF EDITOR
: `DELL `1L<?; : `DO-DEL `;DELPOS `EOS^ ; : `INSL `1L<?;
: `DO-INS `;INSPOS `EOS^ ; : `altS 1L 1+ `>SZ?; 1L TO `SZ `POS^
`<_| `DO-INS `POS^ 2DUP - NUP - ONPLACE ; : `COPY `1L<?; RDROP
: `DO-COPY `POS^ `SZ DUP `XY+ >S ; : `CUT `1L<?; : `DO-CUT
`DO-COPY  `SZ `XY- `DO-DEL ;
: `BKCW `AW `BACK `BACK : `CUTW `AW `SZ 0; `SZ 1+ TO `SZ
 `BACK `;RDRC `DO-CUT `PREP ; : `MOVE `CUTW `SZ 0; `SKIP :;
: `PASTE SPTR C@ DUP TO `SZ 0; `SZ<?; : `DO-PASTE `DO-INS S> 1+
 `POS^ `SZ CMOVE ; : `;LDRU 1 TO `SZ EX : `LDRU `LDRAW UPDATE ;
: `INSC `;LDRU CALL `POS^ C! ;THEN `INS 0; `;INSPOS `EOL ;
: `BS `<- : `DELC `;LDRU `;DELPOS `EOL ; : `ESQ/E /BUFS
: `X-POS 75 15 @XY EOS! ; : `Q/ED FLUSH `X-POS ;
: `SCR; `APOS `<- : `PREPARE `L_END `PREP ;
 <H>  : C^ TOKEN? 1+ C@ 31 AND ;

\ 21
{ BLOCK5 OF EDITOR \ KEY CONSTANTS}
80 CONST kDOWN  81 CONST kPGDN  82 CONST kINS   83 CONST kDEL
79 CONST kEND   84 CONST ksF1
59 CONST kF1    60 CONST kF2    61 CONST kF3    62 CONST kF4
63 CONST kF5    64 CONST kF6    65 CONST kF7    66 CONST kF8
67 CONST kF9    68 CONST kF10   30 CONST kaA
113 CONST kaF10 17 CONST kaW    71 CONST kHOME  72 CONST kUP
73 CONST kPGUP  75 CONST kLEFT  77 CONST kRIGHT 27 CONST kESQ
9 CONST kTAB    104 CONST kaF1  93 CONST ksF10  94 CONST kCF1
103 CONST kcF10 15 CONST ksTAB  32 CONST kaD    31 CONST kaS
115 CONST kcLEFT  116 CONST kcRIGHT  117 CONST kcEND
118 CONST kcPGDN  119 CONST kcHOME   132 CONST kcPGUP




\ 22
{ BLOCK6 OF EDITOR }  <H>
SWITCH: `EF WHAT?   kaA -: `ALT    kLEFT -: `<-    kUP -: `L_UP
 kHOME -: `L_BEG   kEND -: `L_END  kPGUP -: `B   kPGDN -: `N
 kDOWN -: `L_DN  kRIGHT -: `->     kINS  -: `_INS kDEL -: `DELC
 kaW   -: `WIPE kcRIGHT -: `ADV  kcLEFT -: `BACK kcEND -: `SCR;
 ksTAB -: `<TAB  kcHOME -: `APOS   kaS -: `altS  kaD -: `DELL
;SWITCH        : `ONEC XK BL U<  IF WHAT? ;THEN XK `INSC `-> ;
SWITCH: `EK `ONEC C^ J -: `<- C^ K -: `-> C^ X -: `CUT 127
-: `BKCW bs -: `BS C^ D -: `DELC cr -: `<_| C^ G -: `CUTW C^ Z
-: `PREPARE C^ N -: `N C^ B -: `B C^ R -: `RESET C^ I -: `TAB>
 C^ C -: `COPY C^ V -: `PASTE C^ Q -: `ESQ/E C^ F -: `MOVE
 C^ A -: `ADV  kESQ -: `Q/ED  C^ S -: `INSL  0 -: `EF ;SWITCH
: `@KEY `POSXY KEY W>BB DUP IF SWAP ;THEN DROP ;
: EDIT TO SCR : PE PAGE : E  D0 ;MEMTI `LOADRAW ;EOS
 BEGIN `@KEY `EK EOS  UNTIL ;  HIDROP

\ 23
0 VALUE `WW : .HL `WW H. ; 0 VALUE `ADR 0 VECTOR `STP 0#> PUSH
XCHG CSTR FOR STR 2+ J "- IF CSWAP> NEXT SKIP THEN POP 1+ NIP
EXIT ; =, ?:STR 3 C, >, :(ABRT :((" :((." ,< : `;WW `WW EX
TO `WW ; : `C>N HOFS IF ;<D> FX 2+ AT `STP C>N? ;THEN FX 2-
AT `STP C>N? ; : `!ID DUP TO `ADR ID. ; : ??ID. 0 TO `ADR `C>N
0= `!ID ?; `STP .TO `STP .AT NEG `STP `STP NEG .$ ; : `GETW
`;WW @+ ; : `WW! T>R TO `WW ; : `?TA. `WW R>T `C>N NIP 0;
: `TA. `WW R>T ADRS. `C>N DROP ?; ." : " ID. ;
: SEE ' : @SEE `WW! : SL bs LOOPS : WW `TA. `GETW DUP H.
: `W0 ??ID. `ADR 0; `ADR ?:STR 0; `;WW ;SPC ;[] DUP ". NAME> ;
: HACK ' : @HACK `WW! : HL  bs LOOPS `?TA. `GETW `W0 ;
: -HL `WW 23 - @HACK ;   : TEST 1 2 3 " 1234" ;




\ 24
: PRUNE  [ TO T H STR + OFF H INC H STR >DICT ] EDICT XEP
 H DUP OFF T;2DROP ;?I J N>C OVER U< 0; J 1+ C@ '` - 0; J DUP
>NAME J - H S+! DROP ;
' (DEF: N: DEF >, ODD = : `CNTR 0; J ID. H INC ;
N: =USED >, 2/ = `CNTR ; =, >USED >, 2/ U< `CNTR ;
: `? J C@ - DUP 0< 0; RDROP : `SRCH; 2DROP 0 EXIT ;
: IN-STR> SUCSTR
: SRCH> PUSH `? FOR> DUP J CSTR MEM- 2EXIT ?; <NEXT 1+ `SRCH; ;
: <IN-STR SUCSTR : <SRCH PUSH `? A+L
    FOR> DUP J CSTR MEM- 2EXIT ?; 1- <NEXT `SRCH; ;






\ 25
CREATE `SEARCHBUF 80 ALLOT    63 VALUE ENDBLK  \  ABRAKADABRA
: `BLK>LINES ENDBLK 1H U* ; : S0! 0 TO SCR  0 TO XY ; \
: VLINE 1H U/MOD TO SCR 1L U* ;
: `VMEM VLINE 1L 1- OR  DUP TO XY  : `AT-SCR SCR BLOCK + ;
: SRCH XY `AT-SCR 1K XY - `SEARCHBUF SRCH> DUP  TO XY 0;
  XY 0 `AT-SCR - `SEARCHBUF C@ + >XY E ; >, BEGIN SCR 1+ TO SCR
: `BLOCKSRCH  SCR ENDBLK U< 0;  SRCH XY UNTIL ;
: S BL : `BLOCKSEARCH  WORD C@ IF   TBUF `SEARCHBUF >" THEN
  `SEARCHBUF C@ 0; `BLOCKSRCH ;
: S" '"  `BLOCKSEARCH ; : ?S TOKEN? 1+ C@ `BLOCKSEARCH ;
: S?EL `BLK>LINES LOOPS J `VMEM  C@ BL - 0; E ;
: cr>EL FLUSH :; S?EL `BLK>LINES LOOPS cr J `VMEM C! UPDATE ;
: bl>EL FLUSH :; `BLK>LINES LOOPS BL J `VMEM C! UPDATE ;



\ 26
: .ALL T;2DROP ;?I J TUCK (TYP : >PRINT = : >PRT? 0; : JID J
ID. ; : /DBG KEY 17 = A" /DBG" ; : I@ J @ ; : @' ' @ ;
: .CODE T;2DROP DUP ;?I J N>C @+ >PRINT ;
: S6 ;GO XEP XEP XEP : S3 THEN SPACE 3 LOOPS ROT DUP H. ;
: DBG  CR POP J H. PUSH J H. I H. S6 I@ ?ID. /DBG ;
: .NAMES T;2DROP ;?I DUP J IN-STR> >PRT? ;
: HIDE ' DROP >NF< 1+ '` : CSWAP! SWAP C! ;
EXIT
: HD-TEST -FIND IF ID. ; THEN DROP ;
: `PREFETCH  TOKEN? >LT< TO LTIB FOUND? DROP H. ;
: [D]` CR POP J H. PUSH J H. I H. `N3 HERE H. TD @ H. `PREFETCH
  SPACE >NF< ID. TD @ ID. HERE 2- @ ?ID. /DBG ;
: GAGA " S"  " SAGA"  IN-STR> ;



\ 27
{ INIT} FORGET TT : TT ;; : OP[]! POP 0 OPER[] 8 CMOVE ;;
INCLUDE PIFBLK3.CF
 CREATE `SPEC? ,T ",!. : TERR. TO MESSAGE RESTART ; 0 WARY `STR
>, CSTR, BS, TERR. ". ,< : `PFX  `SPEC? CSTR ROT BSCAN ;
0 WARY `STR, >, TB" BS, TB! TB." ,<   \ : STR- 1- XEP 1+ ;
: `OK" OVER C@ '" - NOP ?; OVER 1+ C@ '" <> STR- ?; ;;
: `STR@ [ TO XK ] XK XEP CSTR `OK" 2- OVER C! "PK ;
: STR? DUP NAME> 1- C@ '" = PUSH DUP 1+ C@ `PFX
                        DUP TO XK  -1 <> POP AND ;
: `NUM STR? NUM? ?; `STR@ XK `STR @EXEC ;
: `NUM, STR? NUM?, ?; `STR@ XK `STR, @EXEC ;
: `EXE >NF< NAME> PUSH 2 I+ @ ODD IF POP A" NOT DEFINED!" ;THEN
 RDROP EXEC ; : `COM >NF< NAME> PUSH 2 I+ @ ODD IF DROP
 H I@ , POP ! ;THEN RDROP , ;


\ 28
: S0 40 TO SCR 0 TO XY S ; : T=: ;<D> (=: ;;  ' ' =: T'
: TWORDS  ;<D> WORDS ; : %  ' >NF< T=: ;; : %2 ' TOKEN? T=: ;;
: OBJ! TO H ; : ORG! H - TO HOFS ; : TFND TD @ FI ;
: 2ALIGNED HERE 2 ALIGN : HERE! HERE - ALLOT ;
\ : ;STATE STATE XCHG EXECUTE POP TO STATE ;
\ : CALL! ;H XEP HERE SWAP HERE!  CALL, ;
: N: DUP : =, ;, : =H HERE DUP ODD A" ADDRESS NOT ALIGNED! "
: =: PUSH     TOKEN? TFND NIP 0= IF POP TBUF T=: ;THEN
           >NF< NAME> PUSH 2 I+ @ ODD IF 2 I+ @ 3 - 2 I+ !
       BEGIN I WHILE I@ J POP ! PUSH REPEAT 2EXIT ;THEN
 1 A" ALREADY DEFINED!" ;





\ 29
0 VAR `T_DATA  0 VALUE `T_HND     0 VAR `TOTAL
: TWRITE1 `T_DATA ! `T_DATA SWAP
: TWRITE3 DUP `TOTAL +! `T_HND  Fwrite CR _DX H. _CX . _AX . ;
: TPRUNE ESC PRUNE ESC ;
: ADDZONE ;RNG> : ADDBLK BLOCK 1K TWRITE3 ;
: TSAVE  TPRUNE  `TOTAL OFF TOKEN? FOPEN
            {  FCREATE} TO `T_HND   TD 2+ H OVER- TWRITE3
  2 TD @  " --END--" TFND ??# DROP >NF< SWAP - 1+ TWRITE1
   TD @   `T_DATA @ 1-  TWRITE3               1 0 TWRITE1
  `T_HND Fclose
;





\ 30
'" ?M: :CODE code;"  '" ?M: :(GO; (GO;" : TGO :(GO; MARK> ;
M: :.RDRP .RDROP; : LOOP` NEXT` :.RDRP ;
: T:;T ,< TO' :;` @ , >, :(GO; <RELS ; : SCAN"C =H :(BSC ;
: D# >, HERE EX END! ;
: 0#> D# :(DZ#0 ;  : TDOES :CODE 0#> DROP ;
: 1#> D# :(DZ#1 ;  : 2#> D# :(DZ#2 ;
M: TWICE` CALL THEN; : TRICE PUSH J XCHG J PUSH ;
: `3, XEP TRICE , ;
: `3MRK> TRICE H Z, ; : `2RLS> TWICE : `RLS> HERE SWAP! ;
: `CLRY XEP `2RLS> LOOPS Z, ; : `PICK XEP TRICE 2PICK ;
: STACK: `PICK
: STACK! `3, HERE 2- =: `3MRK> `CLRY `RLS> ;
: ;2ALIGNED EX 2ALIGNED END! ;



\ 31
{ DEFINITIONS } \ : VARCON :(VAR2 CONST ;
: =H;, =H ;, ;
: QUAN  :(VAR3  : VALUE  :(SET2  : CONST =H;, :(CON ;
: VQUAN :(VAR3  : VECTOR :(SET2  : DEFER =H;, :(DEF ;
: VALUE; HERE DUP 6 + ,  :EX  " =: " TOKEN? "+  " ;" "+!
     >SVL TO LTIB     VALUE ;
: :VALUE >, :(SET2  :(CON =H :(RET ;
: :RECURSE TD @ N>C , ;

: `4ARY 2* : `2ARY 2* : `ARY =H  EX  CLARY ;
: CREATE UNW :; : VARIABLE 0 : VAR  =H;, :(VAR ;
: BARY `ARY :(BARY ; : WARY `2ARY :(WARY ;
: LARY `4ARY :(LARY ;



\ 32
: INITO    FX NOP AT v",   FX T AT vT
   FX :=? AT vISW?   FX 2+ AT vADJ
   FX (; TO ESC CALL NUM?  EXEC NUM?, , THEN OP[]! ;

: TvIS:? ODD 0= ;  : TD@ TD @ ;
: TINIT    FX ;2ALIGNED AT v",  FX TD@ AT vT
   FX TvIS:? AT vISW?   FX NOP AT vADJ
        CALL `NUM `EXE `NUM, `COM THEN OP[]! ; { TINIT}

: T: (ZST =H >, ;






\ 33
: =! 0 =: : USED+ TD @  NAME> 2+ INC ;
: T:: =H TWICE  USED+ ;  : =P HERE 1+ =: ; : ;2- EX 2- ;
: AT' ;2- : TO' ;2- : ' ;?# TOKEN? TFND ; : VAL' ' 2+ ;
: @' ' : T@ T>R @ ;  : META ' VAL' : T! T>R ! ;
: TTO TO' , ; : TAT AT' , ;
: THACK ' @HACK ; : TSEE ' @SEE ;             : TDEF ;<D> DEF ;
: T=USED ;<D> =USED ; : T>USED ;<D> >USED ; : THIDE ;<D> HIDE ;
: APT- ' THIDE :; : REUSE >LT< TO LTIB ;
: APT2 APT- : APT THIDE REUSE =: ;
: : T: ;






\ 34
% ESC % ,<` %2 MARK> CALL`  %2 MARK> [`
% TWICE` % ?;` % ;THEN`          % {`    % \`
% AHEAD`  % REPEAT`  % AGAIN`   % UNTIL`  % BEGIN`  % WHILE`
                         % IF`  % THEN`         % ;;`   % -IF`
% IND<` % IND>` % DO>`  % DO<`  % LOOP` % NEXT` % <NEXT`
% UNTIL-` % ]`  % FOR`  % FOR>`          % IF-` % CSWAP>`
%2 TAT AT`      %2 TTO TO`
%2 :RDROP (RDROP` %2 :(DROP (DROP`
\ 35
%2 :RECURSE RECURSE`   %2 T:: :` %2 :(IF IO`     %2 :(1- (1-`

\ % ;CASE` % CASE` % OF` % ENDOF` % ELSE`
% ;`    %2 TGO GO;`    %2 TDOES DOES>`    %2 T:;T :;`
%2 <RELS RELEASE<`
%2 TOF OF`    %2 TELSE ELSE`   %2 TELSE ENDOF`
%2 TEST? TEST?`

\ 35
{ PB5 PR5.COM C5 PRB C4 }
 27 32 THRU
: .BLK #. /DBG ;
: STOP (LIT TO ESC  @  (LIT (; - 0; MARK@ HIDROP INITO ;;
: START STOP : EGG CR CR
." EGG " 23000 HIPUSH MARK!  FX NOP TO ESC
   34 LOAD      <H> TINIT  36 62 THRU ;;
33 LOAD
PRUNE

\ nf10\PB5\MART\





\ 36
INCLUDE F_KRNL.CF  AFGADSFGSDF
