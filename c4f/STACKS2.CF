\ USER STACKS & COMPILER BRANCH RESOLVING

\ : HTOP AT HNDLS @ @ ;
: HTOP CALL @ @ ;THEN
 (VAR3 AT >PUSH 
: HNDLS >POP ,< ' `FLS 40 + , ' `FLS  , ' `FLS  40 + ,
>,  (VAR3 AT >PUSH 
: CSTK> >POP ,< ' `FWD 40 + , ' `FWD  , ' `FWD  40 + ,
>,  (VAR3 AT >PUSH 
: <CSTK >POP ,< ' `BCK 40 + , ' `BCK  , ' `BCK  40 + ,
: `STK> CSTK>
: `STK>|  EX TO CSTK> ;    
: `<STK <CSTK
: `<STK|  EX TO <CSTK ;
: CSWP> `STK> `STK> SWAP ; 
: <CSWP `<STK `<STK SWAP ;
: `<CLR> AT CSTK> STK!  AT <CSTK STK! ;

: `[>, PUSH `Ivague? IF  H @I CALL CSWAP>  POP!; THEN  (D#0
: @, @ 
: , |H 
: !+   PUSH !R+ POP; 

: ORG! H - ,<    0 VALUE HOFS
TO' H  =: OBJ! 
>,
: `MRK> H  TO CSTK>       \ MARK>
: Z, 0 SKIP 
: ,| EX        THEN , \  CALL
: LASTH! H ,<
0 VALUE LASTH

: |LASTH EX LASTH! ;

: `<RLS <CSTK TO LASTH! ; \ RELS  , : LASTH! H ,<

: HERE H  
: R>T HOFS + ;
\ : RTR| R>T EX 
: T>R HOFS - ; 
: T! T>R ! ;
: `<MRK HERE TO <CSTK LASTH! ;  \ BEGIN

>, EX  \ THEN|
: `RLS> LASTH! CSTK> HERE SWAP! ; 

: (DO SWAP POP -ROT  PUSH PUSH PUSH;

: (LP 1 
: `(+LP XR POP POP I- +2/ 0<   IF
: `(LP; DROP RDROP 2+ PUSH; 
: `(-LP NEG  THEN I+ PUSH @ PUSH;
 
: (+LP (-IF `(+LP NEG XR POP J POP - +2/ 0< (IF `(-LP `(LP; ;

 
CR .( STACKS2  ) BYTE. HTOP
