: NUP XEP| : DUP (DUP ; AT' AT' =: VAL'  AT' VAL' =: TO' MCLR 
>, (EX : `EL? BLK 0<>; : \ |LTIB (DUP 0; 1- : L/ (@&; ,< -64 , 
TO' `EL? TO' TOKEN? ! : |A (XA (A@ EXECUTE (XA (RDRP; : ALLOT 
|H + ;  TO' C! =: SWAPC! TO' SWAPC! =: C_OFF    TO' :, =: ?:,
: C:` |, ADR' ; : (VAR3 (D#2 ; ' EVAL  AT' QUIT !  \ FIX
: |THEN (EX : THEN` BEGIN` : SWAP! SWAP ! ; ' \ =: \`
<M> : 0#> D# (, (D#0 ; : ."` (, (." "STR, ; : A"` (, (!" "STR,
 ; : "` (, (" "STR, ;  <M> : A@ (A@ ; : ?` ADR' SWAP! ; 
0#> @ADR+ , ; ?:, TO` -2 , ?:, AT` -4 , :, VAL` 2 ,
: T>R HOFS - (; (@R+ : EMIT| TO EMIT (XR (PUSH AT EMIT (EX (POP
 AT EMIT ; : @INT+ TO |+ TOKEN? T FND N?? : /FND TO UNDEF? VAL 
ADR' ; : `FND TOKEN? DXEP| : (FND  TFND N?? ; : ELDER` |, `FND 
SWAP (FND /FND ;
0#> @INT+ (PUSH ;  ?:, TO -2 , ?:, AT -4 , ?:, X:` Z, :, VAL 2
 , 0#> @ADR+ : T! T>R ! ; ?:, TO! -2 , ?:, AT! -4 , ?:, BE! Z,
 :, VAL! 2 ,  : OR (NOT SWAP (NOT : NAND (NAND ; : @' ADR' @ ;
<M> M: :JUMP` (JUMP; '" ?M: ;;` (;" M: RDROP` (RDROP; 
'" ?M: :IO;` (IO;"   M: IF-` (IF- MARK>;  M: IF` (IF MARK>; 
M: -IF` 1+ IF-; M: UNTIL` (IF <RELS; <M> : `SP (SP@ CSP SWAP -
; : `PR `SP (0< A" PAIR?" ; : |UNW (EX :  UNW` : UNW |DROP 
: @H- |H : @- 2- @+ 2- ; : ]` : ;THEN` |THEN : ;` `SP TO ,<` (|
;;` `PR LASTH H - 2+ 0<>; LASTH @ ODD 0<>; RDROP @H- : AGAIN` 
|, :JUMP :JUMP` : AHEAD` :JUMP` MARK>` ;  : < - : 0< (0< ; : I 
(J ; : NEG (NEG ; : |NIP (EX NIP ; : SP@ (SP@ ; : = - (0= ; 
: AND (NAND : NOT (NOT ; : A-L XEP| : I- (J - ; : `(2?+ XEP| 
: 2DUP+ (| + : 2DUP (OVER : OVER (OVER ; : |2DROP (EX : 2DROP 
(DROP (DROP; : PREFETCH TOKEN? >LT< TO LTIB ; : .STR| (XR (POP
: ..TIMES |DROP .TIMES ; : XDROT XEP| : DROT (| ROT  : D0 0 0 ;
: (IXEC (J (PUSH; : UNTIL| BEGIN (IXEC : WHILEZ| UNTIL (RDRP; 
: WHILE| (IF EXIT : UNTILZ| (IXEC  WHILE| ;
>, (PUSH : (BSCN (XR CSTR (POP : BSCAN W>B A! (DUP  (PUSH (FOR 
MARK> : `BSC CSTR (A@ - (IF MARK> X: SWAP  THEN (NEXT `BSC
: `NFND (J (XR (DROP : `/SCAN THEN (DROP (POP (NOT (POP + ; >,
(PUSH : (WSCN (XR STR (POP : SCAN A! (DUP (PUSH (FOR MARK> 
BEGIN X: SWAP STR (A@ - (IF `/SCAN THEN (NEXT <RELS `NFND ;
 TO' (BSCN  VAL! ("SW  \ FIX  
: INBUF (2CON ,<  -$600 , $40 , >, EOS! : `CR (2RDRP; ; UNW 
: `bs  (DUP 0; 1- TO bs SPC TO bs ; : `CH (A@ PRNTBL 0; (A@
 (SKIP : `tab BL (DUP EMIT `(2?+ SWAPC! 1+ : `ZERO ;; : `CHTAB
("SW ,< 5 C, ^H C, ^I C, ^M C, ^Z C, 127 C, >, `CH `bs `tab `CR
 TO `CR `ZERO : RDL  |SPC INBUF : ACCEPT (PUSH 0 BEGIN (DUP I-
 (IF  EXIT  KEY `CHTAB AGAIN ; UNW ' RDL ' QUIT !  \ FIX 
 
 \ PRIMITIV'S MACROSES 
M: :0>` (D#0;        M: :1>` (D#1;        M: :2>` (D#2; 
M: :VAR3` (VAR3;     M: :SET2` (SET2;     M: :CON` (CON;
M: :0"` (0";         M: :!"` (!";         M: :"` (";
M: :code` (code;     M: :BARY` (BARY;     M: :."` (.";
M: :QARY` (QARY;     M: :LARY` (LARY;     M: :WARY` (WARY;
M: POP` (POP;        M: SP@` (SP@;        M: !R+` (!R+;
M: @R+` (@R+;        M: XR`  (XR;         M: XA` (XA;
M: SKIP` (SKIP;      M: +2/` (+2/;        M: OVER` (OVER;
M: DUP` (DUP;        M: J` (J;            M: D2/` (D2/;   
M: NOT` (NOT;        M: PUSH` (PUSH;      M: 0=` (0=;     
M: +*`  (+*;         M: U<` (U<;          M: NAND` (NAND; 
M: U1+`  (U1+;       M: NEG` (NEG;        M: 0<` (0<;      
M: -/` (-/;          M: A@` (A@;          M: RP@` (RP@;  
M: EX` (EX;          M: 2/` (2/;          M: DROP` (DROP;
M: :XARY` (XARY;
M: :VAR` (VAR; '" ?M: RDROP;` (RDRP;" '" ?M: 2RDROP;` (2RDRP;"
'" ?M: DROP;` (DROP;" '" ?M: TROFF;` (TROFF;" 
M: TRICE|` CALL TWICE| THEN; M: TWICE|` CALL THEN; 
M: |` (| MARK>; M: ITER|` RNG| DXEP+|;  \ ZSTR
M: <ITER|` <RNG| TO DXEP|; 

<M>  : PRBA :0> :1> :2> :IO; :0" :!" :" :." \ "PRIMITIV'S
:VAR :VAR3 :SET2 :CON :code :BARY :QARY :LARY :WARY POP SP@ !R+
@R+ XR XA SKIP +2/ DUP J D2/ NOT PUSH 0= +* U< NAND U1+ NEG 0< 
-/ A@ RP@ EX 2/ DROP RDROP; DROP; TROFF; 2RDROP; RDROP TRICE| 
TWICE| ITER| <ITER| OVER BEGIN UNTIL :JUMP ;; | THEN IF- THEN 
-IF THEN IF THEN :XARY ,<  
FORGET PRBA    : :|, :` |, ;
: QUAN :VAR3` : VALUE :SET2` : CONST :|, :CON` ; : VQUAN :VAR3`
: VECTOR :SET2` : DEFER :|, :JUMP` ; : CREATE |UNW : VARIABLE 0
: VAR :|, :VAR` ; : .( ') PARSE TYPE ;; 2* 2* : `ARY| 2* TO 2/ 
:` EX |LASTH : CLARYW TIMES| Z, ; 
: DOES>` :code` (SKIP : 0#> D# :0>` ; : 1#> D# :1>` ; : 2#> D# 
:2>` ; : BARY VAL `ARY| :BARY` ; : WARY `ARY| :WARY` ; : LARY 
TO `ARY| :LARY` ; : QARY AT `ARY| :QARY` ; : XARY `ARY| :XARY`
 ; : BCONST (, |C. CONST ; : `DO POP ADR' ,< 0 
VECTOR `vDO : DO# `DO TOKEN? ">NUM `vDO ; : ZDO `DO 0 `vDO ; 
: DO `DO `vDO ; : DO' `DO ' `vDO ; : IO;` ,<` :IO;` ; : 0"` 
:0"` "STR, ; : "` :"` "STR, ; : A"` :!"` "STR, ; 
: WHILE` TO SWAP IF` ; 
0#> C@, HERE 2+ - , ; ?:, CAL#, $E8 , :, JMP#, $E9 , 
: =P ALIGNED HERE 1+ =: ; =P BRK $CC C, ' (NOP 1- JMP#,
: |VALUE :` CALL` EX` :SET2` THEN` CONST ;  <M>
: 1KMOD (@&; ,< 1023 , 0 |VALUE |SCR SCR 0 VALUE XY  \ VARS 
DO# CONST 6 TIMES   -$700 SBUF  $40 1L   13 cr  16 1H   10 lf 
 -$1 -1 : ON -1 SWAP! ; : OFF 0 SWAP! ; : W>BB 1B !- C@+ C@ ; 
: BB>W SWAP 1B C!+ C!+ 2- @ ;  
: EOS| EOS XR PUSH 0 TO EOS EX POP TO EOS ; : XY? 1K LTIB - ; 0
QUAN Fbuf    ZDO VALUE 6 TIMES _FL _AX _BX _CX _DX _DX2 
: CMOVTO SWAP : `CMOV |NIP TIMES| PUSH CSTR POP C!+ ; 
: >ZSTR CSTR H DXEP| CMOVTO C_OFF ; : CMOVE |DROP `CMOV ;
8 CONST NFILES  NFILES |VALUE `|AFILE AFILE : >FTOP `|AFILE 1-
: `VALID DUP NFILES U< 0= A" HANDLE?" ; : `@HANDLE AFILE ,< 
NFILES WARY HANDLES : >FTOP| >FTOP EX : FTOP!  `@HANDLE ! ; 
: FTOP> [ `|AFILE `VALID 1+ ] : FTOP@ `@HANDLE @ ; 
: @!EMIT| @R+ : !EMIT| TO EMIT XR PUSH AT EMIT EX POP AT EMIT ;
: IO? _FL ODD A" IO?" ; : |REGS EX TO _FL TO _AX TO _BX  \ IO 
TO _CX TO _DX ; : `File| >ZSTR : `IO?| EX IO? _AX _DX TO _DX2 ;
0#> @ : (DOS |REGS IO; $21CD , HERE =: `@INT  DO# C, 16 TIMES  
 $89 $1C $89 $4C $02 $89 $54 $04 $9C $4E $4E $89 $04 $58 $C3 0
?:, Fread $3F00 , ?:, Fwrite $4000 ,  :, Fseek $4200 ,
: >POS: CREATE SWAP C, C,  >, DOES> C@+ C@+ PUSH : GOTOXY BB>W
 D0 $200 : (VID |REGS IO; $10CD , ' `@INT  $EB C, HERE 1+ - C, 
: CRS TIMES| CR ; 0 24 >POS: PAGE 26  CRS  : HOME D0 GOTOXY ; 
0#> @ DROT (DOS (; >FTOP| : FOPEN `File| ,< ?:, `Fopen $3D02 ,
>, >FTOP| : FCREATE `File| ,< ?:, `Fcreate $3C00 , :, StdPut 
$200 , 0#> @ XDROT (DOS ; : CLSD NFILES AFILE - TIMES| FTOP> 
,< :, Fclose $3E00 , : `0>gpt XEP| 0 : `>gpt TO Fbuf AT Fbuf 1 
; : ERRput 2 : FEMIT PUSH `>gpt POP Fwrite ; : FGet FTOP@ SKIP
: StdGet 0 : FKEY `0>gpt Fread [ ^Z ] _AX 0; Fbuf EXIT ; 
: READLN @!EMIT| C: DROP RDL ; : @OPENI| TO FOPEN @R+ TO KEY XR
PUSH AT KEY EX POP AT KEY TO Fclose ; : INCLUDE TO TOKEN? EOS| 
@OPENI| FGet UNTIL| READLN EVAL EOS ; : FTYPE TO TOKEN? @!EMIT|
(BE  EOS| @OPENI| FGet UNTIL| CR RDL EOS ;
: |XY XY EX : >XY 1KMOD TO XY ; : ` CLSD BLK 0; BLK TO SCR  AT 
BLK : XY! XY? >XY ;  ' ` VAL! vINI  ' EVAL  AT! QUIT  \ FIX
INCLUDE HOLD.CF
INCLUDE DEBUG.CF
INCLUDE FLUSH.CF
INCLUDE EDIT.CF
INCLUDE WORDS.CF

ABRAKADABRA

MCLR 
AT' AT' =: VAL'  
AT' VAL' =: TO' 
TO' `EL? TO' TOKEN? ! \ FIX
TO' C! =: SWAPC! 
TO' SWAPC! =: C_OFF  
TO' :` =: :,  
TO' :, =: ?:,
TO' '  =: ,'
TO' I+ =: A+L
TO' TIMES =: .TIMES 
TO' XEP|  =: DXEP|
TO' DXEP| =: DXEP-|
TO' @     =: @2
TO' @2    =: (2CON
' (BARY 2- =: (WARY
' (WARY 2- =: (LARY
' (LARY 2- =: (QARY
' _DX2 6 - =: _DX
' _DX  6 - =: _CX
' _CX  6 - =: _BX
' _BX  6 - =: _AX
' _AX  6 - =: _FL
' PRNTBL 6 - =: BREL?
TO' CSTR   =: C@+
AT' (VID   =: Fseek
AT' Fseek  =: Fwrite
AT' Fwrite =: Fread
TO' 2* =: 4*
TO' 4* =: H*
TO' H* =: B*
TO' B* =: K*

: |THEN (EX 
: THEN` BEGIN` 
: SWAP! SWAP ! ; 
<M> 
Z,
: 0#> D# (, (D#0 ; 
: ."` (, (." "STR, ; 
: A"` (, (!" "STR, ; 
: "` (, (" "STR, ;  <M> 
: ?` ADR' SWAP! ;
: @' ADR' @ ;
 
0#> @ADR+ , ; 
?:, TO` -2 , 
?:, AT` -4 , 
?:, C:`  0 , 
:, VAL` 2 ,
: @INT+ TO |+ TOKEN? T FND N?? 
: `/FND TO UNDEF? VAL ADR' ; 
: T>R HOFS - (; (@R+ 
: EMIT| TO EMIT (XR (PUSH AT EMIT (EX (POP AT EMIT ; 

0#> @ADR+ 
: T! T>R ! ; 
?:, TO! -2 , 
?:, AT! -4 , 
?:, BE! Z,
 :, VAL! 2 ,  
 
0#> @INT+ (PUSH ;  
?:, TO -2 , 
?:, AT -4 , 
?:, X:` Z,
 :, VAL 2 , 

: NUP XEP| 
: DUP (DUP ; 
: |A (XA (A@ EXECUTE (XA (RDRP; 
: ALLOT |H + ;  

: A@ (A@ ; 
: OR (NOT SWAP (NOT 
: NAND (NAND ; 
>, (EX 
: UNW |DROP
: @H- |H 
: @- 2- 
: @. @+ 2- ; 

M: :JUMP` (JUMP; 
'" ?M: ;;` (;" 
M: RDROP` (RDROP;
'" ?M: :IO;` (IO;"   
M: IF-` (IF- MARK>;  
M: IF` (IF MARK>;
M: -IF` 1+ IF-; 
M: UNTIL` (IF <RELS; 
M: TWICE|` CALL THEN;
: -SP (SP@ CSP SWAP - ; 
: ?CSP -SP A" SP?" ;
: PREFETCH TOKEN? >LT< TO LTIB ; 
<M> 
: `PR -SP (0< A" PAIR?" ; 
: QUAN (, (VAR3 
: VALUE (, (SET2
: CONST :` (, (CON , ; 
: CREATE :` Z, ;
: DOES>` (, (code (, (D#0 ;
\ : ZVALUE 0 VALUE ;
\ : #C, ">NUM C, ;
: ]` 
: ;THEN` |THEN 
: ;` -SP TO ,<` (| ;;` `PR LASTH H - 2+ 0<>; 
    LASTH @ ODD 0<>; RDROP @H- 
: AGAIN` |, :JUMP :JUMP` 
: AHEAD` :JUMP` MARK>` ;  <M> 

: < - 
: 0< (0< ; 
: I (J ; 
: NEG (NEG ; 
: |NIP (EX NIP ; 
: SP@ (SP@ ; 
: = - (0= ;
: AND (NAND 
: NOT (NOT ; 
: A-L XEP| 
: I- (J - ; 
: `(2?+ XEP|
: 2DUP+ (| + 
: 2DUP (OVER 
: OVER (OVER ; 
: |2DROP (EX 
: 2DROP (DROP (DROP; 
: .STR| (XR (POP
: ..TIMES |DROP .TIMES 
; 
: XDROT XEP| 
: DROT (| ROT  
: D0 0 0 
;
: C!- DXEP-| C! ; \ : BB>W SWAP 1B C!- C!- @ ;
: BB>W B* SWAP W>B + ;
: W>BB DUP W>B SWAP TWICE| TWICE| 2/ 2/ ;
: (IXEC (J (PUSH; 
: UNTIL| BEGIN (IXEC 
: WHILEZ| UNTIL (RDRP;
: WHILE| (IF EXIT 
: UNTILZ| (IXEC  WHILE| 
;
: INBUF (2CON ,<  -$600 , $40 , 
>, EOS! 
: `CR (2RDRP; 
; UNW
: `bs  (DUP 0; 1- TO bs SPC TO bs ; 
: `CH (A@ PRNTBL 0; (A@ (SKIP 
: `tab BL (DUP EMIT `(2?+ SWAPC! 1+ 
: `ZERO ;; 
: `CHTAB  ("SW ,< 
5 C, ^H C, ^I C, ^M C, ^Z C, 127 C, 
>, `CH `bs `tab `CR TO `CR `ZERO 
: `RDL  |SPC INBUF AHEAD 
: READLN INBUF A+L
: ACCEPT TO EMIT| C: DROP THEN (PUSH 0 BEGIN (DUP I-
 (IF  EXIT  KEY `CHTAB AGAIN 
; UNW 
' `RDL ' QUIT !  \ FIX
' `ZERO VAL! vINI 

: EOS| EOS (XR (PUSH 0 TO EOS (EX (POP TO EOS ; 
0 QUAN Fbuf    
: CMOVTO SWAP 
: `CMOV |NIP TIMES| (PUSH CSTR (POP C!+ ;
: >ZSTR CSTR H DXEP| CMOVTO C_OFF ; 
: CMOVE |DROP `CMOV ;
8 CONST NFILES  
: `|AFILE CALL (EX (SET2 THEN ,< 
NFILES CONST AFILE 
: >FTOP `|AFILE 1-
: `VALID DUP NFILES U< 0= A" HANDLE?" ; 
: `@HANDLE AFILE ,<
: HANDLES (WARY ,< ' Z, AFILE TIMES  
: >FTOP| >FTOP (EX 
: FTOP!  `@HANDLE ! 
;
: FTOP> [ `|AFILE `VALID 1+ ] 
: FTOP@ `@HANDLE @ 
;
: IO? _FL ODD A" IO?" ; 
: `File| >ZSTR : `IO?| (EX IO? _AX _DX TO _DX2 ;
: >POS: CREATE SWAP C, C,  >, DOES> C@+ C@+ (PUSH 
: GOTOXY BB>W  D0 $200 (VID ; : CRS TIMES| CR ; 
0 24 >POS: PAGE 26  CRS  : HOME D0 GOTOXY ;
0#> @ DROT (DOS ;
>, >FTOP| 
: FOPEN `File| ,< 
?:, `Fopen $3D02 ,
>, >FTOP| 
: FCREATE `File| ,< 
?:, `Fcreate $3C00 ,
 :, StdPut $200 , 
0#> @ XDROT (DOS ; 
: CLSD NFILES AFILE - TIMES|
 FTOP> ,<
:, Fclose $3E00 , 
: `0>gpt| 0 SWAP
: `>gpt| XEP| TO Fbuf AT Fbuf 1 ; 
: ERRput 2 
: FEMIT `>gpt| Fwrite ; 
: FGet FTOP@ (SKIP
: StdGet 0 
: FKEY `0>gpt| Fread [ ^Z ] _AX 0; Fbuf EXIT ;
: @OPENI| TO FOPEN (@R+ TO KEY (XR (PUSH AT KEY
   (EX (POP AT KEY  TO Fclose ; 
: INCLUDE TO TOKEN? EOS| @OPENI| FGet
 UNTIL| INBUF ACCEPT EVAL EOS ; 
: FTYPE TO TOKEN? TO EMIT| (BE  EOS| @OPENI| FGet
 UNTIL| CR READLN TYPE EOS ;
 
 
\\\\\\\\\\\\\\\\\\\

INCLUDE MACRO.CF
INCLUDE HOLD.CF
: XY? 1K LTIB - ; 
: 1KMOD (@&; ,< 1023 , 
0 |VALUE |SCR SCR  0 VALUE XY  \ VARS
DO# CONST 6 
TIMES   -$700 SBUF  $40 1L   13 cr  16 1H   10 lf  -$1 -1 
: ON -1 SWAP! ; 
: OFF 0 SWAP! ; 
: |XY XY EX 
: >XY 1KMOD TO XY ; 
: ` CLSD BLK 0; BLK TO SCR  AT BLK 
: XY! XY? >XY 
;  
' ` VAL! vINI  ' EVAL  AT! QUIT  \ FIX

INCLUDE DEBUG.CF
INCLUDE FLUSH.CF
INCLUDE EDIT.CF
INCLUDE WORDS.CF
: MARKER! ;  PAGE .( HELLO FRIENDS )
