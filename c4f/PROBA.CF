FORGET TT : TT ;

: /SCANI RDROP NOT J + 2EXIT ; 

: BSCAN W>B  BSCAN ;

: BSCAN> W>B PUSH XCHG PUSH J PUSH XCHG AHEAD BEGIN 
  C@R+ W>B J - /SCANI ?; THEN UNTIL- 
: 3EXIT POP .2EXIT ;
 
: SCAN PUSH XCHG PUSH J PUSH XCHG AHEAD BEGIN
 @R+ J - /SCANI ?; THEN UNTIL- 3EXIT ;

: TRICE PUSH J XCHG J PUSH ; 
: SAVE&. XEP; ' >NF< ID. EXECUTE CALL J SKIP 
: DNUM. THEN DUP 
: NUM. SPC; 4 .R ;
: 3DUP. CR DNUM. 
: 3DUP TRICE PICK ;
: OK/FAIL> SAVE&.
: ASERT - IF ."FAL_" ;THEN ."OK__" ;

CREATE H1

H1 32 ERASE  "ABCD_ABCD_^A^B^C" DROP  H1 14 DUMP   CR
16 ALLOT

111 222 333 

H1 16 'A 3DUP.  8 OK/FAIL> BSCAN  3 OK/FAIL> BSCAN> ."A"     
H1 16 'B 3DUP.  9 OK/FAIL> BSCAN  4 OK/FAIL> BSCAN> ."B"     
H1 16 'D 3DUP. 11 OK/FAIL> BSCAN  6 OK/FAIL> BSCAN> ."D"     
H1 16  1 3DUP. 13 OK/FAIL> BSCAN 13 OK/FAIL> BSCAN>          
H1 16  2 3DUP. 14 OK/FAIL> BSCAN 14 OK/FAIL> BSCAN>          
H1 16 BL 3DUP. 12 OK/FAIL> BSCAN  7 OK/FAIL> BSCAN> ."SPCE"  
H1 16 99 3DUP. -1 OK/FAIL> BSCAN -1 OK/FAIL> BSCAN> ."c"     
H1 16 'C 3DUP. 10 OK/FAIL> BSCAN  5 OK/FAIL> BSCAN> ."C"     
H1 16 13 3DUP.  2 OK/FAIL> BSCAN  2 OK/FAIL> BSCAN>          
H1 16  3 3DUP. 15 OK/FAIL> BSCAN 15 OK/FAIL> BSCAN>          
H1 16 'B 3DUP.  9 OK/FAIL> BSCAN  4 OK/FAIL> BSCAN> ."B"     
H1 16 0  3DUP.  1 OK/FAIL> BSCAN  0 OK/FAIL> BSCAN> ."ZERO"  

CR . . . CR

{ MAKERS }
: `MKR 0 =, , EX : ,' ' , ;   : `W, STR , ;
: 3MKR `MKR , , DOES>  `W,    : `W: `W, : `(: =H `W, @EXECUTE ; 
: 2MKR `MKR , DOES> `W: ;     : 1MKR `MKR DOES> `(: ;

{ DOERS }
: `WITH POP ' ,<  0 VECTOR `DO   : WITHZ `WITH 0 `DO ;
: WITH' `WITH ' `DO ;            : WITH# `WITH >NUM `DO ;
: WITH  `WITH `DO ;              : WITH+ `WITH DUP `DO OVER+ ;
: FAMILY WITH+ SWAP ..TIMES ;    : FAMILY# WITH# SWAP ..TIMES ;

{ DEFINITIONS }
-1 QUAN {LVL
0 VALUE `(LOCATE
0 VALUE `OLDT

: `{?NAMES ,<  
  @' ?:STR , 
  4 WARY `NAMES
: `{NAMES "//" "{" "\" "}" 
BEGIN
    [ 4 -1 `NAMES ! ] 4 TIMES; 2- J `NAMES ! ; 
,<
    `{NAMES   <CSTK TO H

{ BODY }
' \ =: `\ 
: `} {LVL  AT {LVL DEC 0<>;  
  `(LOCATE AT LOCATE 
: `// 
  FOUND 0>=;  
  H @ TO FOUND 
; 
: `REM/ 
  {LVL 0<>;     \ RETURNS ON (0 <> LVL)
: {REM/} 
  H OFF         \ NO PARAMETTERS
  -1 TO FOUND   \ NO LOCAL PARAMETTERS
  TO LOCATE TO `(LOCATE \ OLD FORTH VM STATE
  PAD OFF       \ EMPTY LONG STRING ON PAD
;
: `PAD+ 
  TBUF 
  [ {LVL 0= DROP ?; 
: PAD+" H INC DROP; PAD XEP;
    CSTR J STR + (MOVM BL SWAP C!+ (;S! 
  ] POP 1 
;
: `{ AT {LVL INC `REM/ LOC! 
  `{?NAMES ?DUP `PAD+ ?; 
    1- [ @ 1 ] ,< 
0 WARY `{NAMES: >, `} `\ `{ `// ,<

: >. TOKEN? ID. ;
' `{ =: {
'  { =: {`

' PARSTK  4 + CONST PARPTR^   
: `@PAR @ PARPTR^ @ + ;   
-64 CONST >EACH
0#> `@PAR @ ;  
1#> `@PAR ! ;  
2#> `@PAR ; 
3MKR PQUAN ,

: `>EACH OVER XEP; 
: `EACH >EACH CSTR SBUF S! +S! STR EVAL ; 
: N`THP CALL
: ?LENP { ADR -- ADR LEN } [ 1- OVER- ] DUP 
: >NXTP { ADR-ADR` } 1 
: NPAR  THEN { ADR CNT -- ADR` } 
    FOR BEGIN CSTR BL = UNTIL NEXT DROP ; 
: REMARR} NIP; 
: COMMENT} PAD STR H @ XEP; DUP J OR 0;
    2DUP + 1- C@ BL - !"NO_COMMENT" ;
: SHOW} COMMENT} CR . TYPE ;
: EVAL} COMMENT} DROP EVAL ; 

2 0 8 FAMILY PQUAN  `V0 `V1 `V2 `V3 `V4 `V5 `V6 `V7 

: `ZEROS TIMES; 0 TO PARSTK ; 
: `FILLPAR TIMES; TO PARSTK ; 
: `SETPAR C@R+  C@R+ P>BYT XCHG PUSH `ZEROS `FILLPAR   EX
    POP PARPTR^ +! ;  
: RETURN` `OLDT TO T ; 

\  FOUND TO `V3   COUNT  TO `V2    LEN TO `V1    LIST TO `V0 
: ``=: -1 
: `=SEVAL  "=:_`" SEVAL  ; 
: LOCALS/` AHEAD` ,<` CSTK> ; 
: /LOCALS ``=: TO CSTK> >, THEN` ;
: FUNC: COMMENT} DUP FOUND - `SETPAR ,< 4 C, 0 C, >, bs `V2
    UMAX U< !"TOO_MANY_PARS" =H  T TO `OLDT "=:_" >EACH >" 
	`V2 FOR I 8 U* (LIT `V0 + `V0 I N`THP `EACH NEXT 
	`=SEVAL (LIT `SETPAR , `V2 `V3 - C, `V3 C, >, ;    

: TAB? 78 CNTC - U< CR ?; 2 SPACES ;

: HAN PUSH "SRC"_PILON" "TMP"_PILON" "DST"_PILON" POP ,<
{ SRC_PILON TMP_PILON DST_PILON DISKS } 
FUNC: HANOJ 
LOCALS/ 
        : .FROM SRC_PILON "__From_"  
        : .PILON ID. ID. ; 
        : .TO DST_PILON "To_" .PILON ; 
/LOCALS 
  DISKS 0; 
  AT DISKS DEC 
  DISKS IF 
	  SRC_PILON DST_PILON TMP_PILON DISKS  HANOJ
    SRC_PILON TMP_PILON DST_PILON 1      HANOJ
    TMP_PILON SRC_PILON DST_PILON DISKS  HANOJ ;;
  THEN 
  CR ."Move_Disk" .FROM SPACE .TO   
RETURN  ;;

: QUINS CR 0 ,< 
{ X // IDX } FUNC: QUIN  
LOCALS/  
    8 CONST Q8  
    Q8 BARY ROW  
    Q8 BARY FROW  
 Q8 2* BARY DIAG\ 
 Q8 2* BARY DIAG/ 
  : ADD_QUIN IDX 1+ X ROW C! ; 
  0#> PUSH IDX FROW 
      IXEC X IDX + DIAG\
      IXEC Q8 IDX - X + DIAG/ ;  
  N: TEST >, C@ OR ; 
  N: SET >, 1 CSWAP! ; 
  =, RESET >, 0 CSWAP! ;
/LOCALS  
  X Q8 - IF 
    Q8 TIMES; 
    J TO IDX  0 TEST 0<>;  
    ADD_QUIN SET X 1+ QUIN RESET ;
  THEN 
  [ Q8 TAB? ] 0 Q8 1- RNG>; 
    ROW C@ ALPHA EMIT   
RETURN ;


: PERM CR CSTR 20 UMIN 
LOCALS/   
  0 VALUE `LEN   
  20 BARY `ARP  
  : `>ARP 0 `ARP ;
  : `PRINT [ `LEN TAB? ] `>ARP `LEN TYPE ; 
  : `SWAP { S D } `ARP PUSH `ARP DUP PUSH
    C@ { S@ } J  C@ { D@ } POP C! { S! } POP  C! { D! } ;
/LOCALS  
  DUP TO `LEN `>ARP MOVM `LEN  ,< 
{ N } FUNC: `PERMUTE \ LOCALS/ /LOCALS
    N 0;  AT N DEC  N `PRINT ?; 
	N `PERMUTE  N TIMES;  J N `SWAP  N `PERMUTE  J N `SWAP  
RETURN ;

{ >A >L A L { INSERTING A L WITH BLANK -- >A` >L` } }
FUNC: S"INSERT 
LOCALS/   
  : INS DUP AT >L +! >A (MPUSH TO >A ;
/LOCALS   
  "_" CSTR INS A L INS   >A >L 
RETURN ;

: SIGNA SPC; [ : `SEMIT DUP EMIT ] XEP; ,<
{ A B C D E F G H } FUNC: `ASIGN
    CR
    A `SEMIT B `SEMIT C `SEMIT D `SEMIT
    E `SEMIT F `SEMIT G `SEMIT H `SEMIT 
RETURN ;

CR 'S 'I 'G 'N 'A 'T 'U 'R 'E SIGNA CR 
\ H 32 ERASE  "ABCD_ABCD_" DROP  H 14 DUMP CR
\ SIGNA H 14  1 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN>  
\ SIGNA H 14  2 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN>  
\ SIGNA H 14  3 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN> 
\ SIGNA H 14 'B 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN> ."B" 
\ SIGNA H 14 0  3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN> ."ZERO"
\ SIGNA H 14 BL 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN> ."SPCE"
\ SIGNA H 14 10 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN>  
\ SIGNA H 14 'A 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN> ."A"
\ SIGNA H 14 'B 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN> ."B"
\ SIGNA H 14 'C 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN> ."C"
\ SIGNA H 14 'D 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN> ."D"
\ SIGNA H 14 99 3DUP. OK/FAIL> BSCAN  OK/FAIL> BSCAN> ."E"
CR SIGNA  WITH EMIT 9 TIMES
\ } EVAL}
\ CR
\ ARGRGSFDGSDFGDS


: FOREACH >EACH >" COMMENT} TBUF BL ERASE ,< 
{ SADR SLEN CNT // STEP OFST DEST } 
FUNC: `FOREACH 
LOCALS/ 
  : CHAR+ 
    DEST C!+ TO DEST ; 
  : BAD 1 
  : BAD? 
    !"PARAMS?" ; 
  : DFLT 
    DROP 
  : DEFAULT 1 TO STEP "_^A" >EACH "+! DROP ; 
  : HAS_PARAMS? 
    [ TBUF CSTR BAD? 
      BL 1- 0 BSCAN> DFLT ?; 
      DUP TO STEP DEFAULT ?; ] 
    >EACH CSTR .TIMES; 
      CSTR DUP BL U< DROP ?;
        TBUF + INC ; 
  : PREPARE 
    [ SADR STEP DUP AT SLEN +! NPAR TO SADR ] 
    OFST TO DEST >EACH CSTR .TIMES; 
      CSTR DUP BL U< CHAR+ ?; 
      1- PUSH  SADR POP N`THP .TIMES; 
        CSTR CHAR+ ; 
/LOCALS 
  CNT 0; 
    SADR SLEN + TO OFST 
    SADR CNT NPAR OFST - BAD? HAS_PARAMS? 
    CNT STEP (/MD !"ODDLIST" 0 TO SLEN	TIMES; 
      PREPARE OFST DEST OVER- EVAL 
RETURN ;

: ** DUP U* ; 
: 2^ 1 SWAP TIMES; 2* ;
CR { ASDF ASFD AFDS AFSD } """^A""_ID." FOREACH 
CR 0 { %1111 $20 '~ 3#200 7#100 99 ^A 'A } 
">NUM_^A_." FOREACH .
CR { %1111 $20 '~ 3#200 7#100 99 ^A 'A } 
">NUM_^A_NEG_." FOREACH 
CR { %1111 $20 '~ 3#200 7#100 99 ^A 'A } 
">NUM_^A_**_." FOREACH 

CR { + - U* U/ 2* 2/ UMOD NEG } ">." FOREACH
CR { + - U* U/ 2* 2/ UMOD NEG }
 "'_^A_'$_EMIT_H._>._=:_>." FOREACH
CR { + - U* U/ 2* 2/ UMOD NEG } ">._^A_>._=:_>._^B" FOREACH
{ 1 A 2 B 3 C 4 D 5 E 6 F } ">NUM_^A_CONST_^B1" FOREACH 

CR { 1 . 2 3 + } "" FOREACH
CR 

{ \ DFGHDFGH
: \ DFGHDFGHDFGH
A \ SDFGHDFGHDFGHDFG
2 { SDFGHSDFGHDFG { SDFGSDFGSDF } }
3 \ SDFGDFGHFD
+ { FDGHDFGHDFG
}
.
;
} SHOW} EVAL}
