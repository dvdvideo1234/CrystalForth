FORGET PRM
: PRM ;

: (DO SWAP POP -ROT  PUSH PUSH PUSH;

: (LP 1 
: `(+LP XR POP POP I- +2/ 0<   IF
: `(LP; DROP RDROP 2+ PUSH; 
: `(-LP NEG  THEN I+ PUSH @ PUSH;
 
: (+LP (-IF `(+LP NEG XR POP J POP - +2/ 0< (IF `(-LP `(LP; ;

M: DO` (DO BEGIN;
M: LOOP` (LP <RELS;
M: +LOOP` (+LP <RELS;

\ : ?DUP DUP 0; DUP ;
: `PRIM; RDROP RDROP 
: `PRIM2; NAND 0& ;

: 2^ TO 1H  1 SWAP TIMES| 2* ; \ 15 AND 
: AVG +2/ NIP ;
: ABS -IF NEG THEN ;
: DMAXBIT DUP IF SWAP [ 16 + ] THEN DROP
: MAXBIT 0 SWAP BEGIN DUP WHILE U1+ 2/ REPEAT DROP 1- ;
: UDSQRT
  2DUP OR 0= SKIP? DROP;   
  -3 OVER U< IF `PRIM2; 1- ;THEN 
   2DUP DMAXBIT  2/ 2^ DUP 1- OR AHEAD  
   BEGIN A@ AVG THEN A! 2DUP VAL (UM/ DROP DUP A@ - ABS 2 U<
   UNTIL   -ROT 2DROP A@ 2DUP U< IF DROP; THEN NIP ;
: NMOD PUSH 2DUP POP UM/MOD 2DROP ;
: ?30  DUP 1H U< 
  IF  \ FEDCBA9876543210      \ 1 7 11 13
    2^ %0010100010000010  AND \ 10370
  ;THEN  
: `?30  1H -  \ FEDCBA9876543210       \ 17 19 23 29 31
            2^ %1010000010001010 AND ; \ -24438 

: PRIM DUP 0= 
  IF DROP DUP 1H U< 
    IF  \ FEDCBA9876543210     \ 1 2 3 5 7 11 13 
      2^ %0010100010101110 AND \  10414
    ;THEN
    DUP 32 U< 0= (IF `?30 
    0  
  THEN       
  30 NMOD ?30 (IF  `PRIM2;
  2DUP UDSQRT 5 
  DO 
    I 30 UMOD ?30 
    IF 
      I NMOD (IF `PRIM;
    THEN 
  2 +LOOP  OR ;


: NP DO I 0 PRIM IF I . THEN LOOP ;  
: N. FOR . NEXT ;
: -NP DO I 0 PRIM 
    IF I NEG 0 PRIM IF I . THEN THEN 
  LOOP ;

1 VALUE STEP
: TESTDO DUP 0= SKIP? 1+ TO STEP  DO I U. STEP +LOOP ;
: MUL? DO I DUP UM* NIP . -1 +LOOP ;


