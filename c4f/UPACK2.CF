\ PACK AND UNPACK STRINGS  
\ OPTIONS ,  !  "  :
\ ESCAPE CODES & CONTROL  / ESCAPES  _ SPACE ~ NEGATE MSB

>, (PNT2 ,<  0 DEFER @STATE 
: `SPACE BL SKIP
: `AHLD A@
: HLD, |HLD C!+ ;
: `MSB1 MSB HLD 1- 
: XOR! |@! XOR ;
: `CONTROL  TO @STATE  31& SKIP
: `ESCAPE  TO @STATE    HLD,            
: `COPYCHK  TO @STATE ("SW ,< ,T ^"_~   2ALIGNED 
>, `AHLD  `CONTROL  `ESCAPE `SPACE `MSB1
: `PAR| `DST" TO HLD EX `DST" HLD OVER- TO PUSH" ;;
: ">PK CSTR  \ PACK STRING TO MEMORY  \ SRC LEN DST
: S>PK `COPYCHK  `PAR| STR| CSTR @STATE ;
 
: (," ("SKIP   : "S, CSTR S, ;
: `(0" PUSH VAL `WITHSTK ;

: `ASTRI (BSCN ,<  ,T ",!./@   2ALIGNED  
>, 1- OVER   
: `CHK" C@ `@R<> ,< '" , >, (; ,<
0 WARY `STR  >,  NOOP   "S,  VAL (!"    ".   @ERR    `(0" ,<
0 WARY DBG" >,  :" :," :!" :." :/" :@" :MC" :SW" :SC" ,<
\ : DBG" PUSH 0 `DBG" 7 POP WSCAN ;

: `OK" CSTR AT `CHK" IF S1- DUP 0;  TO `CHK" 0<>; THEN S1- ;
: `U" 1- XEP| `OK" S>PK ;; \  UNDER STRING

: `STR? DUP NAME> 1- `CHK" SKIP? 0=;  DUP 1+ C@ `ASTRI 1+;

\ ( CALL RDROP ) LIKE JUMP
: `STR@  RDROP `U" `STR @EXEC ;;
: `STR@, RDROP `U" DBG" @EXEC ", ;

: `U2" A@ '" HLD, ; 
: `USPACE '_ ;
: ">UPK CSTR  \ UNPACK MEMORY TO STRING  \ SRC LEN DST
: S>UPK `PAR| STR| CSTR  DUP MSB AND
   IF [ '~ HLD, ] MSB XOR THEN
 (| HLD, ("SW  ,< 5 C, '^ C, '~ C, 32 C, '" C, '_ C, 2ALIGNED
 >, CALL `U2"  `U2" `USPACE `U2" `U2" THEN 
 A@ DUP BL U< 0; '^ HLD,
: L+ (@+; ,< '@ ,
 