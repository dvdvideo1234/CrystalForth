\ PREPARE FOR COMPILING EDITOR
CR ."EDITOR_" \ TO BK

: EDIT TO SCR \ (( GLOBALS SCR & XY CHANGED ))
: PE PAGE ,< \ CLEAR SCREEN & EDIT
 ( |        \ LOCAL VARIABLES  ZDO VALUE 5 TIMES
   SZ       \ SIZE OF INSERT/DELETE
   WPOS     \ WORD POSITION IN BLOCK
   WRDS     \ WORDS IN BLOCK  \ FLAGS CHANGES WITH 0
 ) FUNC: E  FLOCK:

' L+   =: N
AT' L+ =: B
AT' LIST =: LOADRAW

\ ALTERNATIVE SCREEN  \ NUMBER OF ALTERNATIVE BLOCK
: ALT (|JUMP LOADRAW CALL |SCR (SET2 THEN ,<  
0 CONST  ALTER  
: _INS CALL 0= (SET2 THEN ,<  0 CONST  INS    \ INSERT STATE
 
\ MOVERS
0#> @ : XY- NEG : XY+ |XY + ; 1#> @ XY+ ; <M> 2MKR MOVER , <M>
: |-> EX ,<   1 MOVER <-     TO' <- =: ->   
: |ZPOS EX : ZPOS 0 TO XY ;  
 64 MOVER L_UP   TO' L_UP =: L_DN 
0#> @ |XY OR ; 1#> @ NOT |XY AND ; <M> 2MKR ANDOR , <M>
: <TAB  <- ,<    3 ANDOR (TAB  : TAB> (TAB -> ;
: <_| L_DN ,<   63 ANDOR L_END   TO' L_END =: L_BEG 

\ COMMON
: X XY (@&; ,< 63 ,           \ COLUMN X := XY AND 63
: Y XY    : 64/  TRICE|  2/ 2/ ;  \ ROW Y := XY / 64
: POS^ XY : POS+ BUFF^ + ;    \ CURRENT POSITION ADDRESS
: EOB^ 1K POS+ ;              \ ENDBUFFER POSITION ADDRESS
: REST 1K XY - ;              \ CHARS AFTER POSITION
: ABUFF BUFF^ 1K ;; EX        \ POSITION AND SIZE
: >WORD 1 POS^ REST           \ WORD ABOVE XY
ROT SCANP# TO WPOS  TO WRDS TBUF C@ TO SZ ; 
   
: |POS XY XR EXECUTE POS^ POP TO XY ;  \ POSITION AFTER ...
: LINE/ |POS L_BEG ; : EOL^   (|JUMP 1+  : /LINE |POS L_END ;

: XY0; XY 0; ; : SZ0; SZ 0; ; \ SMART EXITS 
: 1L<?   1L    : >SZ? TO SZ  : SZ<?   SZ REST U< 0; ;

\ SCREEN MESSAGERS
: ESQ/E /BUFS SKIP  \ EXIT WITHOUT SAVE
: Q/ED FLUSH ,< \ CLRTXT ,<     \ SAVE AND EXIT
 75 15 >POS: ENDPOS EOS! ; 
 72  0 >POS: .INS   INS IF ."INS" ] ."OVT" ; 
 70  2 >POS: .INBUF XY DUP H. 4 .R ; 
 70  4 >POS: .XY    X 3 U.R Y 3 U.R ; 
 70  6 >POS: .CH    POS^ C@ DUP '$ EMIT B. DUP 3 .RS  [EMIT] ; 

: STATE. .INS .INBUF .CH  .XY  
: POSXY X 4+ Y GOTOXY ; 
: |LDRU 1 TO SZ EX UPDATE POSXY  \ REDRAW LINE Y
 LINE/ Y  cr EMIT    .LINE DROP ;
: |RDRSCR EX LOADRAW UPDATE ; \ REDRAW AFTER ...
 
\ PREV AND NEXT WORD
: <WORD WHILE| XY IF ? 0  <- : ~BLANK? BL POS^ C@ U< ;
: BACK TO >WORD  : DO-BACK BEGIN XY0; TO ~BLANK? UNTIL 
: <WORD? ~BLANK? <WORD XY0; -> ;
: SCR; ZPOS <-  : PREPARE L_END  : PREP ( ARE ) DO-BACK |->
: ADV  ~BLANK? IF <WORD? THEN  >WORD WPOS <- XY+ ;
: |SKIPW  EX  ADV -> ;


\ INSERT/DELETE  BASIS
: PREPINS ( >end / FROM> >TO >END )
     XEP|  POS^ J SZ - DUP 
: SZBLANK SZ BLANK ;
: |DELPOS ( >end / )
     POS^ DUP SZ + OVER SZBLANK 
	 EX ONPLACE ;
: |INSPOS ( >end / )
     EX PREPINS ONPLACE ; 
: SZMOV /LINE POS^ - ;
\ PROCEDURES
: RESET  -BUF LOADRAW ;  \ RELOAD UNMODIFIED SCREEN AND REDRAW
: WIPE   |RDRSCR ABUFF BLANK ;
: ONEC A@ BL U< IF : WHAT? 7 EMIT ;THEN A@ (|JUMP -> 
: INSC |LDRU [ POS^ C! ] INS 0; SZMOV 0; |INSPOS EOL^ ;
: BS <-  : DELC |LDRU |DELPOS EOL^ ; 
: DELL 1L<? |RDRSCR : DO-DEL |DELPOS EOB^ ; 
: INSL 1L<? |RDRSCR : DO-INS |INSPOS EOB^ ; 
: altS 1L 1+ >SZ? |RDRSCR        1L TO SZ POS^ <_| 
	  DO-INS POS^ 2DUP - NUP - ONPLACE ; 
: COPY 1L<?         : DO-COPY POS^ SZ DUP XY+ >S ; 
: CUT  1L<? |RDRSCR : DO-CUT DO-COPY  SZ XY- DO-DEL ;
: BKCW DO-BACK 
: CUTW ADV  SZ 0; DO-BACK   |RDRSCR DO-CUT PREP ; 
: MOVE CUTW SZ 0; |SKIPW 
: PASTE SDROP SPTR @  DUP TO SZ 0; SZ<? |RDRSCR
: DO-PASTE DO-INS SPTR 2+ POS^ SZ CMOVE ; 
( DO# =: 19 TIMES   \ KEY CONSTANTS 
   30 kaA       75 kLEFT    72 kUP     
   71 kHOME     79 kEND     73 kPGUP  
   81 kPGDN     80 kDOWN    77 kRIGHT 
   82 kINS      83 kDEL     17 kaW     
  119 kcHOME    32 kaD      15 ksTAB
   31 kaS      115 kcLEFT  117 kcEND 
  116 kcRIGHT  ) (TEXT) EVAL
: @KEY KEY W>BB DUP IF NIP ("SW ,<
( \ KEY'S STRING
19 C,  DO' C, 19  TIMES
  kaA    kLEFT  kUP    kHOME kEND    kPGUP   kPGDN
  kDOWN  kRIGHT kINS   kDEL  kaW     kcRIGHT kcLEFT
  kcEND  ksTAB  kcHOME kaS   kaD   ) 
(TEXT) EVAL  ALIGNED  \ KEY'S TABLE
>, WHAT?  
  ALT   <-   L_UP  L_BEG  L_END  B     N     
  L_DN  ->   _INS  DELC   WIPE   ADV   BACK
  SCR;  <TAB ZPOS  altS   DELL 
THEN DROP ("SW ,< ( \ KEY CONSTANTS
 20 C, DO# C, 20 TIMES
   ^J ^K ^X 127 ^H ^D ^M
   ^G ^Z ^N ^B  ^R ^I ^C
   ^V ^Q ^F ^A  ^[ ^S  ) (TEXT) EVAL ALIGNED
>,  ONEC <- -> CUT BKCW BS DELC 
 <_| CUTW PREPARE N B  RESET TAB> 
 COPY PASTE ESQ/E MOVE ADV Q/ED INSL ,<
;FLOCK  LOADRAW  EOS| BEGIN STATE. @KEY  EOS UNTIL RETURN ;  
 
BYTE. EDIT
