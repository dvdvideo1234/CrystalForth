Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 1
C4F.asm



      1				     ; COMMANDS	     OF	INTERPRETER
      2				     ; JUMP EXIT IF IFM	  CONTROLS
      3				     ; push pop	J DUP	   STACK
      4				     ; !R+ @R+ xR XA	   TRANSFER
      5				     ; +2/ +* AND -/	   MATH	& LOGIC
      6
      7				     locals  @@
      8
      9	      =	dword ptr	     pd	 equ dword ptr
     10	      =	word  ptr	     pw	 equ word  ptr
     11	      =	byte  ptr	     pb	 equ byte  ptr
     12
     13	      =-0001		     TO_     =	-1
     14	      =-0002		     AT_     =	-2
     15
     16				     JMPS_   MACRO LBL
     17				       jmp   SHORT LBL
     18					     ENDM
     19
     20				     SKIPA_  MACRO
     21				       DB    03DH
     22					     ENDM
     23
     24				     SKIPB_  MACRO
     25				       DB    03CH
     26					     ENDM
     27
     28				     SKIPr_  MACRO reg
     29				       mov   reg,0
     30				       org   $-2
     31					     ENDM
     32
     33				     SKIPc_  MACRO reg
     34				       mov   reg,0
     35				       org   $-1
     36					     ENDM
     37
     38				     X_	     MACRO
     39				       xchg  Rsp,DSP
     40					     ENDM
     41
     42				     pushR_  MACRO  REG
     43				       PUSH  REG
     44					     ENDM
     45
     46				     popR_   MACRO  REG
     47				       xchg  t,reg
     48				       drop_
     49					     ENDM
     50
     51				     R2P_    macro   REG
     52				       INC   REG
     53				       INC   REG
     54				       endm
     55
     56				     R2M_    macro   REG
     57				       DEC   REG
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 2
C4F.asm



     58				       DEC   REG
     59				       endm
     60
     61				     @IP_    macro  REG
     62				       MOV   REG,[IP]
     63				       R2P_  IP
     64				       endm
     65
     66				     cf_to_  macro  reg
     67				       sbb   reg,reg
     68					     endm
     69
     70				     DROP_   macro
     71				       MOV   T,[DSP]
     72				       LEA   DSP,[DSP+2]
     73					     endm
     74
     75				     DUP_    macro  REG
     76				       LEA   DSP,[DSP-2]
     77				       MOV   [DSP],REG
     78					     endm
     79
     80				     SWAP_   macro
     81				       XCHG  [DSP],T
     82					     endm
     83
     84				     rchg_   macro   reg
     85				       xchg  ax,reg
     86				       endm
     87
     88				     Zero?_  MACRO   REG
     89				       OR    REG,REG
     90					     ENDM
     91
     92				     CLR_    MACRO   REG
     93				       XOR    REG,REG
     94					     ENDM
     95
     96				     ALiGN_  MACRO  FLAG
     97					     IF	($-START+FLAG) AND 1
     98					     NOP
     99				       @NOPSCNT	= @NOPSCNT+1
    100					     ENDIF
    101					     ENDM
    102
    103	      =0000		     @NOPSCNT =	0
    104
    105				     L_	     MACRO NAM,L@
    106				       ALIGN_  0
    107				     L@:
    108				       NAM   = (($-START+100H) SHR 1)+8000H
    109					     ENDM
    110
    111				     P_	     MACRO NAM,L@
    112				       ALIGN_  0
    113				     L@:
    114				       NAM   = ($-START+100H) SHR 1
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 3
C4F.asm



    115				       ENDM
    116
    117				     N_	     MACRO
    118				       JMP SHORT   @NOP
    119				       ENDM
    120
    121				     ; REGISTERS     for interpretter
    122	      =BX		     T	 = BX  ; DATA STACK TOP	REGISTER
    123	      =BL		     TL	 = BL  ; DATA STACK TOP	REGISTER
    124	      =BH		     TH	 = BH  ; DATA STACK TOP	REGISTER
    125	      =SI		     IP	 = SI  ; INSTRUCTION POINTER
    126	      =SP		     RSP = SP  ; RETURN	STACK POINTER
    127	      =BP		     DSP = BP  ; DATA STACK POINTER
    128	      =CX		     NP	 = CX  ; TO NEXT POINTER
    129	      =DX		     AR	 = DX  ; ARITHMETIC (ALTERNATIVE) REGISTER
    130
    131	      =DI		     WA	 = DI  ; WORK ADDRESS REGISTER
    132	      =AX		     W	 = AX  ; WORK REGISTER
    133	      =AL		     WL	 = AL  ; WORK REGISTER
    134	      =AH		     WH	 = AH  ; WORK REGISTER
    135
    136	0000			     MyCseg  segment para  use16
    137
    138					     assume cs:	MyCseg,	 ds: MyCseg, ss: MyCseg, es: MyCseg
    139
    140					     org 100h
    141
    142	      =-0100		     @TBUF   = -256	     ;	256
    143	      =-0200		     @TIB    = @TBUF  *	2    ;	256
    144							     ;	512 B FSTACK
    145	      =-0400		     @R_TOP  = @TIB   *	2    ; 1024 B RSTACK
    146	      =-0800		     @S_TOP  = @R_TOP *	2    ; 2048 B DSTACK
    147	      =-1000		     @VOCTOP = @S_TOP *	2    ; 4096 B =	4 BUFFERS * 1024 B
    148
    149	0100			     Start   Label byte
    150	0100			     _START:
    151
    152				      P_ _ABORT,@ABORT
1   153				       ALIGN_  0
2   154					     IF	($-START+0) AND	1
2   155					     NOP
2   156				       @NOPSCNT	= @NOPSCNT+1
2   157					     ENDIF
1   158	0100			     @ABORT:
1   159	      =0080		       _ABORT	= ($-START+100H) SHR 1
    160	0100  BC FBFE		       MOV   RSP,@R_TOP-2
    161	0103  BD F7FE		       MOV   DSP,@S_TOP-2
    162	0106  E8 001C		       CALL  @DBG
    163	0109  E8 0010		       CALL  @RETA
    164	010C  0000		      _@INIT  DW 0
    165				     ;AR      DW 0
    166
    167
    168
    169				      ;vvvvvv--------------   IO  ---------------
    170
    171				      P_ _IO,@IO	      ;	( IO
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 4
C4F.asm



1   172				       ALIGN_  0
2   173					     IF	($-START+0) AND	1
2   174					     NOP
2   175				       @NOPSCNT	= @NOPSCNT+1
2   176					     ENDIF
1   177	010E			     @IO:
1   178	      =0087		       _IO   = ($-START+100H) SHR 1
    179	010E  52		       PUSH    AR
    180	010F  93		       XCHG    AX,BX
    181	0110  8B 5E 00		       MOV     BX,[DSP]
    182	0113  8B 4E 02		       MOV     CX,[DSP+2]
    183	0116  8B 56 04		       MOV     DX,[DSP+4]
    184	0119  FF D6		       CALL    IP
    185	011B  5A		       POP     AR
    186
    187				     ;^^^^^^--------------   IO	 ---------------
    188
    189
    190				     ;-------------------------------------------
    191				     ; CONTROL
    192				     ;-------------------------------------------
    193
    194				      P_ _RET,@RETA	      ;	( (;
1   195				       ALIGN_  0
2   196					     IF	($-START+0) AND	1
2   197					     NOP
2   198				       @NOPSCNT	= @NOPSCNT+1
2   199					     ENDIF
1   200	011C			     @RETA:
1   201	      =008E		       _RET   =	($-START+100H) SHR 1
    202	011C  5E			     POP     IP
    203					     N_
1   204	011D  EB 4F		       JMP SHORT   @NOP
    205	011F			     @DROP:  DROP_
1   206	011F  8B 5E 00		       MOV   T,[DSP]
1   207	0122  8D 6E 02		       LEA   DSP,[DSP+2]
    208	0125  C3		     @DBG:   RET
    209
    210				      P_ _SKIP,@SKIP	      ;	( SKIP
1   211				       ALIGN_  0
2   212					     IF	($-START+0) AND	1
2   213					     NOP
2   214				       @NOPSCNT	= @NOPSCNT+1
2   215					     ENDIF
1   216	0126			     @SKIP:
1   217	      =0093		       _SKIP   = ($-START+100H)	SHR 1
    218	0126  EB 11			     JMP  SHORT	   @SKIP2
    219				      P_ _IFM,@IFM
1   220				       ALIGN_  0
2   221					     IF	($-START+0) AND	1
2   222					     NOP
2   223				       @NOPSCNT	= @NOPSCNT+1
2   224					     ENDIF
1   225	0128			     @IFM:
1   226	      =0094		       _IFM   =	($-START+100H) SHR 1
    227	0128  EB 01			     JMP  SHORT	   @IFM2
    228				      P_ _MIF,@MIF
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 5
C4F.asm



1   229				       ALIGN_  0
2   230					     IF	($-START+0) AND	1
2   231					     NOP
2   232				       @NOPSCNT	= @NOPSCNT+1
2   233					     ENDIF
1   234	012A			     @MIF:
1   235	      =0095		       _MIF   =	($-START+100H) SHR 1
    236	012A  43			     INC     T
    237	012B			     @IFM2:
    238	012B  4B			     DEC     T
    239	012C  78 0B			     JS	     @SKIP2
    240
    241				      P_ _JUMP,@JUMP		 ; ( (JUMP
1   242				       ALIGN_  0
2   243					     IF	($-START+0) AND	1
2   244					     NOP
2   245				       @NOPSCNT	= @NOPSCNT+1
2   246					     ENDIF
1   247	012E			     @JUMP:
1   248	      =0097		       _JUMP   = ($-START+100H)	SHR 1
    249	012E  8B 34			     MOV     IP,[IP]
    250					     N_
1   251	0130  EB 3C		       JMP SHORT   @NOP
    252
    253				      P_ _IF,@IF	      ;	( IF
1   254				       ALIGN_  0
2   255					     IF	($-START+0) AND	1
2   256					     NOP
2   257				       @NOPSCNT	= @NOPSCNT+1
2   258					     ENDIF
1   259	0132			     @IF:
1   260	      =0099		       _IF   = ($-START+100H) SHR 1
    261	0132  4B			     DEC     T
    262	0133  43			     INC     T
    263	0134  E8 FFE8			     CALL    @DROP
    264	0137  74 F5			     JZ	     @JUMP
    265	0139			     @SKIP2:
    266	0139  AD			     LODSW
    267					     N_
1   268	013A  EB 32		       JMP SHORT   @NOP
    269
    270				      P_ _RDEC1,@RDEC1
1   271				       ALIGN_  0
2   272					     IF	($-START+0) AND	1
2   273					     NOP
2   274				       @NOPSCNT	= @NOPSCNT+1
2   275					     ENDIF
1   276	013C			     @RDEC1:
1   277	      =009E		       _RDEC1	= ($-START+100H) SHR 1
    278	013C  58			     POP     W
    279					     SKIPA_
1   280	013D  3D		       DB    03DH
    281				      P_ _RDEC2,@RDEC2
1   282				       ALIGN_  0
2   283					     IF	($-START+0) AND	1
2   284					     NOP
2   285				       @NOPSCNT	= @NOPSCNT+1
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 6
C4F.asm



2   286					     ENDIF
1   287	013E			     @RDEC2:
1   288	      =009F		       _RDEC2	= ($-START+100H) SHR 1
    289	013E  58			     POP     W
    290					     R2P_    W
1   291	013F  40		       INC   W
1   292	0140  40		       INC   W
    293					     SKIPA_
1   294	0141  3D		       DB    03DH
    295
    296				      P_ _XR,@XR	      ;	( XR  XCHG
1   297				       ALIGN_  0
2   298					     IF	($-START+0) AND	1
2   299					     NOP
2   300				       @NOPSCNT	= @NOPSCNT+1
2   301					     ENDIF
1   302	0142			     @XR:
1   303	      =00A1		       _XR   = ($-START+100H) SHR 1
    304	0142  58			     POP     W
    305	0143  93			     XCHG    T,W
    306	0144			     @_XA:
    307	0144  50			     PUSH    W
    308					     N_
1   309	0145  EB 27		       JMP SHORT   @NOP
    310
    311				      P_ _XA,@XA	      ;	( XA
1   312				       ALIGN_  0
2   313					     IF	($-START+0) AND	1
2   314	0147  90			     NOP
2   315	      =0001		       @NOPSCNT	= @NOPSCNT+1
2   316					     ENDIF
1   317	0148			     @XA:
1   318	      =00A4		       _XA   = ($-START+100H) SHR 1
    319	0148  58			     POP     W
    320	0149  92			     XCHG    W,AR
    321					     JMPS_   @_XA
1   322	014A  EB F8		       jmp   SHORT @_XA
    323
    324				      P_ _RSTP,@RSTP	     ; ( !R+
1   325				       ALIGN_  0
2   326					     IF	($-START+0) AND	1
2   327					     NOP
2   328				       @NOPSCNT	= @NOPSCNT+1
2   329					     ENDIF
1   330	014C			     @RSTP:
1   331	      =00A6		       _RSTP   = ($-START+100H)	SHR 1
    332	014C  5F			     POP     WA
    333	014D  93			     XCHG    T,W
    334	014E  AB			     STOSW
    335	014F  57			     PUSH    WA
    336				      P_ _DROP,@_DROP	       ; ( DROP
1   337				       ALIGN_  0
2   338					     IF	($-START+0) AND	1
2   339					     NOP
2   340				       @NOPSCNT	= @NOPSCNT+1
2   341					     ENDIF
1   342	0150			     @_DROP:
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 7
C4F.asm



1   343	      =00A8		       _DROP   = ($-START+100H)	SHR 1
    344					     JMPS_   @DROP1
1   345	0150  EB 01		       jmp   SHORT @DROP1
    346
    347				      P_ _PUSH,@PUSH	      ;	( PUSH
1   348				       ALIGN_  0
2   349					     IF	($-START+0) AND	1
2   350					     NOP
2   351				       @NOPSCNT	= @NOPSCNT+1
2   352					     ENDIF
1   353	0152			     @PUSH:
1   354	      =00A9		       _PUSH   = ($-START+100H)	SHR 1
    355	0152  53			     PUSH    T
    356	0153			     @DROP1:
    357	0153  E8 FFC9			     CALL    @DROP
    358					     N_
1   359	0156  EB 16		       JMP SHORT   @NOP
    360
    361				      P_ _J,@J		      ;	( J
1   362				       ALIGN_  0
2   363					     IF	($-START+0) AND	1
2   364					     NOP
2   365				       @NOPSCNT	= @NOPSCNT+1
2   366					     ENDIF
1   367	0158			     @J:
1   368	      =00AC		       _J   = ($-START+100H) SHR 1
    369	0158  5F			     POP     WA
    370	0159  58			     POP     W
    371	015A  50			     PUSH    W
    372					     JMPS_   @_J
1   373	015B  EB 06		       jmp   SHORT @_J
    374
    375				      P_ _RLDP,@RLDP	      ;	( @R+
1   376				       ALIGN_  0
2   377					     IF	($-START+0) AND	1
2   378	015D  90			     NOP
2   379	      =0002		       @NOPSCNT	= @NOPSCNT+1
2   380					     ENDIF
1   381	015E			     @RLDP:
1   382	      =00AF		       _RLDP   = ($-START+100H)	SHR 1
    383	015E  5F			     POP     WA
    384	015F  8B 05			     MOV     W,[WA]
    385					     R2P_    WA
1   386	0161  47		       INC   WA
1   387	0162  47		       INC   WA
    388	0163			     @_J:
    389	0163  57			     PUSH    WA
    390					     SKIPA_
1   391	0164  3D		       DB    03DH
    392
    393	0165			     @_DUP_:
    394	0165  53			     PUSH    T
    395
    396				      P_ _POP,@POP	      ;	( POP
1   397				       ALIGN_  0
2   398					     IF	($-START+0) AND	1
2   399					     NOP
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 8
C4F.asm



2   400				       @NOPSCNT	= @NOPSCNT+1
2   401					     ENDIF
1   402	0166			     @POP:
1   403	      =00B3		       _POP   =	($-START+100H) SHR 1
    404	0166  58			     POP     W
    405	0167			     @WPUSH:
    406					     DUP_    T
1   407	0167  8D 6E FE		       LEA   DSP,[DSP-2]
1   408	016A  89 5E 00		       MOV   [DSP],T
    409	016D  93			     XCHG    W,T
    410				      P_ _NOP,@NOP	     ; ( NOP
1   411				       ALIGN_  0
2   412					     IF	($-START+0) AND	1
2   413					     NOP
2   414				       @NOPSCNT	= @NOPSCNT+1
2   415					     ENDIF
1   416	016E			     @NOP:
1   417	      =00B7		       _NOP   =	($-START+100H) SHR 1
    418	016E  AD			     LODSW
    419	016F  D1 E0			     SHL     W,1
    420	0171  72 02			     JC	     @NEST
    421	0173  FF E0			     JMP     W
    422	0175			     @NEST:
    423	0175  56			     PUSH    IP
    424	0176  8B F0			     MOV     IP,W
    425					     JMPS_   @NOP
1   426	0178  EB F4		       jmp   SHORT @NOP
    427
    428				      P_ _DUP,@DUP	      ;	( DUP
1   429				       ALIGN_  0
2   430					     IF	($-START+0) AND	1
2   431					     NOP
2   432				       @NOPSCNT	= @NOPSCNT+1
2   433					     ENDIF
1   434	017A			     @DUP:
1   435	      =00BD		       _DUP   =	($-START+100H) SHR 1
    436					     JMPS_   @_DUP_
1   437	017A  EB E9		       jmp   SHORT @_DUP_
    438
    439				      P_ _PLAVG,@PLAVG	      ;	( +2/
1   440				       ALIGN_  0
2   441					     IF	($-START+0) AND	1
2   442					     NOP
2   443				       @NOPSCNT	= @NOPSCNT+1
2   444					     ENDIF
1   445	017C			     @PLAVG:
1   446	      =00BE		       _PLAVG	= ($-START+100H) SHR 1
    447	017C  03 5E 00			     ADD     T,[DSP]
    448	017F  89 5E 00			     MOV     [DSP],T
    449
    450				      P_ _2DIV,@2DIV	      ;	( 2/
1   451				       ALIGN_  0
2   452					     IF	($-START+0) AND	1
2   453					     NOP
2   454				       @NOPSCNT	= @NOPSCNT+1
2   455					     ENDIF
1   456	0182			     @2DIV:
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 9
C4F.asm



1   457	      =00C1		       _2DIV   = ($-START+100H)	SHR 1
    458	0182  D1 DB			     RCR     T,1
    459					     N_
1   460	0184  EB E8		       JMP SHORT   @NOP
    461				      P_ _MSB1,@MSB1
1   462				       ALIGN_  0
2   463					     IF	($-START+0) AND	1
2   464					     NOP
2   465				       @NOPSCNT	= @NOPSCNT+1
2   466					     ENDIF
1   467	0186			     @MSB1:
1   468	      =00C3		       _MSB1   = ($-START+100H)	SHR 1
    469	0186  F9			     STC
    470					     JMPS_   @2DIV
1   471	0187  EB F9		       jmp   SHORT @2DIV
    472
    473				      P_ _SDIV,@SDIV	      ;	( -/
1   474				       ALIGN_  0
2   475					     IF	($-START+0) AND	1
2   476	0189  90			     NOP
2   477	      =0003		       @NOPSCNT	= @NOPSCNT+1
2   478					     ENDIF
1   479	018A			     @SDIV:
1   480	      =00C5		       _SDIV   = ($-START+100H)	SHR 1
    481	018A  D1 66 00			     SHL     PW	[DSP],1
    482	018D  D1 D3			     RCL     T,1
    483	018F  3B DA			     CMP     T,AR
    484	0191  72 05			     JB	     @_NO_DIV
    485	0193  2B DA			     SUB     T,AR
    486	0195  FF 46 00			     INC     PW	[DSP]
    487	0198			     @_NO_DIV:
    488					     N_
1   489	0198  EB D4		       JMP SHORT   @NOP
    490
    491				      P_ _PMUL,@PMUL	      ;	( +*
1   492				       ALIGN_  0
2   493					     IF	($-START+0) AND	1
2   494					     NOP
2   495				       @NOPSCNT	= @NOPSCNT+1
2   496					     ENDIF
1   497	019A			     @PMUL:
1   498	      =00CD		       _PMUL   = ($-START+100H)	SHR 1
    499	019A  8B 46 00			     MOV     W,[DSP]
    500	019D  D1 E8			     SHR     W,1
    501	019F  73 02			     JNC     @D2DIV
    502	01A1  03 DA			     ADD     T,AR
    503	01A3			     @D2DIV:
    504	01A3  D1 DB			     RCR     T,1
    505	01A5  D1 5E 00			     RCR     PW	[DSP],1
    506					     N_
1   507	01A8  EB C4		       JMP SHORT   @NOP
    508
    509				      P_ _nAND,@nAND	      ;	( AND
1   510				       ALIGN_  0
2   511					     IF	($-START+0) AND	1
2   512					     NOP
2   513				       @NOPSCNT	= @NOPSCNT+1
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 10
C4F.asm



2   514					     ENDIF
1   515	01AA			     @nAND:
1   516	      =00D5		       _nAND   = ($-START+100H)	SHR 1
    517	01AA  23 5E 00			     AND     T,[DSP]
    518	01AD  45			     INC     DSP
    519	01AE  45			     INC     DSP
    520				      P_ _NOT,@NOT
1   521				       ALIGN_  0
2   522					     IF	($-START+0) AND	1
2   523	01AF  90			     NOP
2   524	      =0004		       @NOPSCNT	= @NOPSCNT+1
2   525					     ENDIF
1   526	01B0			     @NOT:
1   527	      =00D8		       _NOT   =	($-START+100H) SHR 1
    528	01B0  F7 D3			     NOT     T
    529					     N_
1   530	01B2  EB BA		       JMP SHORT   @NOP
    531
    532	01B4			     _END:
    533
    534	01B4			     MyCseg  ends
    535					     end  Start
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 11
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "12/06/19"
??FILENAME		Text   "C4F	"
??TIME			Text   "17:02:02"
??VERSION		Number 0314
@2DIV			Near   MYCSEG:0182		   #456	 471
@ABORT			Near   MYCSEG:0100		   #158
@CPU			Text   0101H
@CURSEG			Text   MYCSEG			   #136
@D2DIV			Near   MYCSEG:01A3		   501	#503
@DBG			Near   MYCSEG:0125		   162	#208
@DROP			Near   MYCSEG:011F		   #205	 263  357
@DROP1			Near   MYCSEG:0153		   345	#356
@DUP			Near   MYCSEG:017A		   #434
@FILENAME		Text   C4F
@IF			Near   MYCSEG:0132		   #259
@IFM			Near   MYCSEG:0128		   #225
@IFM2			Near   MYCSEG:012B		   227	#237
@IO			Near   MYCSEG:010E		   #177
@J			Near   MYCSEG:0158		   #367
@JUMP			Near   MYCSEG:012E		   #247	 264
@MIF			Near   MYCSEG:012A		   #234
@MSB1			Near   MYCSEG:0186		   #467
@NAND			Near   MYCSEG:01AA		   #515
@NEST			Near   MYCSEG:0175		   420	#422
@NOP			Near   MYCSEG:016E		   204	251  268  309  359  #416  426  460  489	 507  530
@NOPSCNT		Number 0004			   #103	 315  #315  379	 #379  477  #477  524  #524
@NOT			Near   MYCSEG:01B0		   #526
@PLAVG			Near   MYCSEG:017C		   #445
@PMUL			Near   MYCSEG:019A		   #497
@POP			Near   MYCSEG:0166		   #402
@PUSH			Near   MYCSEG:0152		   #353
@RDEC1			Near   MYCSEG:013C		   #276
@RDEC2			Near   MYCSEG:013E		   #287
@RETA			Near   MYCSEG:011C		   163	#200
@RLDP			Near   MYCSEG:015E		   #381
@RSTP			Near   MYCSEG:014C		   #330
@R_TOP			Number -0400			   #145	 146  160
@SDIV			Near   MYCSEG:018A		   #479
@SKIP			Near   MYCSEG:0126		   #216
@SKIP2			Near   MYCSEG:0139		   218	239  #265
@S_TOP			Number -0800			   #146	 147  161
@TBUF			Number -0100			   #142	 143
@TIB			Number -0200			   #143	 145
@VOCTOP			Number -1000			   #147
@WORDSIZE		Text   2			   #136
@WPUSH			Near   MYCSEG:0167		   #405
@XA			Near   MYCSEG:0148		   #317
@XR			Near   MYCSEG:0142		   #302
@_DROP			Near   MYCSEG:0150		   #342
@_DUP_			Near   MYCSEG:0165		   #393	 437
@_J			Near   MYCSEG:0163		   373	#388
@_NO_DIV		Near   MYCSEG:0198		   484	#487
@_XA			Near   MYCSEG:0144		   #306	 322
AR			Number DX			   #129	 179  185  320	483  485  502
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 12
Symbol Table



AT_			Number -0002			   #14
DSP			Number BP			   #127	 161  181  182	183  206  207  207  407	 407  408  447	448  481  +
							   486	499  505  517  518  519
IP			Number SI			   #125	 184  202  249	249  423  424
NP			Number CX			   #128
PB			Text   byte  ptr		   #11
PD			Text   dword ptr		   #9
PW			Text   word  ptr		   #10	481  486  505
RSP			Number SP			   #126	 160
START			Byte   MYCSEG:0100		   #149	 154  159  173	178  196  201  212  217	 221  226  230	235  243  +
							   248	255  260  272  277  283	 288  298  303	313  318  326  331  338	  +
							   343	349  354  363  368  377	 382  398  403	412  417  430  435  441	  +
							   446	452  457  463  468  475	 480  493  498	511  516  522  527  535
T			Number BX			   #122	 206  236  238	261  262  305  333  355	 394  408  409	447  448  +
							   458	482  483  485  502  504	 517  528
TH			Number BH			   #124
TL			Number BL			   #123
TO_			Number -0001			   #13
W			Number AX			   #132	 278  289  291	292  304  305  307  319	 320  333  370	371  384  +
							   404	409  419  421  424  499	 500
WA			Number DI			   #131	 332  335  369	383  384  386  387  389
WH			Number AH			   #134
WL			Number AL			   #133
_2DIV			Number 00C1			   #457
_@INIT			Word   MYCSEG:010C		   #164
_ABORT			Number 0080			   #159
_DROP			Number 00A8			   #343
_DUP			Number 00BD			   #435
_END			Near   MYCSEG:01B4		   #532
_IF			Number 0099			   #260
_IFM			Number 0094			   #226
_IO			Number 0087			   #178
_J			Number 00AC			   #368
_JUMP			Number 0097			   #248
_MIF			Number 0095			   #235
_MSB1			Number 00C3			   #468
_NAND			Number 00D5			   #516
_NOP			Number 00B7			   #417
_NOT			Number 00D8			   #527
_PLAVG			Number 00BE			   #446
_PMUL			Number 00CD			   #498
_POP			Number 00B3			   #403
_PUSH			Number 00A9			   #354
_RDEC1			Number 009E			   #277
_RDEC2			Number 009F			   #288
_RET			Number 008E			   #201
_RLDP			Number 00AF			   #382
_RSTP			Number 00A6			   #331
_SDIV			Number 00C5			   #480
_SKIP			Number 0093			   #217
_START			Near   MYCSEG:0100		   #150
_XA			Number 00A4			   #318
_XR			Number 00A1			   #303
Turbo Assembler	 Version 3.2	    12/06/19 17:02:02	    Page 13
Symbol Table




Macro Name						   Cref	(defined at #)

@IP_							   #61
ALIGN_							   #96	153  172  195  211  220	 229  242  254	271  282  297  312  325	  +
							   337	348  362  376  397  411	 429  440  451	462  474  492  510  521
CF_TO_							   #66
CLR_							   #92
DROP_							   #70	205
DUP_							   #75	406
JMPS_							   #16	321  344  372  425  436	 470
L_							   #105
N_							   #117	 203  250  267	308  358  459  488  506	 529
POPR_							   #46
PUSHR_							   #42
P_							   #111	 152  171  194	210  219  228  241  253	 270  281  296	311  324  +
							   336	347  361  375  396  410	 428  439  450	461  473  491  509  520
R2M_							   #56
R2P_							   #51	290  385
RCHG_							   #84
SKIPA_							   #20	279  293  390
SKIPB_							   #24
SKIPC_							   #33
SKIPR_							   #28
SWAP_							   #80
X_							   #38
ZERO?_							   #88

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

MYCSEG			16  01B4 Para	none		   #136	 138  138  138	138
