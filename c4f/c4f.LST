Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 1
C4F.asm



      1				     ; COMMANDS	     OF	INTERPRETER
      2				     ; JUMP EXIT IF NEXT   CONTROLS
      3				     ; push pop	J DUP	   STACK
      4				     ; !R+ @R+ xR XA	   TRANSFER
      5				     ; +2/ +* AND XOR	   MATH	& LOGIC
      6
      7				     locals  @@
      8
      9	      =	dword ptr	     pd	 equ dword ptr
     10	      =	word  ptr	     pw	 equ word  ptr
     11	      =	byte  ptr	     pb	 equ byte  ptr
     12
     13	      =-0001		     TO_     =	-1
     14	      =-0002		     AT_     =	-2
     15
     16				     JMPS_   MACRO LBL
     17				       jmp   SHORT LBL
     18					     ENDM
     19
     20				     SKIPA_  MACRO
     21				       DB    03DH
     22					     ENDM
     23
     24				     SKIPB_  MACRO
     25				       DB    03CH
     26					     ENDM
     27
     28				     SKIPr_  MACRO reg
     29				       mov   reg,0
     30				       org   $-2
     31					     ENDM
     32
     33				     SKIPc_  MACRO reg
     34				       mov   reg,0
     35				       org   $-1
     36					     ENDM
     37
     38				     X_	     MACRO
     39				       xchg  Rsp,DSP
     40					     ENDM
     41
     42				     pushR_  MACRO  REG
     43				       PUSH  REG
     44					     ENDM
     45
     46				     popR_   MACRO  REG
     47				       xchg  t,reg
     48				       drop_
     49					     ENDM
     50
     51				     R2P_    macro   REG
     52				       INC   REG
     53				       INC   REG
     54				       endm
     55
     56				     R2M_    macro   REG
     57				       DEC   REG
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 2
C4F.asm



     58				       DEC   REG
     59				       endm
     60
     61				     @IP_    macro  REG
     62				       MOV   REG,[IP]
     63				       R2P_  IP
     64				       endm
     65
     66				     cf_to_  macro  reg
     67				       sbb   reg,reg
     68					     endm
     69
     70				     DROP_   macro
     71				       LODSW
     72					     endm
     73
     74				     DUP_    macro  REG
     75				       R2M_  DSP
     76				       MOV   [DSP],REG
     77					     endm
     78
     79				     SWAP_   macro
     80				       XCHG  [DSP],T
     81					     endm
     82
     83				     rchg_   macro   reg
     84				       xchg  ax,reg
     85				       endm
     86
     87				     Zero?_  MACRO   REG
     88				       OR    REG,REG
     89					     ENDM
     90
     91				     CLR_    MACRO   REG
     92				       XOR    REG,REG
     93					     ENDM
     94
     95				     ALiGN_  MACRO  FLAG
     96					     IF	($-START+FLAG) AND 1
     97					     NOP
     98				       @NOPSCNT	= @NOPSCNT+1
     99					     ENDIF
    100					     ENDM
    101
    102	      =0000		     @NOPSCNT =	0
    103
    104				     L_	     MACRO NAM,L@
    105				       ALIGN_  0
    106				     L@:
    107				       NAM   = (($-START+100H) SHR 1)+8000H
    108					     ENDM
    109
    110				     P_	     MACRO NAM,L@
    111				       ALIGN_  0
    112				     L@:
    113				       NAM   = ($-START+100H) SHR 1
    114				       ENDM
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 3
C4F.asm



    115
    116				     N_	     MACRO
    117				       JMP   NP
    118				       ENDM
    119
    120				     ; REGISTERS     for interpretter
    121	      =BX		     IP	 = BX  ; INSTRUCTION POINTER
    122	      =SP		     RSP = SP  ; RETURN	STACK POINTER
    123	      =SI		     DSP = SI  ; DATA STACK POINTER
    124	      =DX		     NP	 = DX  ; TO NEXT POINTER
    125	      =BP		     AR	 = BP  ; ARITHMETIC (ALTERNATIVE) REGISTER
    126
    127	      =AX		     T	 = AX  ; DATA STACK TOP	REGISTER
    128	      =AL		     TL	 = AL  ; DATA STACK TOP	REGISTER
    129	      =AH		     TH	 = AH  ; DATA STACK TOP	REGISTER
    130	      =DI		     WA	 = DI  ; WORK ADDRESS REGISTER
    131	      =CX		     W	 = CX  ; WORK REGISTER
    132	      =CL		     WL	 = CL  ; WORK REGISTER
    133	      =CH		     WH	 = CH  ; WORK REGISTER
    134
    135	0000			     MyCseg  segment para  use16
    136
    137					     assume cs:	MyCseg,	 ds: MyCseg, ss: MyCseg, es: MyCseg
    138
    139					     org 100h
    140
    141	      =-0100		     @TBUF   = -256	     ;	256
    142	      =-0200		     @TIB    = @TBUF  *	2    ;	256
    143							     ;	512 B FSTACK
    144	      =-0400		     @R_TOP  = @TIB   *	2    ; 1024 B RSTACK
    145	      =-0800		     @S_TOP  = @R_TOP *	2    ; 2048 B DSTACK
    146	      =-1000		     @VOCTOP = @S_TOP *	2    ; 4096 B =	4 BUFFERS * 1024 B
    147
    148	0100			     Start   Label byte
    149	0100			     _START:
    150
    151				      P_ _ABORT,@ABORT
1   152				       ALIGN_  0
2   153					     IF	($-START+0) AND	1
2   154					     NOP
2   155				       @NOPSCNT	= @NOPSCNT+1
2   156					     ENDIF
1   157	0100			     @ABORT:
1   158	      =0080		       _ABORT	= ($-START+100H) SHR 1
    159	0100  BB 1000		       mov   bX,1000h	  ; only 64k allocate
    160	0103  B4 4A		       mov   ah,4ah
    161	0105  CD 21		       int   21h
    162	0107  E8 0010		       CALL  @NEXTS
    163
    164				      P_ _NOP,@NOP	     ; ( NOP
1   165				       ALIGN_  0
2   166					     IF	($-START+0) AND	1
2   167					     NOP
2   168				       @NOPSCNT	= @NOPSCNT+1
2   169					     ENDIF
1   170	010A			     @NOP:
1   171	      =0085		       _NOP   =	($-START+100H) SHR 1
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 4
C4F.asm



    172				       @IP_    WA
1   173	010A  8B 3F		       MOV   WA,[IP]
1   174				       R2P_  IP
2   175	010C  43		       INC   IP
2   176	010D  43		       INC   IP
    177	010E  D1 E7		       SHL     WA,1
    178	0110  72 03		       JC      @NEST
    179	0112  FF E7		       JMP     WA
    180
    181				      P_ _EX,@EX	     ; ( EX
1   182				       ALIGN_  0
2   183					     IF	($-START+0) AND	1
2   184					     NOP
2   185				       @NOPSCNT	= @NOPSCNT+1
2   186					     ENDIF
1   187	0114			     @EX:
1   188	      =008A		       _EX   = ($-START+100H) SHR 1
    189	0114  5F		       POP     WA
    190
    191	0115			     @NEST:
    192	0115  53		       PUSH    IP
    193	0116  8B DF		       MOV     IP,WA
    194				       JMPS_   @NOP
1   195	0118  EB F0		       jmp   SHORT @NOP
    196
    197
    198	011A			     @NEXTS:
    199	011A  5A		       POP   NP
    200	011B  BC FBFE		       MOV   RSP,@R_TOP-2
    201	011E  BE F7FE		       MOV   DSP,@S_TOP-2
    202	0121  E8 001E		       CALL  @RET
    203
    204	0124  0000		     _@INIT  DW	0
    205				     ;AR      DW 0
    206
    207				     ;vvvvvv--------------   IO	 ---------------
    208
    209				      P_ _IODD,@IODD		  ; ( IO
1   210				       ALIGN_  0
2   211					     IF	($-START+0) AND	1
2   212					     NOP
2   213				       @NOPSCNT	= @NOPSCNT+1
2   214					     ENDIF
1   215	0126			     @IODD:
1   216	      =0093		       _IODD   = ($-START+100H)	SHR 1
    217				       DUP_    T
1   218				       R2M_  DSP
2   219	0126  4E		       DEC   DSP
2   220	0127  4E		       DEC   DSP
1   221	0128  89 04		       MOV   [DSP],T
    222
    223				      P_ _IOD,@IOD		; ( IO
1   224				       ALIGN_  0
2   225					     IF	($-START+0) AND	1
2   226					     NOP
2   227				       @NOPSCNT	= @NOPSCNT+1
2   228					     ENDIF
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 5
C4F.asm



1   229	012A			     @IOD:
1   230	      =0095		       _IOD   =	($-START+100H) SHR 1
    231				       DUP_    T
1   232				       R2M_  DSP
2   233	012A  4E		       DEC   DSP
2   234	012B  4E		       DEC   DSP
1   235	012C  89 04		       MOV   [DSP],T
    236
    237				      P_ _IO,@IO	      ;	( IO
1   238				       ALIGN_  0
2   239					     IF	($-START+0) AND	1
2   240					     NOP
2   241				       @NOPSCNT	= @NOPSCNT+1
2   242					     ENDIF
1   243	012E			     @IO:
1   244	      =0097		       _IO   = ($-START+100H) SHR 1
    245	012E  52 55		       PUSH    NP AR
    246	0130  8B 3C		       MOV     DI,[DSP]
    247	0132  8B 4C 02		       MOV     CX,[DSP+2]
    248	0135  8B 54 04		       MOV     DX,[DSP+4]
    249	0138  FF D3		       CALL    IP
    250	013A  5D 5A		       POP     AR NP
    251
    252				     ;^^^^^^--------------   IO	 ---------------
    253
    254
    255				     ;-------------------------------------------
    256				     ; CONTROL
    257				     ;-------------------------------------------
    258
    259				      P_ _DROPX,@DROPX	     ; DROP;
1   260				       ALIGN_  0
2   261					     IF	($-START+0) AND	1
2   262					     NOP
2   263				       @NOPSCNT	= @NOPSCNT+1
2   264					     ENDIF
1   265	013C			     @DROPX:
1   266	      =009E		       _DROPX	= ($-START+100H) SHR 1
    267					     DROP_
1   268	013C  AD		       LODSW
    269					     SKIPB_
1   270	013D  3C		       DB    03CH
    271
    272				      P_ _RDROPX,@RDROPX
1   273				       ALIGN_  0
2   274					     IF	($-START+0) AND	1
2   275					     NOP
2   276				       @NOPSCNT	= @NOPSCNT+1
2   277					     ENDIF
1   278	013E			     @RDROPX:
1   279	      =009F		       _RDROPX	 = ($-START+100H) SHR 1
    280	013E  59			     POP     W
    281
    282	013F  5B		     @RETA:  POP     IP
    283					     N_
1   284	0140  FF E2		       JMP   NP
    285
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 6
C4F.asm



    286				      P_ _RET,@RET	     ; ( (;
1   287				       ALIGN_  0
2   288					     IF	($-START+0) AND	1
2   289					     NOP
2   290				       @NOPSCNT	= @NOPSCNT+1
2   291					     ENDIF
1   292	0142			     @RET:
1   293	      =00A1		       _RET   =	($-START+100H) SHR 1
    294					     JMPS_   @RETA
1   295	0142  EB FB		       jmp   SHORT @RETA
    296
    297				      P_ _NEXT,@NEXT
1   298				       ALIGN_  0
2   299					     IF	($-START+0) AND	1
2   300					     NOP
2   301				       @NOPSCNT	= @NOPSCNT+1
2   302					     ENDIF
1   303	0144			     @NEXT:
1   304	      =00A2		       _NEXT   = ($-START+100H)	SHR 1
    305	0144  59			     POP     W
    306	0145  49			     DEC     W
    307	0146  51			     PUSH    W
    308					     SKIPC_  WL
1   309	0147  B1 00		       mov   WL,0
1   310				       org   $-1
    311
    312				      P_ _IFM,@IFM
1   313				       ALIGN_  0
2   314					     IF	($-START+0) AND	1
2   315					     NOP
2   316				       @NOPSCNT	= @NOPSCNT+1
2   317					     ENDIF
1   318	0148			     @IFM:
1   319	      =00A4		       _IFM   =	($-START+100H) SHR 1
    320	0148  48			     DEC     T
    321	0149  78 13			     JS	     @SKIP
    322
    323				      P_ _JUMP,@JUMP		 ; ( (JUMP
1   324				       ALIGN_  0
2   325					     IF	($-START+0) AND	1
2   326	014B  90			     NOP
2   327	      =0001		       @NOPSCNT	= @NOPSCNT+1
2   328					     ENDIF
1   329	014C			     @JUMP:
1   330	      =00A6		       _JUMP   = ($-START+100H)	SHR 1
    331					     @IP_    IP
1   332	014C  8B 1F		       MOV   IP,[IP]
1   333				       R2P_  IP
2   334	014E  43		       INC   IP
2   335	014F  43		       INC   IP
    336					     N_
1   337	0150  FF E2		       JMP   NP
    338
    339				      P_ _?SKIP,@?SKIP
1   340				       ALIGN_  0
2   341					     IF	($-START+0) AND	1
2   342					     NOP
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 7
C4F.asm



2   343				       @NOPSCNT	= @NOPSCNT+1
2   344					     ENDIF
1   345	0152			     @?SKIP:
1   346	      =00A9		       _?SKIP	= ($-START+100H) SHR 1
    347					     Zero?_  T
1   348	0152  0B C0		       OR    T,T
    349	0154  74 03			     JE	     @1M?
    350					     N_
1   351	0156  FF E2		       JMP   NP
    352
    353				      P_ _IF,@IF	      ;	( IF
1   354				       ALIGN_  0
2   355					     IF	($-START+0) AND	1
2   356					     NOP
2   357				       @NOPSCNT	= @NOPSCNT+1
2   358					     ENDIF
1   359	0158			     @IF:
1   360	      =00AC		       _IF   = ($-START+100H) SHR 1
    361	0158  48			     DEC     T
    362	0159			     @1M?:
    363	0159  40			     INC     T
    364					     DROP_
1   365	015A  AD		       LODSW
    366	015B  74 EF			     JZ	     @JUMP
    367
    368				      P_ _SKIP,@SKIP	      ;	( SKIP
1   369				       ALIGN_  0
2   370					     IF	($-START+0) AND	1
2   371	015D  90			     NOP
2   372	      =0002		       @NOPSCNT	= @NOPSCNT+1
2   373					     ENDIF
1   374	015E			     @SKIP:
1   375	      =00AF		       _SKIP   = ($-START+100H)	SHR 1
    376					     R2P_    IP
1   377	015E  43		       INC   IP
1   378	015F  43		       INC   IP
    379					     N_
1   380	0160  FF E2		       JMP   NP
    381
    382				      P_ _RSKIP,@RSKIP
1   383				       ALIGN_  0
2   384					     IF	($-START+0) AND	1
2   385					     NOP
2   386				       @NOPSCNT	= @NOPSCNT+1
2   387					     ENDIF
1   388	0162			     @RSKIP:
1   389	      =00B1		       _RSKIP	= ($-START+100H) SHR 1
    390	0162  5F			     POP     WA
    391					     R2P_    WA
1   392	0163  47		       INC   WA
1   393	0164  47		       INC   WA
    394					     SKIPA_
1   395	0165  3D		       DB    03DH
    396
    397				      P_ _XR,@XR	      ;	( XR  XCHG
1   398				       ALIGN_  0
2   399					     IF	($-START+0) AND	1
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 8
C4F.asm



2   400					     NOP
2   401				       @NOPSCNT	= @NOPSCNT+1
2   402					     ENDIF
1   403	0166			     @XR:
1   404	      =00B3		       _XR   = ($-START+100H) SHR 1
    405	0166  5F			     POP     WA
    406	0167  97			     XCHG    T,WA
    407					     JMPS_   @_XA
1   408	0168  EB 03		       jmp   SHORT @_XA
    409
    410				      P_ _XA,@XA	      ;	( XA
1   411				       ALIGN_  0
2   412					     IF	($-START+0) AND	1
2   413					     NOP
2   414				       @NOPSCNT	= @NOPSCNT+1
2   415					     ENDIF
1   416	016A			     @XA:
1   417	      =00B5		       _XA   = ($-START+100H) SHR 1
    418	016A  5F			     POP     WA
    419	016B  87 FD			     XCHG    WA,AR
    420	016D			     @_XA:
    421	016D  57			     PUSH    WA
    422					     N_
1   423	016E  FF E2		       JMP   NP
    424
    425	0170			     @_RSTP:
    426	0170  57			     PUSH    WA
    427					     SKIPB_
1   428	0171  3C		       DB    03CH
    429
    430				      P_ _PUSH,@PUSH	      ;	( PUSH
1   431				       ALIGN_  0
2   432					     IF	($-START+0) AND	1
2   433					     NOP
2   434				       @NOPSCNT	= @NOPSCNT+1
2   435					     ENDIF
1   436	0172			     @PUSH:
1   437	      =00B9		       _PUSH   = ($-START+100H)	SHR 1
    438	0172  50			     PUSH    T
    439	0173			     @DROP1:
    440					     DROP_
1   441	0173  AD		       LODSW
    442					     N_
1   443	0174  FF E2		       JMP   NP
    444
    445				      P_ _BE,@BE
1   446				       ALIGN_  0
2   447					     IF	($-START+0) AND	1
2   448					     NOP
2   449				       @NOPSCNT	= @NOPSCNT+1
2   450					     ENDIF
1   451	0176			     @BE:
1   452	      =00BB		       _BE   = ($-START+100H) SHR 1
    453	0176  B4 0E			     MOV     AH,0EH
    454	0178  CD 10			     INT     10H
    455					     JMPS_   @DROP1
1   456	017A  EB F7		       jmp   SHORT @DROP1
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 9
C4F.asm



    457
    458				      P_ _RSTM,@RSTM	     ; ( !R-
1   459				       ALIGN_  0
2   460					     IF	($-START+0) AND	1
2   461					     NOP
2   462				       @NOPSCNT	= @NOPSCNT+1
2   463					     ENDIF
1   464	017C			     @RSTM:
1   465	      =00BE		       _RSTM   = ($-START+100H)	SHR 1
    466	017C  5F			     POP     WA
    467					     R2M_    WA
1   468	017D  4F		       DEC   WA
1   469	017E  4F		       DEC   WA
    470					     SKIPB_
1   471	017F  3C		       DB    03CH
    472
    473				      P_ _RST,@RST	   ; ( !R
1   474				       ALIGN_  0
2   475					     IF	($-START+0) AND	1
2   476					     NOP
2   477				       @NOPSCNT	= @NOPSCNT+1
2   478					     ENDIF
1   479	0180			     @RST:
1   480	      =00C0		       _RST   =	($-START+100H) SHR 1
    481	0180  5F			     POP     WA
    482	0181			     @RST1:
    483	0181  57			     PUSH    WA
    484	0182  AB			     STOSW
    485					     DROP_
1   486	0183  AD		       LODSW
    487					     N_
1   488	0184  FF E2		       JMP   NP
    489
    490				      P_ _RSTP,@RSTP	     ; ( !R+
1   491				       ALIGN_  0
2   492					     IF	($-START+0) AND	1
2   493					     NOP
2   494				       @NOPSCNT	= @NOPSCNT+1
2   495					     ENDIF
1   496	0186			     @RSTP:
1   497	      =00C3		       _RSTP   = ($-START+100H)	SHR 1
    498	0186  5F			     POP     WA
    499	0187  AB			     STOSW
    500	0188  EB E6			     JMP     @_RSTP
    501
    502				      P_ _RSTBP,@RSTBP	       ; ( C!R+
1   503				       ALIGN_  0
2   504					     IF	($-START+0) AND	1
2   505					     NOP
2   506				       @NOPSCNT	= @NOPSCNT+1
2   507					     ENDIF
1   508	018A			     @RSTBP:
1   509	      =00C5		       _RSTBP	= ($-START+100H) SHR 1
    510	018A  5F			     POP     WA
    511	018B  AA			     STOSB
    512	018C  EB E2			     JMP     @_RSTP
    513
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 10
C4F.asm



    514				      P_ _RLDP,@RLDP	      ;	( @R+
1   515				       ALIGN_  0
2   516					     IF	($-START+0) AND	1
2   517					     NOP
2   518				       @NOPSCNT	= @NOPSCNT+1
2   519					     ENDIF
1   520	018E			     @RLDP:
1   521	      =00C7		       _RLDP   = ($-START+100H)	SHR 1
    522	018E  5F			     POP     WA
    523	018F  8B 0D			     MOV     W,[WA]
    524					     R2P_    WA
1   525	0191  47		       INC   WA
1   526	0192  47		       INC   WA
    527					     JMPS_   @_J
1   528	0193  EB 0C		       jmp   SHORT @_J
    529
    530				      P_ _RLDBP,@RLDBP		; ( C@R+
1   531				       ALIGN_  0
2   532					     IF	($-START+0) AND	1
2   533	0195  90			     NOP
2   534	      =0003		       @NOPSCNT	= @NOPSCNT+1
2   535					     ENDIF
1   536	0196			     @RLDBP:
1   537	      =00CB		       _RLDBP	= ($-START+100H) SHR 1
    538	0196  5F			     POP     WA
    539	0197  8A 0D			     MOV     WL,[WA]
    540					     CLR_    WH
1   541	0199  32 ED		       XOR    WH,WH
    542	019B  47			     INC     WA
    543					     JMPS_   @_J
1   544	019C  EB 03		       jmp   SHORT @_J
    545
    546				      P_ _J,@J		      ;	( J
1   547				       ALIGN_  0
2   548					     IF	($-START+0) AND	1
2   549					     NOP
2   550				       @NOPSCNT	= @NOPSCNT+1
2   551					     ENDIF
1   552	019E			     @J:
1   553	      =00CF		       _J   = ($-START+100H) SHR 1
    554	019E  5F			     POP     WA
    555	019F  59			     POP     W
    556	01A0  51			     PUSH    W
    557	01A1			     @_J:
    558	01A1  57			     PUSH    WA
    559	01A2			     @WPUSH:
    560					     DUP_    T
1   561				       R2M_  DSP
2   562	01A2  4E		       DEC   DSP
2   563	01A3  4E		       DEC   DSP
1   564	01A4  89 04		       MOV   [DSP],T
    565	01A6  91			     XCHG    W,T
    566					     N_
1   567	01A7  FF E2		       JMP   NP
    568
    569				      P_ _POP,@POP	      ;	( POP
1   570				       ALIGN_  0
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 11
C4F.asm



2   571					     IF	($-START+0) AND	1
2   572	01A9  90			     NOP
2   573	      =0004		       @NOPSCNT	= @NOPSCNT+1
2   574					     ENDIF
1   575	01AA			     @POP:
1   576	      =00D5		       _POP   =	($-START+100H) SHR 1
    577	01AA  59			     POP     W
    578					     SKIPA_
1   579	01AB  3D		       DB    03DH
    580
    581				      P_ _DUP,@DUP	      ;	( DUP
1   582				       ALIGN_  0
2   583					     IF	($-START+0) AND	1
2   584					     NOP
2   585				       @NOPSCNT	= @NOPSCNT+1
2   586					     ENDIF
1   587	01AC			     @DUP:
1   588	      =00D6		       _DUP   =	($-START+100H) SHR 1
    589	01AC  8B C8			     MOV     W,T
    590					     JMPS_   @WPUSH
1   591	01AE  EB F2		       jmp   SHORT @WPUSH
    592
    593				      P_ _ALIGN,@ALIGN
1   594				       ALIGN_  0
2   595					     IF	($-START+0) AND	1
2   596					     NOP
2   597				       @NOPSCNT	= @NOPSCNT+1
2   598					     ENDIF
1   599	01B0			     @ALIGN:
1   600	      =00D8		       _ALIGN	= ($-START+100H) SHR 1
    601	01B0  48			     DEC     T
    602	01B1  0C 01			     OR	     TL,1
    603
    604				      P_ _1P,@1P
1   605				       ALIGN_  0
2   606					     IF	($-START+0) AND	1
2   607	01B3  90			     NOP
2   608	      =0005		       @NOPSCNT	= @NOPSCNT+1
2   609					     ENDIF
1   610	01B4			     @1P:
1   611	      =00DA		       _1P   = ($-START+100H) SHR 1
    612	01B4  40			     INC     T
    613					     N_
1   614	01B5  FF E2		       JMP   NP
    615
    616				      P_ _PLAVG,@PLAVG	      ;	( +2/
1   617				       ALIGN_  0
2   618					     IF	($-START+0) AND	1
2   619	01B7  90			     NOP
2   620	      =0006		       @NOPSCNT	= @NOPSCNT+1
2   621					     ENDIF
1   622	01B8			     @PLAVG:
1   623	      =00DC		       _PLAVG	= ($-START+100H) SHR 1
    624	01B8  03 04			     ADD     T,[DSP]
    625	01BA  89 04			     MOV     [DSP],T
    626
    627				      P_ _2DIV,@2DIV	      ;	( 2/
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 12
C4F.asm



1   628				       ALIGN_  0
2   629					     IF	($-START+0) AND	1
2   630					     NOP
2   631				       @NOPSCNT	= @NOPSCNT+1
2   632					     ENDIF
1   633	01BC			     @2DIV:
1   634	      =00DE		       _2DIV   = ($-START+100H)	SHR 1
    635	01BC  D1 D8			     RCR     T,1
    636					     N_
1   637	01BE  FF E2		       JMP   NP
    638
    639				      P_ _SDIV,@SDIV	      ;	( -/
1   640				       ALIGN_  0
2   641					     IF	($-START+0) AND	1
2   642					     NOP
2   643				       @NOPSCNT	= @NOPSCNT+1
2   644					     ENDIF
1   645	01C0			     @SDIV:
1   646	      =00E0		       _SDIV   = ($-START+100H)	SHR 1
    647	01C0  D1 24			     SHL     PW	[DSP],1
    648	01C2  D1 D0			     RCL     T,1
    649	01C4  3B C5			     CMP     T,AR
    650	01C6  72 04			     JB	     @_NO_DIV
    651	01C8  2B C5			     SUB     T,AR
    652
    653				      P_ _U1P,@U1P
1   654				       ALIGN_  0
2   655					     IF	($-START+0) AND	1
2   656					     NOP
2   657				       @NOPSCNT	= @NOPSCNT+1
2   658					     ENDIF
1   659	01CA			     @U1P:
1   660	      =00E5		       _U1P   =	($-START+100H) SHR 1
    661	01CA  FF 04			     INC     PW	[DSP]
    662	01CC			     @_NO_DIV:
    663					     N_
1   664	01CC  FF E2		       JMP   NP
    665
    666				      P_ _PMUL,@PMUL	      ;	( +*
1   667				       ALIGN_  0
2   668					     IF	($-START+0) AND	1
2   669					     NOP
2   670				       @NOPSCNT	= @NOPSCNT+1
2   671					     ENDIF
1   672	01CE			     @PMUL:
1   673	      =00E7		       _PMUL   = ($-START+100H)	SHR 1
    674	01CE  8B 0C			     MOV     W,[DSP]
    675	01D0  D1 E9			     SHR     W,1
    676	01D2  73 02			     JNC     @D2DIV
    677	01D4  03 C5			     ADD     T,AR
    678
    679				      P_ _D2DIV,@D2DIV
1   680				       ALIGN_  0
2   681					     IF	($-START+0) AND	1
2   682					     NOP
2   683				       @NOPSCNT	= @NOPSCNT+1
2   684					     ENDIF
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 13
C4F.asm



1   685	01D6			     @D2DIV:
1   686	      =00EB		       _D2DIV	= ($-START+100H) SHR 1
    687	01D6  D1 D8			     RCR     T,1
    688
    689				      P_ _U2DIV,@U2DIV
1   690				       ALIGN_  0
2   691					     IF	($-START+0) AND	1
2   692					     NOP
2   693				       @NOPSCNT	= @NOPSCNT+1
2   694					     ENDIF
1   695	01D8			     @U2DIV:
1   696	      =00EC		       _U2DIV	= ($-START+100H) SHR 1
    697	01D8  D1 1C			     RCR     PW	[DSP],1
    698					     N_
1   699	01DA  FF E2		       JMP   NP
    700
    701				      P_ _16MUL,@16MUL
1   702				       ALIGN_  0
2   703					     IF	($-START+0) AND	1
2   704					     NOP
2   705				       @NOPSCNT	= @NOPSCNT+1
2   706					     ENDIF
1   707	01DC			     @16MUL:
1   708	      =00EE		       _16MUL	= ($-START+100H) SHR 1
    709	01DC  D1 E0			     SHL     T,1
    710
    711				      P_ _8MUL,@8MUL
1   712				       ALIGN_  0
2   713					     IF	($-START+0) AND	1
2   714					     NOP
2   715				       @NOPSCNT	= @NOPSCNT+1
2   716					     ENDIF
1   717	01DE			     @8MUL:
1   718	      =00EF		       _8MUL   = ($-START+100H)	SHR 1
    719	01DE  D1 E0			     SHL     T,1
    720
    721				      P_ _4MUL,@4MUL
1   722				       ALIGN_  0
2   723					     IF	($-START+0) AND	1
2   724					     NOP
2   725				       @NOPSCNT	= @NOPSCNT+1
2   726					     ENDIF
1   727	01E0			     @4MUL:
1   728	      =00F0		       _4MUL   = ($-START+100H)	SHR 1
    729	01E0  D1 E0			     SHL     T,1
    730
    731				      P_ _2MUL,@2MUL
1   732				       ALIGN_  0
2   733					     IF	($-START+0) AND	1
2   734					     NOP
2   735				       @NOPSCNT	= @NOPSCNT+1
2   736					     ENDIF
1   737	01E2			     @2MUL:
1   738	      =00F1		       _2MUL   = ($-START+100H)	SHR 1
    739	01E2  D1 E0			     SHL     T,1
    740					     N_
1   741	01E4  FF E2		       JMP   NP
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 14
C4F.asm



    742
    743				      P_ _nAND,@nAND	      ;	( AND
1   744				       ALIGN_  0
2   745					     IF	($-START+0) AND	1
2   746					     NOP
2   747				       @NOPSCNT	= @NOPSCNT+1
2   748					     ENDIF
1   749	01E6			     @nAND:
1   750	      =00F3		       _nAND   = ($-START+100H)	SHR 1
    751					     POPR_   W
1   752	01E6  91		       xchg  t,W
1   753				       drop_
2   754	01E7  AD		       LODSW
    755	01E8  23 C1			     AND     T,W
    756
    757				      P_ _NOT,@NOT
1   758				       ALIGN_  0
2   759					     IF	($-START+0) AND	1
2   760					     NOP
2   761				       @NOPSCNT	= @NOPSCNT+1
2   762					     ENDIF
1   763	01EA			     @NOT:
1   764	      =00F5		       _NOT   =	($-START+100H) SHR 1
    765	01EA  40			     INC     T
    766
    767				      P_ _NEG,@NEG
1   768				       ALIGN_  0
2   769					     IF	($-START+0) AND	1
2   770	01EB  90			     NOP
2   771	      =0007		       @NOPSCNT	= @NOPSCNT+1
2   772					     ENDIF
1   773	01EC			     @NEG:
1   774	      =00F6		       _NEG   =	($-START+100H) SHR 1
    775	01EC  F7 D8			     NEG     T
    776					     N_
1   777	01EE  FF E2		       JMP   NP
    778
    779				      P_ _XOR,@XOR	      ;	( XOR
1   780				       ALIGN_  0
2   781					     IF	($-START+0) AND	1
2   782					     NOP
2   783				       @NOPSCNT	= @NOPSCNT+1
2   784					     ENDIF
1   785	01F0			     @XOR:
1   786	      =00F8		       _XOR   =	($-START+100H) SHR 1
    787					     POPR_   W
1   788	01F0  91		       xchg  t,W
1   789				       drop_
2   790	01F1  AD		       LODSW
    791	01F2  33 C1			     XOR     T,W
    792					     N_
1   793	01F4  FF E2		       JMP   NP
    794
    795				      P_ _ZEQ,@ZEQ
1   796				       ALIGN_  0
2   797					     IF	($-START+0) AND	1
2   798					     NOP
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 15
C4F.asm



2   799				       @NOPSCNT	= @NOPSCNT+1
2   800					     ENDIF
1   801	01F6			     @ZEQ:
1   802	      =00FB		       _ZEQ   =	($-START+100H) SHR 1
    803	01F6  2D 0001			     SUB     T,1
    804					     SKIPR_  W
1   805	01F9  B9 0000		       mov   W,0
1   806				       org   $-2
    807				      P_ _ZLESS,@LESS
1   808				       ALIGN_  0
2   809					     IF	($-START+0) AND	1
2   810					     NOP
2   811				       @NOPSCNT	= @NOPSCNT+1
2   812					     ENDIF
1   813	01FA			     @LESS:
1   814	      =00FD		       _ZLESS	= ($-START+100H) SHR 1
    815	01FA  D1 E0			     SHL     T,1
    816					     CF_TO_  T
1   817	01FC  1B C0		       sbb   T,T
    818					     N_
1   819	01FE  FF E2		       JMP   NP
    820
    821				      L_ _CTX,@CTX	; ( c -- ) \ Send character c to output	device.
1   822				       ALIGN_  0
2   823					     IF	($-START+0) AND	1
2   824					     NOP
2   825				       @NOPSCNT	= @NOPSCNT+1
2   826					     ENDIF
1   827	0200			     @CTX:
1   828	      =8100		       _CTX   =	(($-START+100H)	SHR 1)+8000H
    829	0200  0097		       DW  _IO	    ; char in DL
    830	0202  92		       XCHG  AX,DX
    831	0203  80 FA FF		       CMP   DL,0FFH ; 0FFH is interpreted as input
    832	0206  75 02		       JNZ   @TX1    ; do NOT allow input
    833	0208  B2 20		       MOV   DL,32   ; change to blank
    834	020A			     @TX1:
    835	020A  B4 06		       MOV   AH,6    ; MS - DOS	Direct Console I/O
    836	020C  CD 21		       INT   021H    ; display character
    837	020E  C3		       RET
    838
    839				      L_ _?CRX,@?CRX	  ; (  -- c T |	F )
1   840				       ALIGN_  0
2   841					     IF	($-START+0) AND	1
2   842	020F  90			     NOP
2   843	      =0008		       @NOPSCNT	= @NOPSCNT+1
2   844					     ENDIF
1   845	0210			     @?CRX:
1   846	      =8108		       _?CRX   = (($-START+100H) SHR 1)+8000H
    847	0210  0093		       DW _IODD
    848	0212  BA FFFF		       MOV   DX,0FFFFH ; input command & setup for TRUE	flag
    849	0215  89 14		       MOV   [DSP],DX
    850	0217  E8 FFF0		       CALL  @TX1      ; MS - DOS Direct Console I/O
    851	021A  75 05		       JNZ   QRX0    ; ?key ready
    852	021C  4A		       DEC   DX
    853				       DROP_
1   854	021D  AD		       LODSW
    855	021E  89 14		       MOV   [DSP],DX
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 16
C4F.asm



    856	0220  C3		       RET
    857	0221			     QRX0:
    858	0221  0A C0		       OR    AL,AL   ; AL=0 if extended	char
    859	0223  75 03		       JNZ   QRX1    ; ?extended character code
    860	0225  CD 21		       INT   021H    ;
    861	0227  F9		       STC
    862	0228			     QRX1:
    863	0228  B4 00		       MOV   AH,0
    864	022A  73 02		       JNC   QRX2
    865	022C  86 E0		       XCHG  AH,AL   ; extended	code in	msb
    866	022E			     QRX2:
    867	022E  89 44 02		       MOV   [DSP+2],AX
    868	0231  C3		       RET
    869
    870	0232			     _END:
    871
    872	0232			     MyCseg  ends
    873					     end  Start
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 17
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "12/17/18"
??FILENAME		Text   "C4F	"
??TIME			Text   "08:31:00"
??VERSION		Number 0314
@16MUL			Near   MYCSEG:01DC		   #707
@1M?			Near   MYCSEG:0159		   349	#362
@1P			Near   MYCSEG:01B4		   #610
@2DIV			Near   MYCSEG:01BC		   #633
@2MUL			Near   MYCSEG:01E2		   #737
@4MUL			Near   MYCSEG:01E0		   #727
@8MUL			Near   MYCSEG:01DE		   #717
@?CRX			Near   MYCSEG:0210		   #845
@?SKIP			Near   MYCSEG:0152		   #345
@ABORT			Near   MYCSEG:0100		   #157
@ALIGN			Near   MYCSEG:01B0		   #599
@BE			Near   MYCSEG:0176		   #451
@CPU			Text   0101H
@CTX			Near   MYCSEG:0200		   #827
@CURSEG			Text   MYCSEG			   #135
@D2DIV			Near   MYCSEG:01D6		   676	#685
@DROP1			Near   MYCSEG:0173		   #439	 456
@DROPX			Near   MYCSEG:013C		   #265
@DUP			Near   MYCSEG:01AC		   #587
@EX			Near   MYCSEG:0114		   #187
@FILENAME		Text   C4F
@IF			Near   MYCSEG:0158		   #359
@IFM			Near   MYCSEG:0148		   #318
@IO			Near   MYCSEG:012E		   #243
@IOD			Near   MYCSEG:012A		   #229
@IODD			Near   MYCSEG:0126		   #215
@J			Near   MYCSEG:019E		   #552
@JUMP			Near   MYCSEG:014C		   #329	 366
@LESS			Near   MYCSEG:01FA		   #813
@NAND			Near   MYCSEG:01E6		   #749
@NEG			Near   MYCSEG:01EC		   #773
@NEST			Near   MYCSEG:0115		   178	#191
@NEXT			Near   MYCSEG:0144		   #303
@NEXTS			Near   MYCSEG:011A		   162	#198
@NOP			Near   MYCSEG:010A		   #170	 195
@NOPSCNT		Number 0008			   #102	 327  #327  372	 #372  534  #534  573  #573  608  #608	620  #620 +
							   771	#771  843  #843
@NOT			Near   MYCSEG:01EA		   #763
@PLAVG			Near   MYCSEG:01B8		   #622
@PMUL			Near   MYCSEG:01CE		   #672
@POP			Near   MYCSEG:01AA		   #575
@PUSH			Near   MYCSEG:0172		   #436
@RDROPX			Near   MYCSEG:013E		   #278
@RET			Near   MYCSEG:0142		   202	#292
@RETA			Near   MYCSEG:013F		   #282	 295
@RLDBP			Near   MYCSEG:0196		   #536
@RLDP			Near   MYCSEG:018E		   #520
@RSKIP			Near   MYCSEG:0162		   #388
@RST			Near   MYCSEG:0180		   #479
@RST1			Near   MYCSEG:0181		   #482
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 18
Symbol Table



@RSTBP			Near   MYCSEG:018A		   #508
@RSTM			Near   MYCSEG:017C		   #464
@RSTP			Near   MYCSEG:0186		   #496
@R_TOP			Number -0400			   #144	 145  200
@SDIV			Near   MYCSEG:01C0		   #645
@SKIP			Near   MYCSEG:015E		   321	#374
@S_TOP			Number -0800			   #145	 146  201
@TBUF			Number -0100			   #141	 142
@TIB			Number -0200			   #142	 144
@TX1			Near   MYCSEG:020A		   832	#834  850
@U1P			Near   MYCSEG:01CA		   #659
@U2DIV			Near   MYCSEG:01D8		   #695
@VOCTOP			Number -1000			   #146
@WORDSIZE		Text   2			   #135
@WPUSH			Near   MYCSEG:01A2		   #559	 591
@XA			Near   MYCSEG:016A		   #416
@XOR			Near   MYCSEG:01F0		   #785
@XR			Near   MYCSEG:0166		   #403
@ZEQ			Near   MYCSEG:01F6		   #801
@_J			Near   MYCSEG:01A1		   528	544  #557
@_NO_DIV		Near   MYCSEG:01CC		   650	#662
@_RSTP			Near   MYCSEG:0170		   #425	 500  512
@_XA			Near   MYCSEG:016D		   408	#420
AR			Number BP			   #125	 245  250  419	649  651  677
AT_			Number -0002			   #14
DSP			Number SI			   #123	 201  219  220	221  233  234  235  246	 247  248  562	563  564  +
							   624	625  647  661  674  697	 849  855  867
IP			Number BX			   #121	 173  175  176	192  193  249  282  332	 332  334  335	377  378
NP			Number DX			   #124	 199  245  250	284  337  351  380  423	 443  488  567	614  637  +
							   664	699  741  777  793  819
PB			Text   byte  ptr		   #11
PD			Text   dword ptr		   #9
PW			Text   word  ptr		   #10	647  661  697
QRX0			Near   MYCSEG:0221		   851	#857
QRX1			Near   MYCSEG:0228		   859	#862
QRX2			Near   MYCSEG:022E		   864	#866
RSP			Number SP			   #122	 200
START			Byte   MYCSEG:0100		   #148	 153  158  166	171  183  188  211  216	 225  230  239	244  261  +
							   266	274  279  288  293  299	 304  314  319	325  330  341  346  355	  +
							   360	370  375  384  389  399	 404  412  417	432  437  447  452  460	  +
							   465	475  480  492  497  504	 509  516  521	532  537  548  553  571	  +
							   576	583  588  595  600  606	 611  618  623	629  634  641  646  655	  +
							   660	668  673  681  686  691	 696  703  708	713  718  723  728  733	  +
							   738	745  750  759  764  769	 774  781  786	797  802  809  814  823	  +
							   828	841  846  873
T			Number AX			   #127	 221  235  320	348  348  361  363  406	 438  564  565	589  601  +
							   612	624  625  635  648  649	 651  677  687	709  719  729  739  752	  +
							   755	765  775  788  791  803	 815  817  817
TH			Number AH			   #129
TL			Number AL			   #128	 602
TO_			Number -0001			   #13
W			Number CX			   #131	 280  305  306	307  523  555  556  565	 577  589  674	675  752  +
							   755	788  791  805
WA			Number DI			   #130	 173  177  179	189  193  390  392  393	 405  406  418	419  421  +
							   426	466  468  469  481  483	 498  510  522	523  525  526  538  539	  +
							   542	554  558
WH			Number CH			   #133	 541  541
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 19
Symbol Table



WL			Number CL			   #132	 309  539
_16MUL			Number 00EE			   #708
_1P			Number 00DA			   #611
_2DIV			Number 00DE			   #634
_2MUL			Number 00F1			   #738
_4MUL			Number 00F0			   #728
_8MUL			Number 00EF			   #718
_?CRX			Number 8108			   #846
_?SKIP			Number 00A9			   #346
_@INIT			Word   MYCSEG:0124		   #204
_ABORT			Number 0080			   #158
_ALIGN			Number 00D8			   #600
_BE			Number 00BB			   #452
_CTX			Number 8100			   #828
_D2DIV			Number 00EB			   #686
_DROPX			Number 009E			   #266
_DUP			Number 00D6			   #588
_END			Near   MYCSEG:0232		   #870
_EX			Number 008A			   #188
_IF			Number 00AC			   #360
_IFM			Number 00A4			   #319
_IO			Number 0097			   #244	 829
_IOD			Number 0095			   #230
_IODD			Number 0093			   #216	 847
_J			Number 00CF			   #553
_JUMP			Number 00A6			   #330
_NAND			Number 00F3			   #750
_NEG			Number 00F6			   #774
_NEXT			Number 00A2			   #304
_NOP			Number 0085			   #171
_NOT			Number 00F5			   #764
_PLAVG			Number 00DC			   #623
_PMUL			Number 00E7			   #673
_POP			Number 00D5			   #576
_PUSH			Number 00B9			   #437
_RDROPX			Number 009F			   #279
_RET			Number 00A1			   #293
_RLDBP			Number 00CB			   #537
_RLDP			Number 00C7			   #521
_RSKIP			Number 00B1			   #389
_RST			Number 00C0			   #480
_RSTBP			Number 00C5			   #509
_RSTM			Number 00BE			   #465
_RSTP			Number 00C3			   #497
_SDIV			Number 00E0			   #646
_SKIP			Number 00AF			   #375
_START			Near   MYCSEG:0100		   #149
_U1P			Number 00E5			   #660
_U2DIV			Number 00EC			   #696
_XA			Number 00B5			   #417
_XOR			Number 00F8			   #786
_XR			Number 00B3			   #404
_ZEQ			Number 00FB			   #802
_ZLESS			Number 00FD			   #814
Turbo Assembler	 Version 3.2	    12/17/18 08:31:00	    Page 20
Symbol Table




Macro Name						   Cref	(defined at #)

@IP_							   #61	172  331
ALIGN_							   #95	152  165  182  210  224	 238  260  273	287  298  313  324  340	  +
							   354	369  383  398  411  431	 446  459  474	491  503  515  531  547	  +
							   570	582  594  605  617  628	 640  654  667	680  690  702  712  722	  +
							   732	744  758  768  780  796	 808  822  840
CF_TO_							   #66	816
CLR_							   #91	540
DROP_							   #70	267  364  440  485  753	 789  853
DUP_							   #74	217  231  560
JMPS_							   #16	194  294  407  455  527	 543  590
L_							   #104	 821  839
N_							   #116	 283  336  350	379  422  442  487  566	 613  636  663	698  740  +
							   776	792  818
POPR_							   #46	751  787
PUSHR_							   #42
P_							   #110	 151  164  181	209  223  237  259  272	 286  297  312	323  339  +
							   353	368  382  397  410  430	 445  458  473	490  502  514  530  546	  +
							   569	581  593  604  616  627	 639  653  666	679  689  701  711  721	  +
							   731	743  757  767  779  795	 807
R2M_							   #56	218  232  467  561
R2P_							   #51	174  333  376  391  524
RCHG_							   #83
SKIPA_							   #20	394  578
SKIPB_							   #24	269  427  470
SKIPC_							   #33	308
SKIPR_							   #28	804
SWAP_							   #79
X_							   #38
ZERO?_							   #87	347

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

MYCSEG			16  0232 Para	none		   #135	 137  137  137	137
