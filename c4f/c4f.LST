Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 1
C4F.asm



      1				     INCLUDE C4F.IMC
1     2				     ; COMMANDS	     OF	INTERPRETER  (MINIMAL SET)
1     3				     ; (JUMP (;	(IF (IF-   CONTROLS
1     4				     ; push pop	J DUP	   STACK
1     5				     ; !R+ @R+ xR XA	   TRANSFER
1     6				     ; NAND +2/	+* -/	   MATH	& LOGIC
1     7
1     8				     locals  @@
1     9
1    10	      =	dword ptr	     pd	 equ dword ptr
1    11	      =	word  ptr	     pw	 equ word  ptr
1    12	      =	byte  ptr	     pb	 equ byte  ptr
1    13
1    14	      =-0002		     TO_   = -2
1    15	      =-0004		     AT_   = -4
1    16	      =0002		     VAL_  = 2
1    17
1    18				     JMPS   MACRO LBL
1    19				       jmp   SHORT LBL
1    20				       ENDM
1    21
1    22				     SKIPA  MACRO
1    23				       DB    03DH
1    24				       ENDM
1    25
1    26				     SKIPB  MACRO
1    27				       DB    03CH
1    28				       ENDM
1    29
1    30				     SKIPr  MACRO reg
1    31				     MADR = $
1    32				       mov   reg,0
1    33				       IF $-MADR-2
1    34				       org   $-1
1    35				       ENDIF
1    36				       org   $-1
1    37				       ENDM
1    38
1    39				     X	     MACRO
1    40				       xchg  Rsp,DSP
1    41				       ENDM
1    42
1    43				     SWAP   macro
1    44				       XCHG  [DSP],TOP
1    45				       endm
1    46
1    47				     Z?	 MACRO	 REG
1    48				       OR    REG,REG
1    49				       ENDM
1    50
1    51				     CLR    MACRO   REG
1    52				       XOR    REG,REG
1    53				       ENDM
1    54
1    55				     R2P_    macro   REG
1    56				       INC   REG
1    57				       INC   REG
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 2
C4F.asm



1    58				       endm
1    59
1    60				     R2M_    macro   REG
1    61				       DEC   REG
1    62				       DEC   REG
1    63				       endm
1    64
1    65				     NIP_   macro
1    66				       R2P_ DSP	; LEA  DSP,[DSP+2]
1    67				       endm
1    68
1    69				     D_TO   macro   REG
1    70				       X
1    71				       POP   REG
1    72				       X
1    73				     endm
1    74
1    75				     TO_D    macro  REG
1    76				       X
1    77				       PUSH  REG
1    78				       X
1    79				     endm
1    80
1    81				     R_TO   macro   REG
1    82				       POP   REG
1    83				     endm
1    84
1    85				     TO_R    macro  REG
1    86				       PUSH  REG
1    87				     endm
1    88
1    89				     ALiGN_  MACRO  FLAG
1    90				       IF ($-START+FLAG) AND 1
1    91				       NOP
1    92				       @NOPSCNT	= @NOPSCNT+1
1    93				       ENDIF
1    94				       ENDM
1    95
1    96	      =0000		     @NOPSCNT =	0
1    97
1    98				     P_	 MACRO NAM
1    99				       ALIGN_ 0
1   100				       NOP
1   101				     NAM:
1   102				       org   $-1
1   103				       ENDM
1   104
1   105				     PP_  MACRO	NAM,LBL
1   106				       P_ NAM
1   107				     LBL:
1   108				       ENDM
1   109
1   110				     L_	 MACRO NAM
1   111				       ALIGN_  0
1   112				     NAM:
1   113				       ENDM
1   114
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 3
C4F.asm



1   115				     LL_  MACRO	NAM,ADR
1   116				       ALIGN_  0
1   117				     NAM:
1   118				       DW ADR
1   119				       ENDM
1   120
1   121				     N_	 MACRO
1   122				       JMP SHORT   @NOP
1   123				       ENDM
1   124
1   125				     BUF_ MACRO	ADR,LEN
1   126				       MADR = MADR - (LEN)
1   127				       ADR  = MADR
1   128				     ENDM
1   129
1   130				     VAR_    macro   LBL,DAT
1   131				     LBL  DW __VAR,DAT
1   132				       ENDM
1   133
1   134				     value_  macro   lbl,dat
1   135				       DW     __SETVAR
1   136				       CONST_ lbl,dat
1   137				       endm
1   138
1   139				     QUAN_  macro   lbl,dat
1   140				       DW     __VAR3,__SETVAR
1   141				       CONST_ lbl,dat
1   142				       endm
1   143
1   144				     CONST_  macro   lbl,dat
1   145				     LBL  DW __cons,dat
1   146				       endm
1   147
1   148				     DEFER_  macro   lbl,dat
1   149				     LBL  DW __defer,dat
1   150				       endm
1   151
1   152				     vector_ macro   lbl,dat
1   153				       DW     __SETVAR
1   154				       DEFER_  lbl,dat
1   155				       endm
1   156
1   157				     point_  macro   lbl,dat
1   158				       DW __setpnt
1   159				       DEFER_  lbl,dat
1   160				       endm
1   161
1   162				     entry_  macro ADR,nam
1   163				       DW    ADR,0
1   164				       nam_  nam
1   165				       endm
1   166
1   167				     nam_    macro   msg
1   168				       local endstr
1   169				       db    endstr-$-1
1   170				       db    msg
1   171				     endstr  label   byte
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 4
C4F.asm



1   172					     endm
1   173
1   174				     ; REGISTERS     for interpretter
1   175	      =BX		     TOP   = BX	 ; DATA	STACK TOP REGISTER
1   176	      =BL		     TOPL  = BL	 ; DATA	STACK TOP REGISTER
1   177	      =BH		     TOPH  = BH	 ; DATA	STACK TOP REGISTER
1   178	      =SI		     IP	   = SI	 ; INSTRUCTION POINTER
1   179	      =SP		     RSP   = SP	 ; RETURN STACK	POINTER
1   180	      =BP		     DSP   = BP	 ; DATA	STACK POINTER
1   181	      =DX		     AR	   = DX	 ; ARITHMETIC (ALTERNATIVE) REGISTER
1   182	      =[BP]		     NXT   = [DSP]  ; TO NEXT POINTER
1   183
1   184	      =DI		     WA	   = DI	 ; WORK	ADDRESS	REGISTER
1   185				     ;NP    = CX  ; WORK REGISTER
1   186	      =AX		     W	   = AX	 ; WORK	REGISTER
1   187	      =AL		     WL	   = AL	 ; WORK	REGISTER
1   188	      =AH		     WH	   = AH	 ; WORK	REGISTER
1   189
    190
    191	0000			     MyCseg  segment para  use16
    192
    193					     assume cs:	MyCseg,	 ds: MyCseg, ss: MyCseg, es: MyCseg
    194
    195					     org 100h
    196
    197	      =FFF0		     MADR = 65535-15 ;
    198
    199	0100			     Start   Label byte
    200
    201				     BUF_ @TIB,114	  ;  130
1   202	      =FF7E		       MADR = MADR - (114)
1   203	      =FF7E		       @TIB  = MADR
    204				     BUF_ _@FIB,130	   ; 130
1   205	      =FEFC		       MADR = MADR - (130)
1   206	      =FEFC		       _@FIB  =	MADR
    207				     BUF_ @TBUF,258	  ;  256
1   208	      =FDFA		       MADR = MADR - (258)
1   209	      =FDFA		       @TBUF  =	MADR
    210				     BUF_ _@R_TOP,10	  ;  512 B FSTACK
1   211	      =FDF0		       MADR = MADR - (10)
1   212	      =FDF0		       _@R_TOP	= MADR
    213				     BUF_ _@R_BTM,512	  ;  512 B FSTACK
1   214	      =FBF0		       MADR = MADR - (512)
1   215	      =FBF0		       _@R_BTM	= MADR
    216				     BUF_ _@S_TOP,16	  ;  512 B DSTACK
1   217	      =FBE0		       MADR = MADR - (16)
1   218	      =FBE0		       _@S_TOP	= MADR
    219				     BUF_ _@S_BTM,512	  ;  512 B DSTACK
1   220	      =F9E0		       MADR = MADR - (512)
1   221	      =F9E0		       _@S_BTM	= MADR
    222				     BUF_ _@MACTOP,16	  ; 4096 B = 4 BUFFERS * 1024 B
1   223	      =F9D0		       MADR = MADR - (16)
1   224	      =F9D0		       _@MACTOP	 = MADR
    225				     BUF_ _@MACADR,2512	  ; 4096 B = 4 BUFFERS * 1024 B
1   226	      =F000		       MADR = MADR - (2512)
1   227	      =F000		       _@MACADR	 = MADR
    228				     BUF_ @VOCTOP,4096	  ; 4096 B = 4 BUFFERS * 1024 B
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 5
C4F.asm



1   229	      =E000		       MADR = MADR - (4096)
1   230	      =E000		       @VOCTOP	= MADR
    231
    232					     org 100h
    233
    234	0100  BB 1000		       mov   bx,1000h	  ; only 64k allocate
    235	0103  B4 4A		       mov   ah,4ah
    236	0105  CD 21		       int   21h
    237	0107  B8 0003		       MOV   AX,3
    238	010A  CD 10		       INT   10H
    239				     P_	_ABORT
1   240				       ALIGN_ 0
2   241				       IF ($-START+0) AND 1
2   242				       NOP
2   243				       @NOPSCNT	= @NOPSCNT+1
2   244				       ENDIF
1   245	010C  90		       NOP
1   246	010D			     _ABORT:
1   247				       org   $-1
    248	010C  BD FBE0		       MOV   DSP,_@S_TOP
    249	010F  E8 03AA		       CALL    @DBG_OFF
    250				     ;	CALL	@DBG_ON
    251				     P_	_QUIT
1   252				       ALIGN_ 0
2   253				       IF ($-START+0) AND 1
2   254				       NOP
2   255				       @NOPSCNT	= @NOPSCNT+1
2   256				       ENDIF
1   257	0112  90		       NOP
1   258	0113			     _QUIT:
1   259				       org   $-1
    260	0112  BC FDF0		       MOV     RSP,_@R_TOP
    261	0115  E8 01CE		       CALL  @RET
    262	0118  018Er		       DW    _INIT
    263	011A  013Ar 0136r	     @MAINLP DW	_TIB,_TBL
    264	011E  03D5r 01BCr	     _@_ACCEPT	DW _NOP,_EVAL
    265	0122  03D5r 03FDr 011Ar	     _@_OK  DW _NOP,_JUMP,@MAINLP
    266
    267				     ;-------------- VARIABLES ----------------
    268
    269				     L_	_OPER
1   270				       ALIGN_  0
2   271				       IF ($-START+0) AND 1
2   272				       NOP
2   273				       @NOPSCNT	= @NOPSCNT+1
2   274				       ENDIF
1   275	0128			     _OPER:
    276	0128  02CDr			DW _WARY
    277	012A  0000		     _@NUMBER  DW 0
    278	012C  0418r			 DW _@EXEC
    279	012E  0000		     _@COMPNUM DW 0
    280	0130  0278r 0000 0000		DW _@COMMA,0,0	 ;  FOR	COMMENT
    281
    282				       CONST_  _TBL,80H
1   283	0136  038Fr 0080	     _TBL  DW __cons,80H
    284				       CONST_  _TIB,@TIB
1   285	013A  038Fr FF7E	     _TIB  DW __cons,@TIB
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 6
C4F.asm



    286				       CONST_  _TBUF,@TBUF
1   287	013E  038Fr FDFA	     _TBUF  DW __cons,@TBUF
    288				       CONST_  _FIRST,@VOCTOP
1   289	0142  038Fr E000	     _FIRST  DW	__cons,@VOCTOP
    290				       CONST_  _BL,32
1   291	0146  038Fr 0020	     _BL  DW __cons,32
    292				       CONST_  _0,0
1   293	014A  038Fr 0000	     _0	 DW __cons,0
    294
    295				       VALUE_	_ETIB,0
1   296	014E  034Dr		       DW     __SETVAR
1   297				       CONST_ _ETIB,0
2   298	0150  038Fr 0000	     _ETIB  DW __cons,0
    299				       L_ _LTIBX		  ; |LTIB
1   300				       ALIGN_  0
2   301				       IF ($-START+0) AND 1
2   302				       NOP
2   303				       @NOPSCNT	= @NOPSCNT+1
2   304				       ENDIF
1   305	0154			     _LTIBX:
    306	0154  015Ar 03DFr		     DW	_LTIB,_EX
    307				       VALUE_	_LTIB,0
1   308	0158  034Dr		       DW     __SETVAR
1   309				       CONST_ _LTIB,0
2   310	015A  038Fr 0000	     _LTIB  DW __cons,0
    311				       L_ _TX		       ; |DICT
1   312				       ALIGN_  0
2   313				       IF ($-START+0) AND 1
2   314				       NOP
2   315				       @NOPSCNT	= @NOPSCNT+1
2   316				       ENDIF
1   317	015E			     _TX:
    318	015E  0164r 03DFr		     DW	_T,_EX
    319				       VALUE_	_T,@VOCTOP
1   320	0162  034Dr		       DW     __SETVAR
1   321				       CONST_ _T,@VOCTOP
2   322	0164  038Fr E000	     _T	 DW __cons,@VOCTOP
    323				       L_ _HX		       ; |HERE
1   324				       ALIGN_  0
2   325				       IF ($-START+0) AND 1
2   326				       NOP
2   327				       @NOPSCNT	= @NOPSCNT+1
2   328				       ENDIF
1   329	0168			     _HX:
    330	0168  016Er 03DFr		     DW	_H,_EX
    331				       VALUE_	_H,0
1   332	016C  034Dr		       DW     __SETVAR
1   333				       CONST_ _H,0
2   334	016E  038Fr 0000	     _H	 DW __cons,0
    335
    336				       VECTOR_	_VT,_T
1   337	0172  034Dr		       DW     __SETVAR
1   338				       DEFER_  _VT,_T
2   339	0174  03FDr 0164r	     _VT  DW __defer,_T
    340				       VECTOR_	_VDBG,_NOOP
1   341	0178  034Dr		       DW     __SETVAR
1   342				       DEFER_  _VDBG,_NOOP
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 7
C4F.asm



2   343	017A  03FDr 01E8r	     _VDBG  DW __defer,_NOOP
    344				       VECTOR_	_VPIN,_NOOP
1   345	017E  034Dr		       DW     __SETVAR
1   346				       DEFER_  _VPIN,_NOOP
2   347	0180  03FDr 01E8r	     _VPIN  DW __defer,_NOOP
    348
    349				       QUAN_	 _CNTC,0
1   350	0184  0389r 034Dr	       DW     __VAR3,__SETVAR
1   351				       CONST_ _CNTC,0
2   352	0188  038Fr 0000	     _CNTC  DW __cons,0
    353				       POINT_	_INIT,_@_INI
1   354	018C  02F5r		       DW __setpnt
1   355				       DEFER_  _INIT,_@_INI
2   356	018E  03FDr 019Cr	     _INIT  DW __defer,_@_INI
    357	0192  0389r		       DW __VAR3
    358				       POINT_	_FIND,@LPAR
1   359	0194  02F5r		       DW __setpnt
1   360				       DEFER_  _FIND,@LPAR
2   361	0196  03FDr 01B2r	     _FIND  DW __defer,@LPAR
    362
    363				     ; ---------- INIT INTERPRETTER ----------------
    364
    365				     LL_ _REINIT,to_+_INIT
1   366				       ALIGN_  0
2   367				       IF ($-START+0) AND 1
2   368				       NOP
2   369				       @NOPSCNT	= @NOPSCNT+1
2   370				       ENDIF
1   371	019A			     _REINIT:
1   372	019A  018Cr		       DW to_+_INIT
    373	019C			     _@_INI:
    374	019C  0238r			DW  _UPDICT
    375	019E  0268r 2000 5800	  +	DW  _DLIT,8*1024,22*1024,_POSTX,_EVAL
    376	      03DDr 01BCr
    377					;DW  _DLIT,8*1024,0,_POSTX,_EVAL
    378				     LL_ _REINIT2,to_+_INIT
1   379				       ALIGN_  0
2   380				       IF ($-START+0) AND 1
2   381				       NOP
2   382				       @NOPSCNT	= @NOPSCNT+1
2   383				       ENDIF
1   384	01A8			     _REINIT2:
1   385	01A8  018Cr		       DW to_+_INIT
    386	01AA  03D5r 03F1r	     _@_ABINI  DW _NOP,_SKIP
    387
    388				     ; ============   INTERPRETTER   ==============
    389
    390				     L_	_SEMICO
1   391				       ALIGN_  0
2   392				       IF ($-START+0) AND 1
2   393				       NOP
2   394				       @NOPSCNT	= @NOPSCNT+1
2   395				       ENDIF
1   396	01AE			     _SEMICO:
    397	01AE  03D5r		     _@SEMICO DW _NOP  ;  DW _TRON
    398
    399				     LL_ _LPAR,TO_+_FIND	     ; [`
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 8
C4F.asm



1   400				       ALIGN_  0
2   401				       IF ($-START+0) AND 1
2   402				       NOP
2   403				       @NOPSCNT	= @NOPSCNT+1
2   404				       ENDIF
1   405	01B0			     _LPAR:
1   406	01B0  0194r		       DW TO_+_FIND
    407	01B2  0174r 01FAr 02E7r	     @LPAR DW _VT,_FND,_RET
    408
    409				     LL_ _MAC,_DZ0		 ; _MAC
1   410				       ALIGN_  0
2   411				       IF ($-START+0) AND 1
2   412				       NOP
2   413				       @NOPSCNT	= @NOPSCNT+1
2   414				       ENDIF
1   415	01B8			     _MAC:
1   416	01B8  03BBr		       DW _DZ0
    417				     LL_ _SEVAL,_CSTR		 ; EVAL
1   418				       ALIGN_  0
2   419				       IF ($-START+0) AND 1
2   420				       NOP
2   421				       @NOPSCNT	= @NOPSCNT+1
2   422				       ENDIF
1   423	01BA			     _SEVAL:
1   424	01BA  0367r		       DW _CSTR
    425				     L_	_EVAL			; EVAL
1   426				       ALIGN_  0
2   427				       IF ($-START+0) AND 1
2   428				       NOP
2   429				       @NOPSCNT	= @NOPSCNT+1
2   430				       ENDIF
1   431	01BC			     _EVAL:
    432	01BC  03D5r		     _@TIZ  DW _NOP
    433				     L_	_@Eval
1   434				       ALIGN_  0
2   435				       IF ($-START+0) AND 1
2   436				       NOP
2   437				       @NOPSCNT	= @NOPSCNT+1
2   438				       ENDIF
1   439	01BE			     _@Eval:
    440	01BE  03D5r 02A8r 03F6r	  +  @EV  DW _NOP,_TOKEN,_IF,@ADDX
    441	      0276r
    442	01C6  0196r 0128r 0418r	  +    DW _FIND,_OPER,_@EXEC,_JUMP,@EV
    443	      03FDr 01BEr
    444
    445				     ; ============== COMPILER ===================
    446
    447				     L_	_COLON		   ; :
1   448				       ALIGN_  0
2   449				       IF ($-START+0) AND 1
2   450				       NOP
2   451				       @NOPSCNT	= @NOPSCNT+1
2   452				       ENDIF
1   453	01D0			     _COLON:
    454	01D0  03D5r		       DW _NOP
    455				     L_	_COLONC		    ; :`
1   456				       ALIGN_  0
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 9
C4F.asm



2   457				       IF ($-START+0) AND 1
2   458				       NOP
2   459				       @NOPSCNT	= @NOPSCNT+1
2   460				       ENDIF
1   461	01D2			     _COLONC:
    462	01D2  0288r		       DW _HENTRY
    463				     LL_ _RPAR,TO_+_FIND
1   464				       ALIGN_  0
2   465				       IF ($-START+0) AND 1
2   466				       NOP
2   467				       @NOPSCNT	= @NOPSCNT+1
2   468				       ENDIF
1   469	01D4			     _RPAR:
1   470	01D4  0194r		       DW TO_+_FIND
    471	01D6  01F2r 013Er 0343r	  +    DW _IFND,_TBUF,_DEC,_IF,@PX
    472	      03F6r 01E4r
    473				       CONST_  _ONE,1
1   474	01E0  038Fr 0001	     _ONE  DW __cons,1
    475
    476	01E4  01F6r		     @PX DW _CFND
    477				     LL_ _2PX,_2P
1   478				       ALIGN_  0
2   479				       IF ($-START+0) AND 1
2   480				       NOP
2   481				       @NOPSCNT	= @NOPSCNT+1
2   482				       ENDIF
1   483	01E6			     _2PX:
1   484	01E6  02BBr		       DW _2P
    485				     LL_ _NOOP,_RET
1   486				       ALIGN_  0
2   487				       IF ($-START+0) AND 1
2   488				       NOP
2   489				       @NOPSCNT	= @NOPSCNT+1
2   490				       ENDIF
1   491	01E8			     _NOOP:
1   492	01E8  02E7r		       DW _RET
    493
    494				     L_	_TO_NAME
1   495				       ALIGN_  0
2   496				       IF ($-START+0) AND 1
2   497				       NOP
2   498				       @NOPSCNT	= @NOPSCNT+1
2   499				       ENDIF
1   500	01EA			     _TO_NAME:
    501	01EA  02B9r		       DW _4P
    502				     L_	_AFT_NAME
1   503				       ALIGN_  0
2   504				       IF ($-START+0) AND 1
2   505				       NOP
2   506				       @NOPSCNT	= @NOPSCNT+1
2   507				       ENDIF
1   508	01EC			     _AFT_NAME:
    509	01EC  0367r 0274r 02E7r	       DW _CSTR,_ADD,_RET
    510
    511				     L_	_IFND
1   512				       ALIGN_  0
2   513				       IF ($-START+0) AND 1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 10
C4F.asm



2   514				       NOP
2   515				       @NOPSCNT	= @NOPSCNT+1
2   516				       ENDIF
1   517	01F2			     _IFND:
    518	01F2  013Er 0373r	       DW _TBUF,_INC
    519				     L_	_CFND
1   520				       ALIGN_  0
2   521				       IF ($-START+0) AND 1
2   522				       NOP
2   523				       @NOPSCNT	= @NOPSCNT+1
2   524				       ENDIF
1   525	01F6			     _CFND:
    526	01F6  0164r 01EAr	       DW _T,_TO_NAME
    527				     LL_ _FND,__PAR
1   528				       ALIGN_  0
2   529				       IF ($-START+0) AND 1
2   530				       NOP
2   531				       @NOPSCNT	= @NOPSCNT+1
2   532				       ENDIF
1   533	01FA			     _FND:
1   534	01FA  04A5r		       DW __PAR
    535	01FC  E8 0003		       CALL  @METHOD
    536	01FF  F3> A6		       repe  cmpsb
    537	0201  C3		       RET
    538	0202			     @METHOD:
    539	0202  5A 5F 58		       POP   DX	DI AX
    540	0205			     @fnd:
    541	0205  03 F9		       add   di,cx
    542	0207  8B DF		       mov   Bx,di
    543	0209  8D 7D 04		       LEA   di,[DI+4]
    544	020C  8A 0D		       mov   cl,[di]
    545	020E  E3 0E		       jcxz  xfnd?
    546	0210  41		       INC   CX
    547	0211  8B F0		       MOV   SI,AX
    548	0213  FF D2		       CALL  DX
    549	0215  75 EE		       jNZ   @fnd
    550	0217  B1 01		       MOV   cL,1
    551	0219  F9		       STC
    552	021A  11 4F 02		       ADC   [BX+2],CX
    553	021D  93		       XCHG  BX,AX
    554	021E			     xFND?:
    555	021E  50 51		       PUSH  AX	CX
    556	0220			     @PARX1:
    557	0220  E9 011A		       jmp   @parx
    558
    559				     L_	_WORD
1   560				       ALIGN_  0
2   561				       IF ($-START+0) AND 1
2   562	0223  90		       NOP
2   563	      =0001		       @NOPSCNT	= @NOPSCNT+1
2   564				       ENDIF
1   565	0224			     _WORD:
    566	0224  0316r 013Er	       DW _PARSE,_TBUF
    567				     ;	DW _VDBG,2
    568				     LL_  _MAKESTR,__PAR       ; (S!
1   569				       ALIGN_  0
2   570				       IF ($-START+0) AND 1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 11
C4F.asm



2   571				       NOP
2   572				       @NOPSCNT	= @NOPSCNT+1
2   573				       ENDIF
1   574	0228			     _MAKESTR:
1   575	0228  04A5r		       DW __PAR
    576	022A  5F 58 5E		       POP   DI	AX SI
    577	022D  57		       PUSH  DI
    578	022E  8A C8		       MOV   cL,AL
    579				     ;	MOV   [DI],CL
    580				     ;	INC   DI
    581	0230  AA		       STOSB
    582	0231  F3> A4		       REP   MOVSB   ; NAME  MOVE
    583	0233  C6 05 60		       MOV   PB	[DI],'`'
    584				       JMPS  @PARX1
1   585	0236  EB E8		       jmp   SHORT @PARX1
    586
    587				     L_	_UPDICT
1   588				       ALIGN_  0
2   589				       IF ($-START+0) AND 1
2   590				       NOP
2   591				       @NOPSCNT	= @NOPSCNT+1
2   592				       ENDIF
1   593	0238			     _UPDICT:
    594	0238  016Er 0393r	       DW    _H,_WSTR
    595				     LL_ _DPUSH,_TX		     ; >DICT
1   596				       ALIGN_  0
2   597				       IF ($-START+0) AND 1
2   598				       NOP
2   599				       @NOPSCNT	= @NOPSCNT+1
2   600				       ENDIF
1   601	023C			     _DPUSH:
1   602	023C  015Er		       DW _TX
    603				     LL_ _MPUSH,__PAR	 ; TOP OF DICTIONARY   IN DI
1   604				       ALIGN_  0
2   605				       IF ($-START+0) AND 1
2   606				       NOP
2   607				       @NOPSCNT	= @NOPSCNT+1
2   608				       ENDIF
1   609	023E			     _MPUSH:
1   610	023E  04A5r		       DW __PAR
    611	0240  5F 59 5E		       POP   DI	CX SI	  ;_@_MPUSH:
    612	0243  03 F1		       ADD   SI,CX		  ; AFTER NAME ADDRESS
    613	0245  FD		       STD			  ; BACKWARDS
    614	0246  A6		       CMPSB			  ; PREPARE FOR	DIRECTION
    615	0247  F3> A4		       REP   MOVSB		  ; NAME  MOVE
    616	0249  FC		       CLD
    617	024A  47		       inc   di
    618	024B			     @MPUSH:
    619	024B  57		       PUSH  di
    620				       JMPS   @PARX1
1   621	024C  EB D2		       jmp   SHORT @PARX1
    622
    623				     LL_ _TOKEN?,_TOKEN
1   624				       ALIGN_  0
2   625				       IF ($-START+0) AND 1
2   626				       NOP
2   627				       @NOPSCNT	= @NOPSCNT+1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 12
C4F.asm



2   628				       ENDIF
1   629	024E			     _TOKEN?:
1   630	024E  02A8r		       DW _TOKEN
    631				     LL_ _N??,_ZEQ
1   632				       ALIGN_  0
2   633				       IF ($-START+0) AND 1
2   634				       NOP
2   635				       @NOPSCNT	= @NOPSCNT+1
2   636				       ENDIF
1   637	0250			     _N??:
1   638	0250  0447r		       DW _ZEQ
    639				     LL_ _??,_ABORT?
1   640				       ALIGN_  0
2   641				       IF ($-START+0) AND 1
2   642				       NOP
2   643				       @NOPSCNT	= @NOPSCNT+1
2   644				       ENDIF
1   645	0252			     _??:
1   646	0252  025Cr		       DW _ABORT?
    647				       NAM_ "?"
1   648	0254  01		       db    ??0000-$-1
1   649	0255  3F		       db    "?"
1   650	0256			     ??0000  label   byte
    651	0256  02E7r		       DW _RET
    652
    653				     L_	_ALLERR
1   654				       ALIGN_  0
2   655				       IF ($-START+0) AND 1
2   656				       NOP
2   657				       @NOPSCNT	= @NOPSCNT+1
2   658				       ENDIF
1   659	0258			     _ALLERR:
    660	0258  014Ar		       DW _0
    661				     L_	_ABORT0?		  ; (A'
1   662				       ALIGN_  0
2   663				       IF ($-START+0) AND 1
2   664				       NOP
2   665				       @NOPSCNT	= @NOPSCNT+1
2   666				       ENDIF
1   667	025A			     _ABORT0?:
    668	025A  0447r		       DW _ZEQ
    669				     L_	_ABORT?			 ; (A'
1   670				       ALIGN_  0
2   671				       IF ($-START+0) AND 1
2   672				       NOP
2   673				       @NOPSCNT	= @NOPSCNT+1
2   674				       ENDIF
1   675	025C			     _ABORT?:
    676	025C  041Fr 0477r 03F6r	  +    DW _ASTR,_SWAP,_IF,@ADDX
    677	      0276r
    678	0264  03D5r 010Dr	     _@_ERR DW _NOP,_ABORT
    679
    680				     ; -------------- MATH ------------------
    681
    682				     L_	_DLIT
1   683				       ALIGN_  0
2   684				       IF ($-START+0) AND 1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 13
C4F.asm



2   685				       NOP
2   686				       @NOPSCNT	= @NOPSCNT+1
2   687				       ENDIF
1   688	0268			     _DLIT:
    689	0268  03C9r		       DW _RLDP
    690				     L_	_LIT
1   691				       ALIGN_  0
2   692				       IF ($-START+0) AND 1
2   693				       NOP
2   694				       @NOPSCNT	= @NOPSCNT+1
2   695				       ENDIF
1   696	026A			     _LIT:
    697	026A  03C9r 02E7r	       DW _RLDP,_RET
    698
    699				     LL_ _RANGES,_1P
1   700				       ALIGN_  0
2   701				       IF ($-START+0) AND 1
2   702				       NOP
2   703				       @NOPSCNT	= @NOPSCNT+1
2   704				       ENDIF
1   705	026E			     _RANGES:
1   706	026E  02BFr		       DW _1P
    707				     LL_ _OVERM,_OVER
1   708				       ALIGN_  0
2   709				       IF ($-START+0) AND 1
2   710				       NOP
2   711				       @NOPSCNT	= @NOPSCNT+1
2   712				       ENDIF
1   713	0270			     _OVERM:
1   714	0270  03B1r		       DW _OVER
    715				     LL_ _SUB,_NEG
1   716				       ALIGN_  0
2   717				       IF ($-START+0) AND 1
2   718				       NOP
2   719				       @NOPSCNT	= @NOPSCNT+1
2   720				       ENDIF
1   721	0272			     _SUB:
1   722	0272  0385r		       DW _NEG
    723				     LL_ _ADD,_PLAVG
1   724				       ALIGN_  0
2   725				       IF ($-START+0) AND 1
2   726				       NOP
2   727				       @NOPSCNT	= @NOPSCNT+1
2   728				       ENDIF
1   729	0274			     _ADD:
1   730	0274  03A5r		       DW _PLAVG
    731				     L_	_ADDX
1   732				       ALIGN_  0
2   733				       IF ($-START+0) AND 1
2   734				       NOP
2   735				       @NOPSCNT	= @NOPSCNT+1
2   736				       ENDIF
1   737	0276			     _ADDX:
    738	0276  0341r		     @ADDX DW  _DROPX
    739
    740				     LL_ _@COMMA,_LD
1   741				       ALIGN_  0
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 14
C4F.asm



2   742				       IF ($-START+0) AND 1
2   743				       NOP
2   744				       @NOPSCNT	= @NOPSCNT+1
2   745				       ENDIF
1   746	0278			     _@COMMA:
1   747	0278  0405r		       DW _LD
    748				     LL_ _COMMA,_HX
1   749				       ALIGN_  0
2   750				       IF ($-START+0) AND 1
2   751				       NOP
2   752				       @NOPSCNT	= @NOPSCNT+1
2   753				       ENDIF
1   754	027A			     _COMMA:
1   755	027A  0168r		       DW _HX
    756				     L_	_STP
1   757				       ALIGN_  0
2   758				       IF ($-START+0) AND 1
2   759				       NOP
2   760				       @NOPSCNT	= @NOPSCNT+1
2   761				       ENDIF
1   762	027C			     _STP:
    763	027C  0379r 0361r 038Dr	       DW  _PUSH,_RSTP,_POPX
    764
    765				     L_	_POSTENT		 ; ==:	 \ N:  OR =,
1   766				       ALIGN_  0
2   767				       IF ($-START+0) AND 1
2   768				       NOP
2   769				       @NOPSCNT	= @NOPSCNT+1
2   770				       ENDIF
1   771	0282			     _POSTENT:
    772	0282  03B9r		       DW _DUP
    773	0284  03DDr 027Ar	       DW _POSTX,_COMMA
    774				     L_	_HENTRY			 ; H=:	_HER_E	!!!
1   775				       ALIGN_  0
2   776				       IF ($-START+0) AND 1
2   777				       NOP
2   778				       @NOPSCNT	= @NOPSCNT+1
2   779				       ENDIF
1   780	0288			     _HENTRY:
    781	0288  016Er		     _@HERE   DW _H
    782				     L_	_ENTRY			 ; =:
1   783				       ALIGN_  0
2   784				       IF ($-START+0) AND 1
2   785				       NOP
2   786				       @NOPSCNT	= @NOPSCNT+1
2   787				       ENDIF
1   788	028A			     _ENTRY:
    789	028A  014Ar 024Er	       DW _0,_TOKEN?
    790				     ;	DW _VDBG,3
    791				     L_	_ENTRYZ			  ; (=:
1   792				       ALIGN_  0
2   793				       IF ($-START+0) AND 1
2   794				       NOP
2   795				       @NOPSCNT	= @NOPSCNT+1
2   796				       ENDIF
1   797	028E			     _ENTRYZ:
    798	028E  03D5r		     _@SAME  DW	_NOP
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 15
C4F.asm



    799	0290  02ACr 02BFr 015Er	  +    DW _DC@,_1P,_TX,_MPUSH,_STM
    800	      023Er 029Ar
    801				     L_	_STM
1   802				       ALIGN_  0
2   803				       IF ($-START+0) AND 1
2   804				       NOP
2   805				       @NOPSCNT	= @NOPSCNT+1
2   806				       ENDIF
1   807	029A			     _STM:
    808	029A  02C1r 0379r 02A2r	  +    DW _2M,_PUSH,_IST,_POPX
    809	      038Dr
    810				     LL_ _IST,_J
1   811				       ALIGN_  0
2   812				       IF ($-START+0) AND 1
2   813				       NOP
2   814				       @NOPSCNT	= @NOPSCNT+1
2   815				       ENDIF
1   816	02A2			     _IST:
1   817	02A2  0433r		       DW _J
    818				     L_	_ST
1   819				       ALIGN_  0
2   820				       IF ($-START+0) AND 1
2   821				       NOP
2   822				       @NOPSCNT	= @NOPSCNT+1
2   823				       ENDIF
1   824	02A4			     _ST:
    825	02A4  0379r 034Br	       DW _PUSH,_POPSTX	;
    826
    827				     L_	_TOKEN
1   828				       ALIGN_  0
2   829				       IF ($-START+0) AND 1
2   830				       NOP
2   831				       @NOPSCNT	= @NOPSCNT+1
2   832				       ENDIF
1   833	02A8			     _TOKEN:
    834	02A8  0146r 0224r	       DW _Bl,_WORD
    835				     L_	_DC@
1   836				       ALIGN_  0
2   837				       IF ($-START+0) AND 1
2   838				       NOP
2   839				       @NOPSCNT	= @NOPSCNT+1
2   840				       ENDIF
1   841	02AC			     _DC@:
    842	02AC  03B9r 049Fr	       DW _DUP,__ARET
    843				     P_	_C@
1   844				       ALIGN_ 0
2   845				       IF ($-START+0) AND 1
2   846				       NOP
2   847				       @NOPSCNT	= @NOPSCNT+1
2   848				       ENDIF
1   849	02B0  90		       NOP
1   850	02B1			     _C@:
1   851				       org   $-1
    852	02B0  8A 3F		       MOV   TOPH,[TOP]
    853				     P_	_HW_B
1   854				       ALIGN_ 0
2   855				       IF ($-START+0) AND 1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 16
C4F.asm



2   856				       NOP
2   857				       @NOPSCNT	= @NOPSCNT+1
2   858				       ENDIF
1   859	02B2  90		       NOP
1   860	02B3			     _HW_B:
1   861				       org   $-1
    862	02B2  8A DF		       MOV   TOPL,TOPH
    863				     P_	_W_B
1   864				       ALIGN_ 0
2   865				       IF ($-START+0) AND 1
2   866				       NOP
2   867				       @NOPSCNT	= @NOPSCNT+1
2   868				       ENDIF
1   869	02B4  90		       NOP
1   870	02B5			     _W_B:
1   871				       org   $-1
    872				       CLR   TOPH
1   873	02B4  32 FF		       XOR    TOPH,TOPH
    874				       JMPS  @NOP3
1   875	02B6  EB 2F		       jmp   SHORT @NOP3
    876
    877				     P_	_4P
1   878				       ALIGN_ 0
2   879				       IF ($-START+0) AND 1
2   880				       NOP
2   881				       @NOPSCNT	= @NOPSCNT+1
2   882				       ENDIF
1   883	02B8  90		       NOP
1   884	02B9			     _4P:
1   885				       org   $-1
    886	02B8  43		       INC     TOP
    887	02B9  43		       INC     TOP
    888				     P_	_2P
1   889				       ALIGN_ 0
2   890				       IF ($-START+0) AND 1
2   891				       NOP
2   892				       @NOPSCNT	= @NOPSCNT+1
2   893				       ENDIF
1   894	02BA  90		       NOP
1   895	02BB			     _2P:
1   896				       org   $-1
    897	02BA  43		       INC     TOP
    898	02BB			     @1P:
    899	02BB  43		       INC     TOP
    900				       JMPS    @NOP3
1   901	02BC  EB 29		       jmp   SHORT @NOP3
    902				     P_	_1P
1   903				       ALIGN_ 0
2   904				       IF ($-START+0) AND 1
2   905				       NOP
2   906				       @NOPSCNT	= @NOPSCNT+1
2   907				       ENDIF
1   908	02BE  90		       NOP
1   909	02BF			     _1P:
1   910				       org   $-1
    911				       JMPS    @1P
1   912	02BE  EB FB		       jmp   SHORT @1P
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 17
C4F.asm



    913				     P_	_2M
1   914				       ALIGN_ 0
2   915				       IF ($-START+0) AND 1
2   916				       NOP
2   917				       @NOPSCNT	= @NOPSCNT+1
2   918				       ENDIF
1   919	02C0  90		       NOP
1   920	02C1			     _2M:
1   921				       org   $-1
    922	02C0  4B		       DEC     TOP
    923	02C1			     @1M:
    924	02C1  4B		       DEC     TOP
    925				       JMPS    @NOP3
1   926	02C2  EB 23		       jmp   SHORT @NOP3
    927				     P_	_1M
1   928				       ALIGN_ 0
2   929				       IF ($-START+0) AND 1
2   930				       NOP
2   931				       @NOPSCNT	= @NOPSCNT+1
2   932				       ENDIF
1   933	02C4  90		       NOP
1   934	02C5			     _1M:
1   935				       org   $-1
    936				       JMPS    @1M
1   937	02C4  EB FB		       jmp   SHORT @1M
    938
    939				     P_	_TARY
1   940				       ALIGN_ 0
2   941				       IF ($-START+0) AND 1
2   942				       NOP
2   943				       @NOPSCNT	= @NOPSCNT+1
2   944				       ENDIF
1   945	02C6  90		       NOP
1   946	02C7			     _TARY:
1   947				       org   $-1
    948	02C6  D1 E3		       SHL     TOP,1
    949				     P_	_5ARY
1   950				       ALIGN_ 0
2   951				       IF ($-START+0) AND 1
2   952				       NOP
2   953				       @NOPSCNT	= @NOPSCNT+1
2   954				       ENDIF
1   955	02C8  90		       NOP
1   956	02C9			     _5ARY:
1   957				       org   $-1
    958	02C8  03 F3		       ADD     IP,TOP
    959				     P_	_LARY
1   960				       ALIGN_ 0
2   961				       IF ($-START+0) AND 1
2   962				       NOP
2   963				       @NOPSCNT	= @NOPSCNT+1
2   964				       ENDIF
1   965	02CA  90		       NOP
1   966	02CB			     _LARY:
1   967				       org   $-1
    968	02CA  D1 E3		       SHL     TOP,1
    969				     P_	_WARY
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 18
C4F.asm



1   970				       ALIGN_ 0
2   971				       IF ($-START+0) AND 1
2   972				       NOP
2   973				       @NOPSCNT	= @NOPSCNT+1
2   974				       ENDIF
1   975	02CC  90		       NOP
1   976	02CD			     _WARY:
1   977				       org   $-1
    978	02CC  D1 E3		       SHL     TOP,1
    979				     P_	_BARY
1   980				       ALIGN_ 0
2   981				       IF ($-START+0) AND 1
2   982				       NOP
2   983				       @NOPSCNT	= @NOPSCNT+1
2   984				       ENDIF
1   985	02CE  90		       NOP
1   986	02CF			     _BARY:
1   987				       org   $-1
    988	02CE  03 DE		       ADD     TOP,IP
    989				       JMPS   @RET
1   990	02D0  EB 14		       jmp   SHORT @RET
    991
    992				     P_	__SCANER
1   993				       ALIGN_ 0
2   994				       IF ($-START+0) AND 1
2   995				       NOP
2   996				       @NOPSCNT	= @NOPSCNT+1
2   997				       ENDIF
1   998	02D2  90		       NOP
1   999	02D3			     __SCANER:
1  1000				       org   $-1
   1001				       X
1  1002	02D2  87 E5		       xchg  Rsp,DSP
   1003	02D4  53		       PUSH    TOP
   1004	02D5  5A 59 5F		       POP     DX CX DI
   1005				       X
1  1006	02D8  87 E5		       xchg  Rsp,DSP
   1007	02DA  93		       XCHG    AX,TOP
   1008	02DB  51		       push    cX
   1009				      ;	INT 3		; !!!!
   1010	02DC  FF D6		       CALL    IP
   1011	02DE  5B		       POP     TOP
   1012	02DF  74 02		       JE      @@1
   1013	02E1  8B CB		       MOV     CX,TOP
   1014	02E3			     @@1:
   1015	02E3  41		       INC     CX
   1016	02E4  2B D9		       SUB     TOP,CX
   1017				     P_	_RET
1  1018				       ALIGN_ 0
2  1019				       IF ($-START+0) AND 1
2  1020				       NOP
2  1021				       @NOPSCNT	= @NOPSCNT+1
2  1022				       ENDIF
1  1023	02E6  90		       NOP
1  1024	02E7			     _RET:
1  1025				       org   $-1
   1026	02E6			     @RET:
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 19
C4F.asm



   1027	02E6  5E		       POP     IP
   1028	02E7			     @NOP3:
   1029	02E7  E9 00EA		       JMP     @NOP
   1030
   1031				     P_	_CALL_IP
1  1032				       ALIGN_ 0
2  1033				       IF ($-START+0) AND 1
2  1034				       NOP
2  1035				       @NOPSCNT	= @NOPSCNT+1
2  1036				       ENDIF
1  1037	02EA  90		       NOP
1  1038	02EB			     _CALL_IP:
1  1039				       org   $-1
   1040	02EA  FF D6		       CALL    IP
   1041				       JMPS    @RET
1  1042	02EC  EB F8		       jmp   SHORT @RET
   1043
   1044				      P_ _RDROPX
1  1045				       ALIGN_ 0
2  1046				       IF ($-START+0) AND 1
2  1047				       NOP
2  1048				       @NOPSCNT	= @NOPSCNT+1
2  1049				       ENDIF
1  1050	02EE  90		       NOP
1  1051	02EF			     _RDROPX:
1  1052				       org   $-1
   1053	02EE  58		       POP W
   1054				       SKIPA
1  1055	02EF  3D		       DB    03DH
   1056				     P_	_PLSX
1  1057				       ALIGN_ 0
2  1058				       IF ($-START+0) AND 1
2  1059				       NOP
2  1060				       @NOPSCNT	= @NOPSCNT+1
2  1061				       ENDIF
1  1062	02F0  90		       NOP
1  1063	02F1			     _PLSX:
1  1064				       org   $-1
   1065	02F0  03 1C		       ADD  TOP,[IP]
   1066				       JMPS   @RET
1  1067	02F2  EB F2		       jmp   SHORT @RET
   1068
   1069				     P_	__setpnt
1  1070				       ALIGN_ 0
2  1071				       IF ($-START+0) AND 1
2  1072				       NOP
2  1073				       @NOPSCNT	= @NOPSCNT+1
2  1074				       ENDIF
1  1075	02F4  90		       NOP
1  1076	02F5			     __setpnt:
1  1077				       org   $-1
   1078	02F4  8F 44 02		       POP   [IP+2]
   1079				       SKIPA
1  1080	02F7  3D		       DB    03DH
   1081				     P_	_ANDX
1  1082				       ALIGN_ 0
2  1083				       IF ($-START+0) AND 1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 20
C4F.asm



2  1084				       NOP
2  1085				       @NOPSCNT	= @NOPSCNT+1
2  1086				       ENDIF
1  1087	02F8  90		       NOP
1  1088	02F9			     _ANDX:
1  1089				       org   $-1
   1090	02F8  23 1C		       AND  TOP,[IP]
   1091				       JMPS   @RET
1  1092	02FA  EB EA		       jmp   SHORT @RET
   1093
   1094				       ;vvvvvv--------------   IO  ---------------
   1095
   1096				     LL_ _INT,__PAR
1  1097				       ALIGN_  0
2  1098				       IF ($-START+0) AND 1
2  1099				       NOP
2  1100				       @NOPSCNT	= @NOPSCNT+1
2  1101				       ENDIF
1  1102	02FC			     _INT:
1  1103	02FC  04A5r		       DW __PAR
   1104	02FE  58		       POP   AX
   1105	02FF  A2 030Ar		       MOV   PB	@INT,AL
   1106	0302  58 5B 59 5A	       POP   AX	BX  CX	DX
   1107	0306  1E 06 55		       PUSH  DS	ES BP
   1108	0309  CD 21		       INT     21H
   1109	      =MYCSEG:030A	     @INT = $-1
   1110	030B  5D 07 1F		       POP   BP	ES DS
   1111	030E  52 51 53 50	       PUSH  DX	CX BX AX
   1112	0312  9C			     PUSHF
   1113				       jmpS  @parx
1  1114	0313  EB 28		       jmp   SHORT @parx
   1115
   1116				     L_	_PARSE
1  1117				       ALIGN_  0
2  1118				       IF ($-START+0) AND 1
2  1119	0315  90		       NOP
2  1120	      =0002		       @NOPSCNT	= @NOPSCNT+1
2  1121				       ENDIF
1  1122	0316			     _PARSE:
   1123	0316  03D5r 0150r 0154r	     _@PARSE  DW _NOP,_ETIB,_LTIBX
   1124				     ;	DW _VDBG,1
   1125				     L_	_PARS		     ;=	(PARS
1  1126				       ALIGN_  0
2  1127				       IF ($-START+0) AND 1
2  1128				       NOP
2  1129				       @NOPSCNT	= @NOPSCNT+1
2  1130				       ENDIF
1  1131	031C			     _PARS:
   1132	031C  04A5r		       DW __PAR
   1133	031E  59 5F 58		       POP CX DI AX
   1134	0321  2B F9		       SUB   DI,CX
   1135	0323  3C 20		       CMP   AL,' '
   1136	0325  75 08		       JNE   @@SKIPX
   1137	0327  E3 06		       JCXZ  @@SKIPX
   1138	0329  F3> AE		       REPE  SCASB
   1139	032B  74 02		       JE    @@SKIPX
   1140	032D  4F		       DEC   DI
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 21
C4F.asm



   1141	032E  41		       INC   CX
   1142	032F			     @@SKIPX:
   1143	032F  8B DF		       MOV   BX,di	;  START OF THE	SOURCE
   1144	0331  E3 05		       JCXZ  @@WEX
   1145	0333  F2> AE		       REPNE SCASB
   1146	0335  75 01		       JNE   @@WEX
   1147	0337  4F		       DEC   DI
   1148	0338			     @@WEX:	     ; END OF THE SOURCE  IN DI
   1149	0338  2B FB		       SUB   DI,BX
   1150	033A  53 57 51		       PUSH  BX	di CX	  ; START OF THE SOURCE
   1151	033D			     @PARX:
   1152				       X
1  1153	033D  87 E5		       xchg  Rsp,DSP
   1154	033F  5A		       POP   AR
   1155				     P_	_DROPX
1  1156				       ALIGN_ 0
2  1157				       IF ($-START+0) AND 1
2  1158				       NOP
2  1159				       @NOPSCNT	= @NOPSCNT+1
2  1160				       ENDIF
1  1161	0340  90		       NOP
1  1162	0341			     _DROPX:
1  1163				       org   $-1
   1164				       JMPS   @DROPX
1  1165	0340  EB 0F		       jmp   SHORT @DROPX
   1166
   1167				     P_	_DEC		       ; ++
1  1168				       ALIGN_ 0
2  1169				       IF ($-START+0) AND 1
2  1170				       NOP
2  1171				       @NOPSCNT	= @NOPSCNT+1
2  1172				       ENDIF
1  1173	0342  90		       NOP
1  1174	0343			     _DEC:
1  1175				       org   $-1
   1176	0342  FF 0F			     DEC   PW [TOP]
   1177				       JMPS   @DROP
1  1178	0344  EB 33		       jmp   SHORT @DROP
   1179
   1180				     P_	_AST		       ; A!
1  1181				       ALIGN_ 0
2  1182				       IF ($-START+0) AND 1
2  1183				       NOP
2  1184				       @NOPSCNT	= @NOPSCNT+1
2  1185				       ENDIF
1  1186	0346  90		       NOP
1  1187	0347			     _AST:
1  1188				       org   $-1
   1189	0346  8B D3			     MOV	     AR,TOP
   1190				     P_	_DROP		   ; (DROP
1  1191				       ALIGN_ 0
2  1192				       IF ($-START+0) AND 1
2  1193				       NOP
2  1194				       @NOPSCNT	= @NOPSCNT+1
2  1195				       ENDIF
1  1196	0348  90		       NOP
1  1197	0349			     _DROP:
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 22
C4F.asm



1  1198				       org   $-1
   1199				       JMPS   @DROP
1  1200	0348  EB 2F		       jmp   SHORT @DROP
   1201
   1202				     P_	_POPSTX
1  1203				       ALIGN_ 0
2  1204				       IF ($-START+0) AND 1
2  1205				       NOP
2  1206				       @NOPSCNT	= @NOPSCNT+1
2  1207				       ENDIF
1  1208	034A  90		       NOP
1  1209	034B			     _POPSTX:
1  1210				       org   $-1
   1211	034A  5E		       POP   IP
   1212				       SKIPB
1  1213	034B  3C		       DB    03CH
   1214				     P_	__SETVAR
1  1215				       ALIGN_ 0
2  1216				       IF ($-START+0) AND 1
2  1217				       NOP
2  1218				       @NOPSCNT	= @NOPSCNT+1
2  1219				       ENDIF
1  1220	034C  90		       NOP
1  1221	034D			     __SETVAR:
1  1222				       org   $-1
   1223	034C  AD		       LODSW
   1224	034D  89 1C		       MOV   [IP],top
   1225				       SKIPB  ;	 JMPS  @DROPX
1  1226	034F  3C		       DB    03CH
   1227				     P_	_PUSHX		  ; (PUSH;
1  1228				       ALIGN_ 0
2  1229				       IF ($-START+0) AND 1
2  1230				       NOP
2  1231				       @NOPSCNT	= @NOPSCNT+1
2  1232				       ENDIF
1  1233	0350  90		       NOP
1  1234	0351			     _PUSHX:
1  1235				       org   $-1
   1236	0350  53		       PUSH  TOP
   1237	0351			     @DROPX:		   ; ( (DROP;
   1238	0351  5E		       POP    IP
   1239				       JMPS   @DROP
1  1240	0352  EB 25		       jmp   SHORT @DROP
   1241
   1242				     P_	_0X
1  1243				       ALIGN_ 0
2  1244				       IF ($-START+0) AND 1
2  1245				       NOP
2  1246				       @NOPSCNT	= @NOPSCNT+1
2  1247				       ENDIF
1  1248	0354  90		       NOP
1  1249	0355			     _0X:
1  1250				       org   $-1
   1251				       Z?      TOP
1  1252	0354  0B DB		       OR    TOP,TOP
   1253	0356  74 F9		       JE      @DROPX
   1254				       JMPS   @DROP
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 23
C4F.asm



1  1255	0358  EB 1F		       jmp   SHORT @DROP
   1256
   1257				     P_	_CRSTP			    ; (C!R+
1  1258				       ALIGN_ 0
2  1259				       IF ($-START+0) AND 1
2  1260				       NOP
2  1261				       @NOPSCNT	= @NOPSCNT+1
2  1262				       ENDIF
1  1263	035A  90		       NOP
1  1264	035B			     _CRSTP:
1  1265				       org   $-1
   1266	035A  5F		       POP     WA
   1267	035B  93		       XCHG    TOP,W
   1268	035C  AA		       STOSB
   1269	035D  57		       PUSH    WA
   1270				       JMPS   @DROP
1  1271	035E  EB 19		       jmp   SHORT @DROP
   1272
   1273				     P_	_RSTP		   ; (!R+
1  1274				       ALIGN_ 0
2  1275				       IF ($-START+0) AND 1
2  1276				       NOP
2  1277				       @NOPSCNT	= @NOPSCNT+1
2  1278				       ENDIF
1  1279	0360  90		       NOP
1  1280	0361			     _RSTP:
1  1281				       org   $-1
   1282	0360  5F		       POP     WA
   1283	0361  93		       XCHG    TOP,W
   1284	0362  AB		       STOSW
   1285	0363  57		       PUSH    WA
   1286				       JMPS   @DROP
1  1287	0364  EB 13		       jmp   SHORT @DROP
   1288
   1289				     P_	_CSTR
1  1290				       ALIGN_ 0
2  1291				       IF ($-START+0) AND 1
2  1292				       NOP
2  1293				       @NOPSCNT	= @NOPSCNT+1
2  1294				       ENDIF
1  1295	0366  90		       NOP
1  1296	0367			     _CSTR:
1  1297				       org   $-1
   1298	0366  8A 07		       MOV   WL,[TOP]
   1299	0368  43		       INC   TOP
   1300				       JMPS  @K0
1  1301	0369  EB 35		       jmp   SHORT @K0
   1302
   1303				     p_	_BE			; (BE
1  1304				       ALIGN_ 0
2  1305				       IF ($-START+0) AND 1
2  1306	036B  90		       NOP
2  1307	      =0003		       @NOPSCNT	= @NOPSCNT+1
2  1308				       ENDIF
1  1309	036C  90		       NOP
1  1310	036D			     _BE:
1  1311				       org   $-1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 24
C4F.asm



   1312	036C  93			     XCHG    AX,TOP
   1313	036D  B4 0E		       MOV     AH,0EH
   1314	036F  CD 10		       INT     10H
   1315				       SKIPA
1  1316	0371  3D		       DB    03DH
   1317				     P_	_INC		       ; ++
1  1318				       ALIGN_ 0
2  1319				       IF ($-START+0) AND 1
2  1320				       NOP
2  1321				       @NOPSCNT	= @NOPSCNT+1
2  1322				       ENDIF
1  1323	0372  90		       NOP
1  1324	0373			     _INC:
1  1325				       org   $-1
   1326	0372  FF 07			     INC   PW [TOP]
   1327				       JMPS   @DROP
1  1328	0374  EB 03		       jmp   SHORT @DROP
   1329				     P_	_FOR			     ; (FOR
1  1330				       ALIGN_ 0
2  1331				       IF ($-START+0) AND 1
2  1332				       NOP
2  1333				       @NOPSCNT	= @NOPSCNT+1
2  1334				       ENDIF
1  1335	0376  90		       NOP
1  1336	0377			     _FOR:
1  1337				       org   $-1
   1338	0376  8B 34		       MOV     IP,[IP]
   1339				     P_	_PUSH			    ; (PUSH
1  1340				       ALIGN_ 0
2  1341				       IF ($-START+0) AND 1
2  1342				       NOP
2  1343				       @NOPSCNT	= @NOPSCNT+1
2  1344				       ENDIF
1  1345	0378  90		       NOP
1  1346	0379			     _PUSH:
1  1347				       org   $-1
   1348	0378  53		       PUSH    TOP
   1349	0379			     @DROP:
   1350				       X
1  1351	0379  87 E5		       xchg  Rsp,DSP
   1352	037B			     @DROPZ:
   1353				       R_TO    TOP
1  1354	037B  5B		       POP   TOP
   1355				       JMPS    @SWPSTK
1  1356	037C  EB 54		       jmp   SHORT @SWPSTK
   1357
   1358				     L_	_nAND		       ; ( AND
1  1359				       ALIGN_  0
2  1360				       IF ($-START+0) AND 1
2  1361				       NOP
2  1362				       @NOPSCNT	= @NOPSCNT+1
2  1363				       ENDIF
1  1364	037E			     _nAND:
   1365	037E  0499r		       DW __ADROPX
   1366	0380  23 D8			 AND	 TOP,W
   1367				     P_	_NOT
1  1368				       ALIGN_ 0
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 25
C4F.asm



2  1369				       IF ($-START+0) AND 1
2  1370				       NOP
2  1371				       @NOPSCNT	= @NOPSCNT+1
2  1372				       ENDIF
1  1373	0382  90		       NOP
1  1374	0383			     _NOT:
1  1375				       org   $-1
   1376	0382  43			 INC	 TOP
   1377				     P_	_NEG
1  1378				       ALIGN_ 0
2  1379				       IF ($-START+0) AND 1
2  1380	0383  90		       NOP
2  1381	      =0004		       @NOPSCNT	= @NOPSCNT+1
2  1382				       ENDIF
1  1383	0384  90		       NOP
1  1384	0385			     _NEG:
1  1385				       org   $-1
   1386	0384  F7 DB			 NEG	 TOP
   1387					 N_
1  1388	0386  EB 4C		       JMP SHORT   @NOP
   1389
   1390				     P_	__VAR3
1  1391				       ALIGN_ 0
2  1392				       IF ($-START+0) AND 1
2  1393				       NOP
2  1394				       @NOPSCNT	= @NOPSCNT+1
2  1395				       ENDIF
1  1396	0388  90		       NOP
1  1397	0389			     __VAR3:
1  1398				       org   $-1
   1399	0388  AD		       LODSW
   1400	0389  AD		       LODSW
   1401				     P_	__VAR
1  1402				       ALIGN_ 0
2  1403				       IF ($-START+0) AND 1
2  1404				       NOP
2  1405				       @NOPSCNT	= @NOPSCNT+1
2  1406				       ENDIF
1  1407	038A  90		       NOP
1  1408	038B			     __VAR:
1  1409				       org   $-1
   1410	038A  96		       XCHG	 W,IP
   1411				       SKIPB
1  1412	038B  3C		       DB    03CH
   1413				     P_	_POPX
1  1414				       ALIGN_ 0
2  1415				       IF ($-START+0) AND 1
2  1416				       NOP
2  1417				       @NOPSCNT	= @NOPSCNT+1
2  1418				       ENDIF
1  1419	038C  90		       NOP
1  1420	038D			     _POPX:
1  1421				       org   $-1
   1422	038C  58		       POP	 W
   1423				       SKIPB
1  1424	038D  3C		       DB    03CH
   1425				     P_	__cons
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 26
C4F.asm



1  1426				       ALIGN_ 0
2  1427				       IF ($-START+0) AND 1
2  1428				       NOP
2  1429				       @NOPSCNT	= @NOPSCNT+1
2  1430				       ENDIF
1  1431	038E  90		       NOP
1  1432	038F			     __cons:
1  1433				       org   $-1
   1434	038E  AD		       LODSW
   1435	038F  5E		       POP   IP
   1436				       JMPS  @WPUSH
1  1437	0390  EB 3C		       jmp   SHORT @WPUSH
   1438
   1439				     P_	_WSTR
1  1440				       ALIGN_ 0
2  1441				       IF ($-START+0) AND 1
2  1442				       NOP
2  1443				       @NOPSCNT	= @NOPSCNT+1
2  1444				       ENDIF
1  1445	0392  90		       NOP
1  1446	0393			     _WSTR:
1  1447				       org   $-1
   1448	0392  8B 07		       MOV   W,[TOP]
   1449	0394  43		       INC   TOP
   1450	0395  43		       INC   TOP
   1451				       JMPS  @WPUSH
1  1452	0396  EB 36		       jmp   SHORT @WPUSH
   1453
   1454				     P_	_BK	     ; (BK
1  1455				       ALIGN_ 0
2  1456				       IF ($-START+0) AND 1
2  1457				       NOP
2  1458				       @NOPSCNT	= @NOPSCNT+1
2  1459				       ENDIF
1  1460	0398  90		       NOP
1  1461	0399			     _BK:
1  1462				       org   $-1
   1463				       CLR   W
1  1464	0398  33 C0		       XOR    W,W
   1465	039A  CD 16		       INT   16H
   1466				       Z?    WL
1  1467	039C  0A C0		       OR    WL,WL
   1468	039E  74 02		       JE    @K
   1469	03A0			     @K0:
   1470				       CLR   WH
1  1471	03A0  32 E4		       XOR    WH,WH
   1472	03A2			     @K:
   1473				       JMPS  @WPUSH
1  1474	03A2  EB 2A		       jmp   SHORT @WPUSH
   1475
   1476				     P_	_PLAVG				     ; ( +2/
1  1477				       ALIGN_ 0
2  1478				       IF ($-START+0) AND 1
2  1479				       NOP
2  1480				       @NOPSCNT	= @NOPSCNT+1
2  1481				       ENDIF
1  1482	03A4  90		       NOP
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 27
C4F.asm



1  1483	03A5			     _PLAVG:
1  1484				       org   $-1
   1485	03A4  03 5E 00		       ADD     TOP,[DSP]
   1486	03A7  89 5E 00		       MOV     [DSP],TOP
   1487				     PP_ _2DIV,@2DIV		   ; ( 2/
1  1488				       P_ _2DIV
2  1489				       ALIGN_ 0
3  1490				       IF ($-START+0) AND 1
3  1491				       NOP
3  1492				       @NOPSCNT	= @NOPSCNT+1
3  1493				       ENDIF
2  1494	03AA  90		       NOP
2  1495	03AB			     _2DIV:
2  1496				       org   $-1
1  1497	03AA			     @2DIV:
   1498	03AA  D1 DB		       RCR     TOP,1
   1499				       N_
1  1500	03AC  EB 26		       JMP SHORT   @NOP
   1501
   1502
   1503				     P_	_CSEG
1  1504				       ALIGN_ 0
2  1505				       IF ($-START+0) AND 1
2  1506				       NOP
2  1507				       @NOPSCNT	= @NOPSCNT+1
2  1508				       ENDIF
1  1509	03AE  90		       NOP
1  1510	03AF			     _CSEG:
1  1511				       org   $-1
   1512	03AE  0E		       PUSH    CS
   1513				     P_	_OVER
1  1514				       ALIGN_ 0
2  1515				       IF ($-START+0) AND 1
2  1516	03AF  90		       NOP
2  1517	      =0005		       @NOPSCNT	= @NOPSCNT+1
2  1518				       ENDIF
1  1519	03B0  90		       NOP
1  1520	03B1			     _OVER:
1  1521				       org   $-1
   1522	03B0  FF 76 00		       PUSH    [DSP]
   1523				       SKIPB
1  1524	03B3  3C		       DB    03CH
   1525				     P_	_SPLD
1  1526				       ALIGN_ 0
2  1527				       IF ($-START+0) AND 1
2  1528				       NOP
2  1529				       @NOPSCNT	= @NOPSCNT+1
2  1530				       ENDIF
1  1531	03B4  90		       NOP
1  1532	03B5			     _SPLD:
1  1533				       org   $-1
   1534	03B4  55		       PUSH    DSP
   1535				       SKIPB
1  1536	03B5  3C		       DB    03CH
   1537				     P_	_RPLD
1  1538				       ALIGN_ 0
2  1539				       IF ($-START+0) AND 1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 28
C4F.asm



2  1540				       NOP
2  1541				       @NOPSCNT	= @NOPSCNT+1
2  1542				       ENDIF
1  1543	03B6  90		       NOP
1  1544	03B7			     _RPLD:
1  1545				       org   $-1
   1546	03B6  54		       PUSH    RSP
   1547				       SKIPB
1  1548	03B7  3C		       DB    03CH
   1549				     P_	_DUP	       ; ( DUP
1  1550				       ALIGN_ 0
2  1551				       IF ($-START+0) AND 1
2  1552				       NOP
2  1553				       @NOPSCNT	= @NOPSCNT+1
2  1554				       ENDIF
1  1555	03B8  90		       NOP
1  1556	03B9			     _DUP:
1  1557				       org   $-1
   1558	03B8  53		       PUSH    TOP
   1559				     P_	_DZ0
1  1560				       ALIGN_ 0
2  1561				       IF ($-START+0) AND 1
2  1562	03B9  90		       NOP
2  1563	      =0006		       @NOPSCNT	= @NOPSCNT+1
2  1564				       ENDIF
1  1565	03BA  90		       NOP
1  1566	03BB			     _DZ0:
1  1567				       org   $-1
   1568				     P_	_POP
1  1569				       ALIGN_ 0
2  1570				       IF ($-START+0) AND 1
2  1571				       NOP
2  1572				       @NOPSCNT	= @NOPSCNT+1
2  1573				       ENDIF
1  1574	03BA  90		       NOP
1  1575	03BB			     _POP:
1  1576				       org   $-1
   1577				       JMPS  @RPOP
1  1578	03BA  EB 09		       jmp   SHORT @RPOP
   1579
   1580				     P_	_DZ2
1  1581				       ALIGN_ 0
2  1582				       IF ($-START+0) AND 1
2  1583				       NOP
2  1584				       @NOPSCNT	= @NOPSCNT+1
2  1585				       ENDIF
1  1586	03BC  90		       NOP
1  1587	03BD			     _DZ2:
1  1588				       org   $-1
   1589	03BC  58		       POP     W
   1590	03BD  40		       INC     W
   1591	03BE  40		       INC     W
   1592				       SKIPB
1  1593	03BF  3C		       DB    03CH
   1594				     P_	_DZ1
1  1595				       ALIGN_ 0
2  1596				       IF ($-START+0) AND 1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 29
C4F.asm



2  1597				       NOP
2  1598				       @NOPSCNT	= @NOPSCNT+1
2  1599				       ENDIF
1  1600	03C0  90		       NOP
1  1601	03C1			     _DZ1:
1  1602				       org   $-1
   1603	03C0  58		       POP     W
   1604	03C1  40		       INC     W
   1605	03C2  40		       INC     W
   1606				       SKIPA
1  1607	03C3  3D		       DB    03DH
   1608				     P_	_ALD
1  1609				       ALIGN_ 0
2  1610				       IF ($-START+0) AND 1
2  1611				       NOP
2  1612				       @NOPSCNT	= @NOPSCNT+1
2  1613				       ENDIF
1  1614	03C4  90		       NOP
1  1615	03C5			     _ALD:
1  1616				       org   $-1
   1617	03C4  52		       PUSH    AR
   1618	03C5			     @RPOP:
   1619	03C5  58		       POP     W
   1620				       jMPS    @WPUSH
1  1621	03C6  EB 06		       jmp   SHORT @WPUSH
   1622
   1623				     P_	_RLDP		   ; (@R+
1  1624				       ALIGN_ 0
2  1625				       IF ($-START+0) AND 1
2  1626				       NOP
2  1627				       @NOPSCNT	= @NOPSCNT+1
2  1628				       ENDIF
1  1629	03C8  90		       NOP
1  1630	03C9			     _RLDP:
1  1631				       org   $-1
   1632	03C8  5F		       POP     WA
   1633	03C9  8B 05		       MOV     w,[WA]
   1634	03CB  47		       INC     WA
   1635	03CC			     @WPUSH1:
   1636	03CC  47		       INC     WA
   1637	03CD			     @_J:
   1638	03CD  57		       PUSH    WA
   1639
   1640				     PP_ @_,@WPUSH
1  1641				       P_ @_
2  1642				       ALIGN_ 0
3  1643				       IF ($-START+0) AND 1
3  1644				       NOP
3  1645				       @NOPSCNT	= @NOPSCNT+1
3  1646				       ENDIF
2  1647	03CE  90		       NOP
2  1648	03CF			     @_:
2  1649				       org   $-1
1  1650	03CE			     @WPUSH:
   1651	03CE  93		       XCHG    TOP,W
   1652				       X
1  1653	03CF  87 E5		       xchg  Rsp,DSP
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 30
C4F.asm



   1654				       TO_R    W
1  1655	03D1  50		       PUSH  W
   1656	03D2			     @SWPSTK:
   1657				       X
1  1658	03D2  87 E5		       xchg  Rsp,DSP
   1659				     PP_ _NOP,@NOP
1  1660				       P_ _NOP
2  1661				       ALIGN_ 0
3  1662				       IF ($-START+0) AND 1
3  1663				       NOP
3  1664				       @NOPSCNT	= @NOPSCNT+1
3  1665				       ENDIF
2  1666	03D4  90		       NOP
2  1667	03D5			     _NOP:
2  1668				       org   $-1
1  1669	03D4			     @NOP:
   1670	03D4  AD		       LODSW
   1671	03D5			     _@_DBG:
   1672	03D5  A8 01		       TEST    WL,1	   ; A8	01
   1673				       ;JMPS	_@JDBG
   1674	03D7			     @DBG2:
   1675	03D7  74 06		       JZ      @NEST
   1676	03D9  48		       DEC     W
   1677	03DA  FF E0		       JMP     W
   1678
   1679				     P_	_POSTX		    ; (|
1  1680				       ALIGN_ 0
2  1681				       IF ($-START+0) AND 1
2  1682				       NOP
2  1683				       @NOPSCNT	= @NOPSCNT+1
2  1684				       ENDIF
1  1685	03DC  90		       NOP
1  1686	03DD			     _POSTX:
1  1687				       org   $-1
   1688	03DC  AD		       LODSW
   1689				       SKIPA
1  1690	03DD  3D		       DB    03DH
   1691				     PP_ _EX,@EX	      ;	( EX
1  1692				       P_ _EX
2  1693				       ALIGN_ 0
3  1694				       IF ($-START+0) AND 1
3  1695				       NOP
3  1696				       @NOPSCNT	= @NOPSCNT+1
3  1697				       ENDIF
2  1698	03DE  90		       NOP
2  1699	03DF			     _EX:
2  1700				       org   $-1
1  1701	03DE			     @EX:
   1702	03DE  58		       POP     W
   1703	03DF			     @NEST:
   1704	03DF  96		       XCHG    IP,W
   1705	03E0			     @RPUSH:
   1706	03E0  50		       PUSH    W
   1707				       N_
1  1708	03E1  EB F1		       JMP SHORT   @NOP
   1709
   1710	03E3  E9 00F5		     _@JDBG: JMP  @BPDBG
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 31
C4F.asm



   1711
   1712				     ;-------------------------------------------
   1713				     ; CONTROL
   1714				     ;-------------------------------------------
   1715
   1716				     P_	_IFM	      ;	(IF-
1  1717				       ALIGN_ 0
2  1718				       IF ($-START+0) AND 1
2  1719				       NOP
2  1720				       @NOPSCNT	= @NOPSCNT+1
2  1721				       ENDIF
1  1722	03E6  90		       NOP
1  1723	03E7			     _IFM:
1  1724				       org   $-1
   1725				       JMPS    @IFM
1  1726	03E6  EB 05		       jmp   SHORT @IFM
   1727
   1728				     P_	_NEXT	     ; (NEXT
1  1729				       ALIGN_ 0
2  1730				       IF ($-START+0) AND 1
2  1731				       NOP
2  1732				       @NOPSCNT	= @NOPSCNT+1
2  1733				       ENDIF
1  1734	03E8  90		       NOP
1  1735	03E9			     _NEXT:
1  1736				       org   $-1
   1737	03E8  58		       POP     W
   1738	03E9  48		       DEC     W
   1739	03EA  50		       PUSH    W
   1740				       SKIPR   W
1  1741	      =MYCSEG:03EB	     MADR = $
1  1742	03EB  B8 0000		       mov   W,0
1  1743				       IF $-MADR-2
1  1744				       org   $-1
1  1745				       ENDIF
1  1746				       org   $-1
   1747
   1748				     P_	_MIF	      ;	(-IF
1  1749				       ALIGN_ 0
2  1750				       IF ($-START+0) AND 1
2  1751				       NOP
2  1752				       @NOPSCNT	= @NOPSCNT+1
2  1753				       ENDIF
1  1754	03EC  90		       NOP
1  1755	03ED			     _MIF:
1  1756				       org   $-1
   1757	03EC  43		       INC     TOP
   1758	03ED			     @IFM:
   1759	03ED  4B		       DEC     TOP
   1760	03EE  79 0C		       JNS     @JUMP
   1761				     P_	_SKIP
1  1762				       ALIGN_ 0
2  1763				       IF ($-START+0) AND 1
2  1764				       NOP
2  1765				       @NOPSCNT	= @NOPSCNT+1
2  1766				       ENDIF
1  1767	03F0  90		       NOP
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 32
C4F.asm



1  1768	03F1			     _SKIP:
1  1769				       org   $-1
   1770	03F0			     @SKIP:		     ; (SKIP
   1771	03F0  AD		       LODSW
   1772				       N_
1  1773	03F1  EB E1		       JMP SHORT   @NOP
   1774
   1775				     L_	_DUP_IF
1  1776				       ALIGN_  0
2  1777				       IF ($-START+0) AND 1
2  1778	03F3  90		       NOP
2  1779	      =0007		       @NOPSCNT	= @NOPSCNT+1
2  1780				       ENDIF
1  1781	03F4			     _DUP_IF:
   1782	03F4  03B9r		       DW _DUP
   1783				     LL_ _IF,__ADROPX
1  1784				       ALIGN_  0
2  1785				       IF ($-START+0) AND 1
2  1786				       NOP
2  1787				       @NOPSCNT	= @NOPSCNT+1
2  1788				       ENDIF
1  1789	03F6			     _IF:
1  1790	03F6  0499r		       DW __ADROPX
   1791				       Z?      W
1  1792	03F8  0B C0		       OR    W,W
   1793	03FA			     @IFZ:
   1794	03FA  75 F4		       JNZ     @SKIP
   1795
   1796				     P_	__POINT
1  1797				       ALIGN_ 0
2  1798				       IF ($-START+0) AND 1
2  1799				       NOP
2  1800				       @NOPSCNT	= @NOPSCNT+1
2  1801				       ENDIF
1  1802	03FC  90		       NOP
1  1803	03FD			     __POINT:
1  1804				       org   $-1
   1805				     P_	__defer
1  1806				       ALIGN_ 0
2  1807				       IF ($-START+0) AND 1
2  1808				       NOP
2  1809				       @NOPSCNT	= @NOPSCNT+1
2  1810				       ENDIF
1  1811	03FC  90		       NOP
1  1812	03FD			     __defer:
1  1813				       org   $-1
   1814				     P_	_JUMP		   ; (JUMP
1  1815				       ALIGN_ 0
2  1816				       IF ($-START+0) AND 1
2  1817				       NOP
2  1818				       @NOPSCNT	= @NOPSCNT+1
2  1819				       ENDIF
1  1820	03FC  90		       NOP
1  1821	03FD			     _JUMP:
1  1822				       org   $-1
   1823	03FC			     @JUMP:
   1824	03FC  8B 34		       MOV     IP,[IP]
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 33
C4F.asm



   1825				       N_
1  1826	03FE  EB D4		       JMP SHORT   @NOP
   1827
   1828				     P_	_RDROP	    ; RDROP
1  1829				       ALIGN_ 0
2  1830				       IF ($-START+0) AND 1
2  1831				       NOP
2  1832				       @NOPSCNT	= @NOPSCNT+1
2  1833				       ENDIF
1  1834	0400  90		       NOP
1  1835	0401			     _RDROP:
1  1836				       org   $-1
   1837	0400  58		       POP     W
   1838				       SKIPB
1  1839	0401  3C		       DB    03CH
   1840				     P_	_BP
1  1841				       ALIGN_ 0
2  1842				       IF ($-START+0) AND 1
2  1843				       NOP
2  1844				       @NOPSCNT	= @NOPSCNT+1
2  1845				       ENDIF
1  1846	0402  90		       NOP
1  1847	0403			     _BP:
1  1848				       org   $-1
   1849	0402  CC			 INT 3
   1850				       SKIPA
1  1851	0403  3D		       DB    03DH
   1852				     P_	_LD
1  1853				       ALIGN_ 0
2  1854				       IF ($-START+0) AND 1
2  1855				       NOP
2  1856				       @NOPSCNT	= @NOPSCNT+1
2  1857				       ENDIF
1  1858	0404  90		       NOP
1  1859	0405			     _LD:
1  1860				       org   $-1
   1861	0404  8B 1F		       MOV   TOP,[TOP]
   1862				       N_
1  1863	0406  EB CC		       JMP SHORT   @NOP
   1864
   1865				     P_	_XR		; ( XR	XCHG
1  1866				       ALIGN_ 0
2  1867				       IF ($-START+0) AND 1
2  1868				       NOP
2  1869				       @NOPSCNT	= @NOPSCNT+1
2  1870				       ENDIF
1  1871	0408  90		       NOP
1  1872	0409			     _XR:
1  1873				       org   $-1
   1874	0408  58		       POP     W
   1875	0409  93		       XCHG    TOP,W
   1876				       JMPS    @RPUSH
1  1877	040A  EB D4		       jmp   SHORT @RPUSH
   1878
   1879				     P_	_XA	       ; ( XA
1  1880				       ALIGN_ 0
2  1881				       IF ($-START+0) AND 1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 34
C4F.asm



2  1882				       NOP
2  1883				       @NOPSCNT	= @NOPSCNT+1
2  1884				       ENDIF
1  1885	040C  90		       NOP
1  1886	040D			     _XA:
1  1887				       org   $-1
   1888	040C  58		       POP     W
   1889	040D  92		       XCHG    W,AR
   1890				       JMPS    @RPUSH
1  1891	040E  EB D0		       jmp   SHORT @RPUSH
   1892
   1893				     P_	_NEQ
1  1894				       ALIGN_ 0
2  1895				       IF ($-START+0) AND 1
2  1896				       NOP
2  1897				       @NOPSCNT	= @NOPSCNT+1
2  1898				       ENDIF
1  1899	0410  90		       NOP
1  1900	0411			     _NEQ:
1  1901				       org   $-1
   1902				     P_	_XOR
1  1903				       ALIGN_ 0
2  1904				       IF ($-START+0) AND 1
2  1905				       NOP
2  1906				       @NOPSCNT	= @NOPSCNT+1
2  1907				       ENDIF
1  1908	0410  90		       NOP
1  1909	0411			     _XOR:
1  1910				       org   $-1
   1911	0410  33 5E 00		       XOR   TOP,[DSP]
   1912				     PP_ _NIP,@NIP
1  1913				       P_ _NIP
2  1914				       ALIGN_ 0
3  1915				       IF ($-START+0) AND 1
3  1916	0413  90		       NOP
3  1917	      =0008		       @NOPSCNT	= @NOPSCNT+1
3  1918				       ENDIF
2  1919	0414  90		       NOP
2  1920	0415			     _NIP:
2  1921				       org   $-1
1  1922	0414			     @NIP:
   1923				       NIP_
1  1924				       R2P_ DSP	; LEA  DSP,[DSP+2]
2  1925	0414  45		       INC   DSP
2  1926	0415  45		       INC   DSP
   1927				       N_
1  1928	0416  EB BC		       JMP SHORT   @NOP
   1929
   1930				     L_	_@EXEC
1  1931				       ALIGN_  0
2  1932				       IF ($-START+0) AND 1
2  1933				       NOP
2  1934				       @NOPSCNT	= @NOPSCNT+1
2  1935				       ENDIF
1  1936	0418			     _@EXEC:
   1937	0418  0405r		       DW _LD
   1938				     LL_ _EXEC,__ADROPX	   ;  TEST    WL,1    ;	SKIP JMP TO DBG
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 35
C4F.asm



1  1939				       ALIGN_  0
2  1940				       IF ($-START+0) AND 1
2  1941				       NOP
2  1942				       @NOPSCNT	= @NOPSCNT+1
2  1943				       ENDIF
1  1944	041A			     _EXEC:
1  1945	041A  0499r		       DW __ADROPX
   1946				       JMPS  _@_DBG
1  1947	041C  EB B7		       jmp   SHORT _@_DBG
   1948
   1949				     P_	_ASTR		 ; ("SKIP  "
1  1950				       ALIGN_ 0
2  1951				       IF ($-START+0) AND 1
2  1952				       NOP
2  1953				       @NOPSCNT	= @NOPSCNT+1
2  1954				       ENDIF
1  1955	041E  90		       NOP
1  1956	041F			     _ASTR:
1  1957				       org   $-1
   1958	041E  5F		       POP	     WA
   1959	041F  8B 05		       MOV   w,[WA]
   1960	0421  B4 00		       mov   wh,0
   1961	0423  03 C7		       ADD     w,WA
   1962	0425  0C 01		       OR      wl,1	   ; MAKE CNT ODD
   1963	0427  97		       XCHG    w,WA
   1964				       JMPS   @WPUSH1
1  1965	0428  EB A2		       jmp   SHORT @WPUSH1
   1966
   1967				      P_ _CRLDP			; ( C@R+
1  1968				       ALIGN_ 0
2  1969				       IF ($-START+0) AND 1
2  1970				       NOP
2  1971				       @NOPSCNT	= @NOPSCNT+1
2  1972				       ENDIF
1  1973	042A  90		       NOP
1  1974	042B			     _CRLDP:
1  1975				       org   $-1
   1976	042A  5F			     POP	       WA
   1977	042B  8B 05		       MOV     w,[WA]
   1978	042D  B4 00		       mov     wh,0
   1979				       JMPS    @WPUSH1
1  1980	042F  EB 9B		       jmp   SHORT @WPUSH1
   1981	0431			     @DBG:
   1982	0431  C3		       RET
   1983
   1984				     P_	_J		 ; ( J
1  1985				       ALIGN_ 0
2  1986				       IF ($-START+0) AND 1
2  1987				       NOP
2  1988				       @NOPSCNT	= @NOPSCNT+1
2  1989				       ENDIF
1  1990	0432  90		       NOP
1  1991	0433			     _J:
1  1992				       org   $-1
   1993	0432  5F		       POP     WA
   1994	0433  58		       POP     W
   1995	0434  50		       PUSH    W
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 36
C4F.asm



   1996				       JMPS    @_J
1  1997	0435  EB 96		       jmp   SHORT @_J
   1998
   1999				     L_	_WITHIN
1  2000				       ALIGN_  0
2  2001				       IF ($-START+0) AND 1
2  2002	0437  90		       NOP
2  2003	      =0009		       @NOPSCNT	= @NOPSCNT+1
2  2004				       ENDIF
1  2005	0438			     _WITHIN:
   2006	0438  0270r 0379r 0272r	  +    DW _OVERM,_PUSH,_SUB,_POP
   2007	      03BBr
   2008				     L_	_ULESS
1  2009				       ALIGN_  0
2  2010				       IF ($-START+0) AND 1
2  2011				       NOP
2  2012				       @NOPSCNT	= @NOPSCNT+1
2  2013				       ENDIF
1  2014	0440			     _ULESS:
   2015	0440  0499r		       DW __ADROPX
   2016	0442  2B D8		       SUB   TOP,W
   2017				       JMPS  @FLAG
1  2018	0444  EB 06		       jmp   SHORT @FLAG
   2019
   2020				     ;L_ _OC@EQ
   2021				     ;	  DW	_OVER,_C@
   2022				     ;	  DW	_RLDP
   2023				     ;L_ _EQ
   2024				     ;	  DW	_XOR,__ARET
   2025				     P_	_ZEQ
1  2026				       ALIGN_ 0
2  2027				       IF ($-START+0) AND 1
2  2028				       NOP
2  2029				       @NOPSCNT	= @NOPSCNT+1
2  2030				       ENDIF
1  2031	0446  90		       NOP
1  2032	0447			     _ZEQ:
1  2033				       org   $-1
   2034	0446  F7 DB			 NEG	 TOP
   2035	0448  F5			 cmc
   2036					 SKIPR	 W
1  2037	      =MYCSEG:0449	     MADR = $
1  2038	0449  B8 0000		       mov   W,0
1  2039				       IF $-MADR-2
1  2040				       org   $-1
1  2041				       ENDIF
1  2042				       org   $-1
   2043				     P_	_0LESS
1  2044				       ALIGN_ 0
2  2045				       IF ($-START+0) AND 1
2  2046				       NOP
2  2047				       @NOPSCNT	= @NOPSCNT+1
2  2048				       ENDIF
1  2049	044A  90		       NOP
1  2050	044B			     _0LESS:
1  2051				       org   $-1
   2052	044A  D1 E3			 SHL	 TOP,1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 37
C4F.asm



   2053				     PP_ _ZERO,@FLAG
1  2054				       P_ _ZERO
2  2055				       ALIGN_ 0
3  2056				       IF ($-START+0) AND 1
3  2057				       NOP
3  2058				       @NOPSCNT	= @NOPSCNT+1
3  2059				       ENDIF
2  2060	044C  90		       NOP
2  2061	044D			     _ZERO:
2  2062				       org   $-1
1  2063	044C			     @FLAG:
   2064	044C  1B DB			 SBB	 TOP,TOP
   2065					 JMPS	 @NOP4
1  2066	044E  EB 1F		       jmp   SHORT @NOP4
   2067
   2068				     ; -----------  ADDRESS INDEPENDANT	CODE -------------
   2069
   2070				     P_	_PMUL	       ; ( +*
1  2071				       ALIGN_ 0
2  2072				       IF ($-START+0) AND 1
2  2073				       NOP
2  2074				       @NOPSCNT	= @NOPSCNT+1
2  2075				       ENDIF
1  2076	0450  90		       NOP
1  2077	0451			     _PMUL:
1  2078				       org   $-1
   2079	0450  F6 46 00 01	       TEST    PB [DSP],1
   2080	0454  74 02		       JZ      @D2DIV
   2081	0456  03 DA		       ADD     TOP,AR
   2082				     PP_ _D2DIV,@D2DIV
1  2083				       P_ _D2DIV
2  2084				       ALIGN_ 0
3  2085				       IF ($-START+0) AND 1
3  2086				       NOP
3  2087				       @NOPSCNT	= @NOPSCNT+1
3  2088				       ENDIF
2  2089	0458  90		       NOP
2  2090	0459			     _D2DIV:
2  2091				       org   $-1
1  2092	0458			     @D2DIV:
   2093	0458  D1 DB		       RCR     TOP,1
   2094	045A  D1 5E 00		       RCR     PW [DSP],1
   2095	045D  E9 FF74		       JMP     @NOP
   2096
   2097				     P_	_SDIV	       ; ( -/
1  2098				       ALIGN_ 0
2  2099				       IF ($-START+0) AND 1
2  2100				       NOP
2  2101				       @NOPSCNT	= @NOPSCNT+1
2  2102				       ENDIF
1  2103	0460  90		       NOP
1  2104	0461			     _SDIV:
1  2105				       org   $-1
   2106	0460  D1 66 00		       SHL     PW [DSP],1
   2107	0463  D1 D3		       RCL     TOP,1
   2108	0465  3B DA		       CMP     TOP,AR
   2109	0467  72 06		       JB      @NOP4
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 38
C4F.asm



   2110	0469  2B DA		       SUB     TOP,AR
   2111				     P_	_U1P
1  2112				       ALIGN_ 0
2  2113				       IF ($-START+0) AND 1
2  2114	046B  90		       NOP
2  2115	      =000A		       @NOPSCNT	= @NOPSCNT+1
2  2116				       ENDIF
1  2117	046C  90		       NOP
1  2118	046D			     _U1P:
1  2119				       org   $-1
   2120	046C  FF 46 00		       INC     PW [DSP]
   2121	046F			     @NOP4:
   2122	046F  E9 FF62		       JMP     @NOP
   2123
   2124				     P_	_MROT
1  2125				       ALIGN_ 0
2  2126				       IF ($-START+0) AND 1
2  2127				       NOP
2  2128				       @NOPSCNT	= @NOPSCNT+1
2  2129				       ENDIF
1  2130	0472  90		       NOP
1  2131	0473			     _MROT:
1  2132				       org   $-1
   2133	0472  87 5E 02		       XCHG  TOP,[DSP+2]
   2134				     P_	_SWAP
1  2135				       ALIGN_ 0
2  2136				       IF ($-START+0) AND 1
2  2137	0475  90		       NOP
2  2138	      =000B		       @NOPSCNT	= @NOPSCNT+1
2  2139				       ENDIF
1  2140	0476  90		       NOP
1  2141	0477			     _SWAP:
1  2142				       org   $-1
   2143	0476  87 5E 00			     XCHG    TOP,[DSP]
   2144				       SKIPA
1  2145	0479  3D		       DB    03DH
   2146				     P_	_2MUL		    ; (	2*
1  2147				       ALIGN_ 0
2  2148				       IF ($-START+0) AND 1
2  2149				       NOP
2  2150				       @NOPSCNT	= @NOPSCNT+1
2  2151				       ENDIF
1  2152	047A  90		       NOP
1  2153	047B			     _2MUL:
1  2154				       org   $-1
   2155	047A  D1 E3		       SHL     TOP,1
   2156				       JMPS    @NOP4
1  2157	047C  EB F1		       jmp   SHORT @NOP4
   2158
   2159				     L_	_B?
1  2160				       ALIGN_  0
2  2161				       IF ($-START+0) AND 1
2  2162				       NOP
2  2163				       @NOPSCNT	= @NOPSCNT+1
2  2164				       ENDIF
1  2165	047E			     _B?:
   2166	047E  0379r		       DW _PUSH
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 39
C4F.asm



   2167				     L_	_BSCN
1  2168				       ALIGN_  0
2  2169				       IF ($-START+0) AND 1
2  2170				       NOP
2  2171				       @NOPSCNT	= @NOPSCNT+1
2  2172				       ENDIF
1  2173	0480			     _BSCN:
   2174	0480  0409r 0367r 03BBr	       DW _XR,_CSTR,_POP
   2175				     L_	_BSCAN
1  2176				       ALIGN_  0
2  2177				       IF ($-START+0) AND 1
2  2178				       NOP
2  2179				       @NOPSCNT	= @NOPSCNT+1
2  2180				       ENDIF
1  2181	0486			     _BSCAN:
   2182	0486  02D3r		       DW      __SCANER
   2183	0488  F2> AE		       REPNE   SCASB
   2184	048A  C3		       RET
   2185
   2186				     L_	_WSCN
1  2187				       ALIGN_  0
2  2188				       IF ($-START+0) AND 1
2  2189	048B  90		       NOP
2  2190	      =000C		       @NOPSCNT	= @NOPSCNT+1
2  2191				       ENDIF
1  2192	048C			     _WSCN:
   2193	048C  0409r 0393r 03BBr	       DW _XR,_WSTR,_POP
   2194				     L_	_WSCAN
1  2195				       ALIGN_  0
2  2196				       IF ($-START+0) AND 1
2  2197				       NOP
2  2198				       @NOPSCNT	= @NOPSCNT+1
2  2199				       ENDIF
1  2200	0492			     _WSCAN:
   2201	0492  02D3r		       DW      __SCANER
   2202	0494  F2> AF		       REPNE   SCASW
   2203	0496  C3		       RET
   2204
   2205				     P_	__ADROPX
1  2206				       ALIGN_ 0
2  2207				       IF ($-START+0) AND 1
2  2208	0497  90		       NOP
2  2209	      =000D		       @NOPSCNT	= @NOPSCNT+1
2  2210				       ENDIF
1  2211	0498  90		       NOP
1  2212	0499			     __ADROPX:
1  2213				       org   $-1
   2214	0498  93		       XCHG  W,TOP
   2215				       D_TO  top
1  2216				       X
2  2217	0499  87 E5		       xchg  Rsp,DSP
1  2218	049B  5B		       POP   top
1  2219				       X
2  2220	049C  87 E5		       xchg  Rsp,DSP
   2221				     P_	__ARET
1  2222				       ALIGN_ 0
2  2223				       IF ($-START+0) AND 1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 40
C4F.asm



2  2224				       NOP
2  2225				       @NOPSCNT	= @NOPSCNT+1
2  2226				       ENDIF
1  2227	049E  90		       NOP
1  2228	049F			     __ARET:
1  2229				       org   $-1
   2230	049E  5F		       POP   WA
   2231	049F  87 FE		       XCHG  WA,IP
   2232	04A1  FF E7		       JMP   WA
   2233
   2234				     P_	__PAR
1  2235				       ALIGN_ 0
2  2236				       IF ($-START+0) AND 1
2  2237	04A3  90		       NOP
2  2238	      =000E		       @NOPSCNT	= @NOPSCNT+1
2  2239				       ENDIF
1  2240	04A4  90		       NOP
1  2241	04A5			     __PAR:
1  2242				       org   $-1
   2243	04A4  52		       PUSH  AR
   2244				       X
1  2245	04A5  87 E5		       xchg  Rsp,DSP
   2246	04A7  53		       PUSH  TOP
   2247				       CLR   CX
1  2248	04A8  33 C9		       XOR    CX,CX
   2249				     P_	__ASM
1  2250				       ALIGN_ 0
2  2251				       IF ($-START+0) AND 1
2  2252				       NOP
2  2253				       @NOPSCNT	= @NOPSCNT+1
2  2254				       ENDIF
1  2255	04AA  90		       NOP
1  2256	04AB			     __ASM:
1  2257				       org   $-1
   2258	04AA  FF E6		       JMP   IP
   2259
   2260				     ; vvvvvvvvvv----------- MINI DEBUGGER -------------vvvvvvvvvvv
   2261
   2262				     LL_ _WFIND,_T
1  2263				       ALIGN_  0
2  2264				       IF ($-START+0) AND 1
2  2265				       NOP
2  2266				       @NOPSCNT	= @NOPSCNT+1
2  2267				       ENDIF
1  2268	04AC			     _WFIND:
1  2269	04AC  0164r		       DW _T
   2270				     LL_ _WFND,__PAR	      ;_STREQU
1  2271				       ALIGN_  0
2  2272				       IF ($-START+0) AND 1
2  2273				       NOP
2  2274				       @NOPSCNT	= @NOPSCNT+1
2  2275				       ENDIF
1  2276	04AE			     _WFND:
1  2277	04AE  04A5r		       DW __PAR
   2278	04B0  E8 FD4F		       CALL  @METHOD
   2279	04B3  3B 75 FC		       CMP   SI,[DI-4]
   2280	04B6  C3		       RET
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 41
C4F.asm



   2281
   2282				       ALIGN_ 0
1  2283				       IF ($-START+0) AND 1
1  2284	04B7  90		       NOP
1  2285	      =000F		       @NOPSCNT	= @NOPSCNT+1
1  2286				       ENDIF
   2287	04B8  03DFr		       DW _EX
   2288				     LL_ _TROFF,_CALL_IP
1  2289				       ALIGN_  0
2  2290				       IF ($-START+0) AND 1
2  2291				       NOP
2  2292				       @NOPSCNT	= @NOPSCNT+1
2  2293				       ENDIF
1  2294	04BA			     _TROFF:
1  2295	04BA  02EBr		       DW _CALL_IP
   2296	04BC			     @DBG_OFF:
   2297				       SKIPR   DI
1  2298	      =MYCSEG:04BC	     MADR = $
1  2299	04BC  BF 0000		       mov   DI,0
1  2300				       IF $-MADR-2
1  2301				       org   $-1
1  2302				       ENDIF
1  2303				       org   $-1
   2304	04BD  A8 01		       TEST    WL,1
   2305	04BF			     @DBG_:
   2306	04BF  87 3E 03D5r	       XCHG    DI,PW _@_DBG
   2307	04C3  C3		       RET
   2308
   2309				     P_	_TROFF?
1  2310				       ALIGN_ 0
2  2311				       IF ($-START+0) AND 1
2  2312				       NOP
2  2313				       @NOPSCNT	= @NOPSCNT+1
2  2314				       ENDIF
1  2315	04C4  90		       NOP
1  2316	04C5			     _TROFF?:
1  2317				       org   $-1
   2318	04C4  E8 FFF5		       CALL    @DBG_OFF
   2319	04C7  81 FF 3039	       CMP     WA,12345
   2320				       org     $-2
   2321	04C9  A8 01		       TEST    WL,1
   2322	04CB  E9 FF2C		       JMP     @IFZ
   2323
   2324				     L_	_TRONM?
1  2325				       ALIGN_  0
2  2326				       IF ($-START+0) AND 1
2  2327				       NOP
2  2328				       @NOPSCNT	= @NOPSCNT+1
2  2329				       ENDIF
1  2330	04CE			     _TRONM?:
   2331	04CE  04C5r 01E8r	       DW _TROFF?,_NOOP
   2332	04D2  03DFr		       DW _EX
   2333				     LL_ _TRON,_CALL_IP
1  2334				       ALIGN_  0
2  2335				       IF ($-START+0) AND 1
2  2336				       NOP
2  2337				       @NOPSCNT	= @NOPSCNT+1
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 42
C4F.asm



2  2338				       ENDIF
1  2339	04D4			     _TRON:
1  2340	04D4  02EBr		       DW _CALL_IP
   2341	04D6			     @DBG_ON:
   2342				       SKIPR   DI      ;  EB 0C
1  2343	      =MYCSEG:04D6	     MADR = $
1  2344	04D6  BF 0000		       mov   DI,0
1  2345				       IF $-MADR-2
1  2346				       org   $-1
1  2347				       ENDIF
1  2348				       org   $-1
   2349	04D7  EB 0C		       DB      0EBH,_@JDBG-@DBG2
   2350				       JMPS    @DBG_
1  2351	04D9  EB E4		       jmp   SHORT @DBG_
   2352
   2353					 ;ALIGN_ 0
   2354	04DB			     @BPDBG:
   2355	04DB  50		       PUSH    AX
   2356	04DC  E8 FFDD		       CALL    @DBG_OFF
   2357	04DF  E8 FEFC		       CALL    @EX
   2358	04E2  03FDr		       DW      _JUMP
   2359	04E4  03D5r 0399r 0499r	     _BPDBG    DW _NOP,_BK,__ADROPX
   2360	04EA  3C 53		       CMP     AL,'S'
   2361	04EC  74 03		       JE      @DBHE
   2362	04EE  E8 FFE5		       CALL    @DBG_ON
   2363	04F1			     @DBHE:
   2364	04F1  58		       POP     AX
   2365	04F2  A8 01		       TEST    AL,1
   2366	04F4  E9 FEE0		       JMP     @DBG2
   2367
   2368					 ALIGN_	0
1  2369				       IF ($-START+0) AND 1
1  2370	04F7  90		       NOP
1  2371	      =0010		       @NOPSCNT	= @NOPSCNT+1
1  2372				       ENDIF
   2373
   2374				     ;	DB "GAGA"
   2375
   2376
   2377				     ;freemem:
   2378				     ;	DW ENDMEM-FREEMEM-2
   2379				     ;;INCLUDE NF9_1.IC1
   2380				     ;	ENTRY_	_ENTRY,'=:'
   2381				     ;	ENTRY_	0,''
   2382				     ;EndMem:
   2383
   2384	04F8			     MyCseg  ends
   2385					     end  Start
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 43
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??0000			Byte   MYCSEG:0256		   648	#650
??DATE			Text   "10/15/21"
??FILENAME		Text   "C4F	"
??TIME			Text   "18:31:17"
??VERSION		Number 040A
@1M			Near   MYCSEG:02C1		   #923	 937
@1P			Near   MYCSEG:02BB		   #898	 912
@2DIV			Near   MYCSEG:03AA		   #1497
@@1			Near   MYCSEG:02E3		   1012	 #1014
@@SKIPX			Near   MYCSEG:032F		   1136	 1137  1139  #1142
@@WEX			Near   MYCSEG:0338		   1144	 1146  #1148
@ADDX			Word   MYCSEG:0276		   440	676  #738
@BPDBG			Near   MYCSEG:04DB		   1710	 #2354
@CPU			Text   0101H
@CURSEG			Text   MYCSEG			   #191
@D2DIV			Near   MYCSEG:0458		   2080	 #2092
@DBG			Near   MYCSEG:0431		   #1981
@DBG2			Near   MYCSEG:03D7		   #1674  2349	2366
@DBG_			Near   MYCSEG:04BF		   #2305  2351
@DBG_OFF		Near   MYCSEG:04BC		   249	#2296  2318  2356
@DBG_ON			Near   MYCSEG:04D6		   #2341  2362
@DBHE			Near   MYCSEG:04F1		   2361	 #2363
@DROP			Near   MYCSEG:0379		   1178	 1200  1240  1255  1271	 1287  1328  #1349
@DROPX			Near   MYCSEG:0351		   1165	 #1237	1253
@DROPZ			Near   MYCSEG:037B		   #1352
@EV			Word   MYCSEG:01BE		   #440	 442
@EX			Near   MYCSEG:03DE		   #1701  2357
@FILENAME		Text   C4F
@FLAG			Near   MYCSEG:044C		   2018	 #2063
@FND			Near   MYCSEG:0205		   #540	 549
@IFM			Near   MYCSEG:03ED		   1726	 #1758
@IFZ			Near   MYCSEG:03FA		   #1793  2322
@INT			Number MYCSEG:030A		   1105	 #1109
@JUMP			Near   MYCSEG:03FC		   1760	 #1823
@K			Near   MYCSEG:03A2		   1468	 #1472
@K0			Near   MYCSEG:03A0		   1301	 #1469
@LPAR			Word   MYCSEG:01B2		   361	#407
@MAINLP			Word   MYCSEG:011A		   #263	 265
@METHOD			Near   MYCSEG:0202		   535	#538  2278
@MPUSH			Near   MYCSEG:024B		   #618
@NEST			Near   MYCSEG:03DF		   1675	 #1703
@NIP			Near   MYCSEG:0414		   #1922
@NOP			Near   MYCSEG:03D4		   1029	 1388  1500  #1669  1708  1773	1826  1863  1928  2095	2122
@NOP3			Near   MYCSEG:02E7		   875	901  926  #1028
@NOP4			Near   MYCSEG:046F		   2066	 2109  #2121  2157
@NOPSCNT		Number 0010			   #96	563  #563  1120	 #1120	1307  #1307  1381  #1381  1517	#1517	  +
							   1563	 #1563	1779  #1779  1917  #1917  2003	#2003  2115  #2115  2138  +
							   #2138  2190	#2190  2209  #2209  2238  #2238	 2285  #2285  2371  #2371
@PARX			Near   MYCSEG:033D		   557	1114  #1151
@PARX1			Near   MYCSEG:0220		   #556	 585  621
@PX			Word   MYCSEG:01E4		   471	#476
@RET			Near   MYCSEG:02E6		   261	990  #1026  1042  1067	1092
@RPOP			Near   MYCSEG:03C5		   1578	 #1618
@RPUSH			Near   MYCSEG:03E0		   #1705  1877	1891
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 44
Symbol Table



@SKIP			Near   MYCSEG:03F0		   #1770  1794
@SWPSTK			Near   MYCSEG:03D2		   1356	 #1656
@TBUF			Number FDFA			   #209	 287
@TIB			Number FF7E			   #203	 285
@VOCTOP			Number E000			   #230	 289  322
@WORDSIZE		Text   2			   #191
@WPUSH			Near   MYCSEG:03CE		   1437	 1452  1474  1621  #1650
@WPUSH1			Near   MYCSEG:03CC		   #1635  1965	1980
@_			Near   MYCSEG:03CF		   #1648
@_J			Near   MYCSEG:03CD		   #1637  1997
AR			Number DX			   #181	 1154  1189  1617  1889	 2081  2108  2110  2243
AT_			Number -0004			   #15
DSP			Number BP			   #180	 182  248  1002	 1006  1153  1351  1485	 1486  1522  1534  1653	  +
							   1658	 1911  1925  1926  2079	 2094  2106  2120  2133	 2143  2217  2220 +
							   2245
IP			Number SI			   #178	 958  988  1010	 1027  1040  1065  1078	 1090  1211  1224  1238	  +
							   1338	 1338  1410  1435  1704	 1824  1824  2231  2258
MADR			Number MYCSEG:04D6		   #197	 202  #202  203	 205  #205  206	 208  #208  209	 211  #211  212	  +
							   214	#214  215  217	#217  218  220	#220  221  223	#223  224  226	  +
							   #226	 227  229  #229	 230  #1741  1743  #2037  2039	#2298  2300  #2343+
							   2345
NXT			Number [BP]			   #182
PB			Text   byte  ptr		   #12	583  1105  2079
PD			Text   dword ptr		   #10
PW			Text   word  ptr		   #11	1176  1326  2094  2106	2120  2306
RSP			Number SP			   #179	 260  1002  1006  1153	1351  1546  1653  1658	2217  2220  2245
START			Byte   MYCSEG:0100		   #199	 241  253  271	301  313  325  367  380	 392  401  411	419  427  +
							   435	449  457  465  479  487	 496  504  513	521  529  561  570  589	  +
							   597	605  625  633  641  655	 663  671  684	692  701  709  717  725	  +
							   733	742  750  758  767  776	 784  793  803	812  820  829  837  845	  +
							   855	865  879  890  904  915	 929  941  951	961  971  981  994  1019  +
							   1033	 1046  1058  1071  1083	 1098  1118  1127  1157	 1169  1182  1192 +
							   1204	 1216  1229  1244  1259	 1275  1291  1305  1319	 1331  1341  1360 +
							   1369	 1379  1392  1403  1415	 1427  1441  1456  1478	 1490  1505  1515 +
							   1527	 1539  1551  1561  1570	 1582  1596  1610  1625	 1643  1662  1681 +
							   1694	 1718  1730  1750  1763	 1777  1785  1798  1807	 1816  1830  1842 +
							   1854	 1867  1881  1895  1904	 1915  1932  1940  1951	 1969  1986  2001 +
							   2010	 2027  2045  2056  2072	 2085  2099  2113  2126	 2136  2148  2161 +
							   2169	 2177  2188  2196  2207	 2223  2236  2251  2264	 2272  2283  2290 +
							   2311	 2326  2335  2369  2385
TOP			Number BX			   #175	 852  886  887	897  899  922  924  948	 958  968  978	988  1003 +
							   1007	 1011  1013  1016  1065	 1090  1176  1189  1224	 1236  1252  1252 +
							   1267	 1283  1298  1299  1312	 1326  1348  1354  1366	 1376  1386  1448 +
							   1449	 1450  1485  1486  1498	 1558  1651  1757  1759	 1861  1861  1875 +
							   1911	 2016  2034  2052  2064	 2064  2081  2093  2107	 2108  2110  2133 +
							   2143	 2155  2214  2218  2246
TOPH			Number BH			   #177	 852  862  873	873
TOPL			Number BL			   #176	 862
TO_			Number -0002			   #14	372  385  406  470
VAL_			Number 0002			   #16
W			Number AX			   #186	 1053  1267  1283  1366	 1410  1422  1448  1464	 1464  1589  1590 +
							   1591	 1603  1604  1605  1619	 1633  1651  1655  1676	 1677  1702  1704 +
							   1706	 1737  1738  1739  1742	 1792  1792  1837  1874	 1875  1888  1889 +
							   1959	 1961  1963  1977  1994	 1995  2016  2038  2214
WA			Number DI			   #184	 1266  1269  1282  1285	 1632  1633  1634  1636	 1638  1958  1959 +
							   1961	 1963  1976  1977  1993	 2230  2231  2232  2319
WH			Number AH			   #188	 1471  1471  1960  1978
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 45
Symbol Table



WL			Number AL			   #187	 1298  1467  1467  1672	 1962  2304  2321
XFND?			Near   MYCSEG:021E		   545	#554
_0			Word   MYCSEG:014A		   #293	 660  789
_0LESS			Near   MYCSEG:044B		   #2050
_0X			Near   MYCSEG:0355		   #1249
_1M			Near   MYCSEG:02C5		   #934
_1P			Near   MYCSEG:02BF		   706	799  #909
_2DIV			Near   MYCSEG:03AB		   #1495
_2M			Near   MYCSEG:02C1		   808	#920
_2MUL			Near   MYCSEG:047B		   #2153
_2P			Near   MYCSEG:02BB		   484	#895
_2PX			Near   MYCSEG:01E6		   #483
_4P			Near   MYCSEG:02B9		   501	#884
_5ARY			Near   MYCSEG:02C9		   #956
_??			Near   MYCSEG:0252		   #645
_@COMMA			Near   MYCSEG:0278		   280	#746
_@COMPNUM		Word   MYCSEG:012E		   #279
_@EVAL			Near   MYCSEG:01BE		   #439
_@EXEC			Near   MYCSEG:0418		   278	442  #1936
_@FIB			Number FEFC			   #206
_@HERE			Word   MYCSEG:0288		   #781
_@JDBG			Near   MYCSEG:03E3		   #1710  2349
_@MACADR		Number F000			   #227
_@MACTOP		Number F9D0			   #224
_@NUMBER		Word   MYCSEG:012A		   #277
_@PARSE			Word   MYCSEG:0316		   #1123
_@R_BTM			Number FBF0			   #215
_@R_TOP			Number FDF0			   #212	 260
_@SAME			Word   MYCSEG:028E		   #798
_@SEMICO		Word   MYCSEG:01AE		   #397
_@S_BTM			Number F9E0			   #221
_@S_TOP			Number FBE0			   #218	 248
_@TIZ			Word   MYCSEG:01BC		   #432
_@_ABINI		Word   MYCSEG:01AA		   #386
_@_ACCEPT		Word   MYCSEG:011E		   #264
_@_DBG			Near   MYCSEG:03D5		   #1671  1947	2306
_@_ERR			Word   MYCSEG:0264		   #678
_@_INI			Near   MYCSEG:019C		   356	#373
_@_OK			Word   MYCSEG:0122		   #265
_ABORT			Near   MYCSEG:010D		   #246	 678
_ABORT0?		Near   MYCSEG:025A		   #667
_ABORT?			Near   MYCSEG:025C		   646	#675
_ADD			Near   MYCSEG:0274		   509	#729
_ADDX			Near   MYCSEG:0276		   #737
_AFT_NAME		Near   MYCSEG:01EC		   #508
_ALD			Near   MYCSEG:03C5		   #1615
_ALLERR			Near   MYCSEG:0258		   #659
_ANDX			Near   MYCSEG:02F9		   #1088
_AST			Near   MYCSEG:0347		   #1187
_ASTR			Near   MYCSEG:041F		   676	#1956
_B?			Near   MYCSEG:047E		   #2165
_BARY			Near   MYCSEG:02CF		   #986
_BE			Near   MYCSEG:036D		   #1310
_BK			Near   MYCSEG:0399		   #1461  2359
_BL			Word   MYCSEG:0146		   #291	 834
_BP			Near   MYCSEG:0403		   #1847
_BPDBG			Word   MYCSEG:04E4		   #2359
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 46
Symbol Table



_BSCAN			Near   MYCSEG:0486		   #2181
_BSCN			Near   MYCSEG:0480		   #2173
_C@			Near   MYCSEG:02B1		   #850
_CALL_IP		Near   MYCSEG:02EB		   #1038  2295	2340
_CFND			Near   MYCSEG:01F6		   476	#525
_CNTC			Word   MYCSEG:0188		   #352
_COLON			Near   MYCSEG:01D0		   #453
_COLONC			Near   MYCSEG:01D2		   #461
_COMMA			Near   MYCSEG:027A		   #754	 773
_CRLDP			Near   MYCSEG:042B		   #1974
_CRSTP			Near   MYCSEG:035B		   #1264
_CSEG			Near   MYCSEG:03AF		   #1510
_CSTR			Near   MYCSEG:0367		   424	509  #1296  2174
_D2DIV			Near   MYCSEG:0459		   #2090
_DC@			Near   MYCSEG:02AC		   799	#841
_DEC			Near   MYCSEG:0343		   471	#1174
_DLIT			Near   MYCSEG:0268		   375	#688
_DPUSH			Near   MYCSEG:023C		   #601
_DROP			Near   MYCSEG:0349		   #1197
_DROPX			Near   MYCSEG:0341		   738	#1162
_DUP			Near   MYCSEG:03B9		   772	842  #1556  1782
_DUP_IF			Near   MYCSEG:03F4		   #1781
_DZ0			Near   MYCSEG:03BB		   416	#1566
_DZ1			Near   MYCSEG:03C1		   #1601
_DZ2			Near   MYCSEG:03BD		   #1587
_ENTRY			Near   MYCSEG:028A		   #788
_ENTRYZ			Near   MYCSEG:028E		   #797
_ETIB			Word   MYCSEG:0150		   #298	 1123
_EVAL			Near   MYCSEG:01BC		   264	375  #431
_EX			Near   MYCSEG:03DF		   306	318  330  #1699	 2287  2332
_EXEC			Near   MYCSEG:041A		   #1944
_FIND			Word   MYCSEG:0196		   #361	 406  442  470
_FIRST			Word   MYCSEG:0142		   #289
_FND			Near   MYCSEG:01FA		   407	#533
_FOR			Near   MYCSEG:0377		   #1336
_H			Word   MYCSEG:016E		   330	#334  594  781
_HENTRY			Near   MYCSEG:0288		   462	#780
_HW_B			Near   MYCSEG:02B3		   #860
_HX			Near   MYCSEG:0168		   #329	 755
_IF			Near   MYCSEG:03F6		   440	471  676  #1789
_IFM			Near   MYCSEG:03E7		   #1723
_IFND			Near   MYCSEG:01F2		   471	#517
_INC			Near   MYCSEG:0373		   518	#1324
_INIT			Word   MYCSEG:018E		   262	#356  372  385
_INT			Near   MYCSEG:02FC		   #1102
_IST			Near   MYCSEG:02A2		   808	#816
_J			Near   MYCSEG:0433		   817	#1991
_JUMP			Near   MYCSEG:03FD		   265	442  #1821  2358
_LARY			Near   MYCSEG:02CB		   #966
_LD			Near   MYCSEG:0405		   747	#1859  1937
_LIT			Near   MYCSEG:026A		   #696
_LPAR			Near   MYCSEG:01B0		   #405
_LTIB			Word   MYCSEG:015A		   306	#310
_LTIBX			Near   MYCSEG:0154		   #305	 1123
_MAC			Near   MYCSEG:01B8		   #415
_MAKESTR		Near   MYCSEG:0228		   #574
_MIF			Near   MYCSEG:03ED		   #1755
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 47
Symbol Table



_MPUSH			Near   MYCSEG:023E		   #609	 799
_MROT			Near   MYCSEG:0473		   #2131
_N??			Near   MYCSEG:0250		   #637
_NAND			Near   MYCSEG:037E		   #1364
_NEG			Near   MYCSEG:0385		   722	#1384
_NEQ			Near   MYCSEG:0411		   #1900
_NEXT			Near   MYCSEG:03E9		   #1735
_NIP			Near   MYCSEG:0415		   #1920
_NOOP			Near   MYCSEG:01E8		   343	347  #491  2331
_NOP			Near   MYCSEG:03D5		   264	265  386  397  432  440	 454  678  798	1123  #1667  2359
_NOT			Near   MYCSEG:0383		   #1374
_ONE			Word   MYCSEG:01E0		   #474
_OPER			Near   MYCSEG:0128		   #275	 442
_OVER			Near   MYCSEG:03B1		   714	#1520
_OVERM			Near   MYCSEG:0270		   #713	 2006
_PARS			Near   MYCSEG:031C		   #1131
_PARSE			Near   MYCSEG:0316		   566	#1122
_PLAVG			Near   MYCSEG:03A5		   730	#1483
_PLSX			Near   MYCSEG:02F1		   #1063
_PMUL			Near   MYCSEG:0451		   #2077
_POP			Near   MYCSEG:03BB		   #1575  2006	2174  2193
_POPSTX			Near   MYCSEG:034B		   825	#1209
_POPX			Near   MYCSEG:038D		   763	808  #1420
_POSTENT		Near   MYCSEG:0282		   #771
_POSTX			Near   MYCSEG:03DD		   375	773  #1686
_PUSH			Near   MYCSEG:0379		   763	808  825  #1346	 2006  2166
_PUSHX			Near   MYCSEG:0351		   #1234
_QUIT			Near   MYCSEG:0113		   #258
_RANGES			Near   MYCSEG:026E		   #705
_RDROP			Near   MYCSEG:0401		   #1835
_RDROPX			Near   MYCSEG:02EF		   #1051
_REINIT			Near   MYCSEG:019A		   #371
_REINIT2		Near   MYCSEG:01A8		   #384
_RET			Near   MYCSEG:02E7		   407	492  509  651  697  #1024
_RLDP			Near   MYCSEG:03C9		   689	697  #1630
_RPAR			Near   MYCSEG:01D4		   #469
_RPLD			Near   MYCSEG:03B7		   #1544
_RSTP			Near   MYCSEG:0361		   763	#1280
_SDIV			Near   MYCSEG:0461		   #2104
_SEMICO			Near   MYCSEG:01AE		   #396
_SEVAL			Near   MYCSEG:01BA		   #423
_SKIP			Near   MYCSEG:03F1		   386	#1768
_SPLD			Near   MYCSEG:03B5		   #1532
_ST			Near   MYCSEG:02A4		   #824
_STM			Near   MYCSEG:029A		   799	#807
_STP			Near   MYCSEG:027C		   #762
_SUB			Near   MYCSEG:0272		   #721	 2006
_SWAP			Near   MYCSEG:0477		   676	#2141
_T			Word   MYCSEG:0164		   318	#322  339  526	2269
_TARY			Near   MYCSEG:02C7		   #946
_TBL			Word   MYCSEG:0136		   263	#283
_TBUF			Word   MYCSEG:013E		   #287	 471  518  566
_TIB			Word   MYCSEG:013A		   263	#285
_TOKEN			Near   MYCSEG:02A8		   440	630  #833
_TOKEN?			Near   MYCSEG:024E		   #629	 789
_TO_NAME		Near   MYCSEG:01EA		   #500	 526
_TROFF			Near   MYCSEG:04BA		   #2294
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 48
Symbol Table



_TROFF?			Near   MYCSEG:04C5		   #2316  2331
_TRON			Near   MYCSEG:04D4		   #2339
_TRONM?			Near   MYCSEG:04CE		   #2330
_TX			Near   MYCSEG:015E		   #317	 602  799
_U1P			Near   MYCSEG:046D		   #2118
_ULESS			Near   MYCSEG:0440		   #2014
_UPDICT			Near   MYCSEG:0238		   374	#593
_VDBG			Word   MYCSEG:017A		   #343
_VPIN			Word   MYCSEG:0180		   #347
_VT			Word   MYCSEG:0174		   #339	 407
_WARY			Near   MYCSEG:02CD		   276	#976
_WFIND			Near   MYCSEG:04AC		   #2268
_WFND			Near   MYCSEG:04AE		   #2276
_WITHIN			Near   MYCSEG:0438		   #2005
_WORD			Near   MYCSEG:0224		   #565	 834
_WSCAN			Near   MYCSEG:0492		   #2200
_WSCN			Near   MYCSEG:048C		   #2192
_WSTR			Near   MYCSEG:0393		   594	#1446  2193
_W_B			Near   MYCSEG:02B5		   #870
_XA			Near   MYCSEG:040D		   #1886
_XOR			Near   MYCSEG:0411		   #1909
_XR			Near   MYCSEG:0409		   #1872  2174	2193
_ZEQ			Near   MYCSEG:0447		   638	668  #2032
_ZERO			Near   MYCSEG:044D		   #2061
__ADROPX		Near   MYCSEG:0499		   1365	 1790  1945  2015  #2212  2359
__ARET			Near   MYCSEG:049F		   842	#2228
__ASM			Near   MYCSEG:04AB		   #2256
__CONS			Near   MYCSEG:038F		   283	285  287  289  291  293	 298  310  322	334  352  474  #1432
__DEFER			Near   MYCSEG:03FD		   339	343  347  356  361  #1812
__PAR			Near   MYCSEG:04A5		   534	575  610  1103	1132  #2241  2277
__POINT			Near   MYCSEG:03FD		   #1803
__SCANER		Near   MYCSEG:02D3		   #999	 2182  2201
__SETPNT		Near   MYCSEG:02F5		   354	359  #1076
__SETVAR		Near   MYCSEG:034D		   296	308  320  332  337  341	 345  350  #1221
__VAR			Near   MYCSEG:038B		   #1408
__VAR3			Near   MYCSEG:0389		   350	357  #1397

Macro Name						   Cref	(defined at #)

ALIGN_							   #89	240  252  270  300  312	 324  366  379	391  400  410  418  426	  +
							   434	448  456  464  478  486	 495  503  512	520  528  560  569  588	  +
							   596	604  624  632  640  654	 662  670  683	691  700  708  716  724	  +
							   732	741  749  757  766  775	 783  792  802	811  819  828  836  844	  +
							   854	864  878  889  903  914	 928  940  950	960  970  980  993  1018  +
							   1032	 1045  1057  1070  1082	 1097  1117  1126  1156	 1168  1181  1191 +
							   1203	 1215  1228  1243  1258	 1274  1290  1304  1318	 1330  1340  1359 +
							   1368	 1378  1391  1402  1414	 1426  1440  1455  1477	 1489  1504  1514 +
							   1526	 1538  1550  1560  1569	 1581  1595  1609  1624	 1642  1661  1680 +
							   1693	 1717  1729  1749  1762	 1776  1784  1797  1806	 1815  1829  1841 +
							   1853	 1866  1880  1894  1903	 1914  1931  1939  1950	 1968  1985  2000 +
							   2009	 2026  2044  2055  2071	 2084  2098  2112  2125	 2135  2147  2160 +
							   2168	 2176  2187  2195  2206	 2222  2235  2250  2263	 2271  2282  2289 +
							   2310	 2325  2334  2368
BUF_							   #125	 201  204  207	210  213  216  219  222	 225  228
CLR							   #51	872  1463  1470	 2247
CONST_							   #144	 282  284  286	288  290  292  297  309	 321  333  351	473
DEFER_							   #148	 338  342  346	355  360
Turbo Assembler	 Version 4.1	    10/15/21 18:31:17	    Page 49
Symbol Table



D_TO							   #69	2215
ENTRY_							   #162
JMPS							   #18	584  620  874  900  911	 925  936  989	1041  1066  1091  1113	  +
							   1164	 1177  1199  1239  1254	 1270  1286  1300  1327	 1355  1436  1451 +
							   1473	 1577  1620  1725  1876	 1890  1946  1964  1979	 1996  2017  2065 +
							   2156	 2350
LL_							   #115	 365  378  399	409  417  463  477  485	 527  568  595	603  623  +
							   631	639  699  707  715  723	 740  748  810	1096  1783  1938  2262	  +
							   2270	 2288  2333
L_							   #110	 269  299  311	323  390  425  433  447	 455  494  502	511  519  +
							   559	587  653  661  669  682	 690  731  756	765  774  782  791  801	  +
							   818	827  835  1116	1125  1358  1775  1930	1999  2008  2159  2167	  +
							   2175	 2186  2194  2324
NAM_							   #167	 647
NIP_							   #65	1923
N_							   #121	 1387  1499  1707  1772	 1825  1862  1927
POINT_							   #157	 353  358
PP_							   #105	 1487  1640  1659  1691	 1912  2053  2082
P_							   #98	239  251  843  853  863	 877  888  902	913  927  939  949  959	  +
							   969	979  992  1017	1031  1044  1056  1069	1081  1155  1167  1180	  +
							   1190	 1202  1214  1227  1242	 1257  1273  1289  1303	 1317  1329  1339 +
							   1367	 1377  1390  1401  1413	 1425  1439  1454  1476	 1488  1503  1513 +
							   1525	 1537  1549  1559  1568	 1580  1594  1608  1623	 1641  1660  1679 +
							   1692	 1716  1728  1748  1761	 1796  1805  1814  1828	 1840  1852  1865 +
							   1879	 1893  1902  1913  1949	 1967  1984  2025  2043	 2054  2070  2083 +
							   2097	 2111  2124  2134  2146	 2205  2221  2234  2249	 2309
QUAN_							   #139	 349
R2M_							   #60
R2P_							   #55	1924
R_TO							   #81	1353
SKIPA							   #22	1054  1079  1315  1606	1689  1850  2144
SKIPB							   #26	1212  1225  1411  1423	1523  1535  1547  1592	1838
SKIPR							   #30	1740  2036  2297  2342
SWAP							   #43
TO_D							   #75
TO_R							   #85	1654
VALUE_							   #134	 295  307  319	331
VAR_							   #130
VECTOR_							   #152	 336  340  344
X							   #39	1001  1005  1152  1350	1652  1657  2216  2219	2244
Z?							   #47	1251  1466  1791

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

MYCSEG			16  04F8 Para	none		   #191	 193  193  193	193
