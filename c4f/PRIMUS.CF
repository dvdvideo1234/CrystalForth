\ REDEFINITIONS AND FORWARD DEFINITIONS ---------------

'  (JUMP   =:  (DEF
\ =! |LASTH
 
: RANGE>S 1+
: OVER- OVER
: - NEG
: + +2/ DROP; ,<
 
\ =============   VARIABLES  ==============

0  QUAN  CNTC
: ZBLK 0      ,<  0 VALUE  BLK  
: BLK>SCR BLK ,<  0 VALUE  SCR
0  DEFER BLOCK

: MCLR (LIT `MACADR  ,<    
' `MACADR VALUE MOBJ   
 
\ EMIT TO_METHOD CHANGED
: EMT! (LIT BE (SET2 (VAR
: EMIT  BE  AT CNTC ++ ;
 
\ KEY TO_METHOD CHANGED
: KEY! (LIT BK (SET2 (VAR
: KEY BK ;;

ZDO VALUE 6 TIMES _FL _AX _BX _CX _DX HOFS
 -1 VALUE SCRH
 
: |HLD CALL EX (SET2 THEN ,<       0 CONST HLD

\ COMPILER
>, EX  
: _MARK H   
: Z, 0 , ;      
: |, EX 
: `<RELS_ , 
: LASTH! H ,<
0 VALUE LASTH
: |LASTH EX LASTH! ; 
: _BEGIN |LASTH  
: HERE H  
: R>T HOFS + ; 

\ =============   CONSTANTS  ==============

: |C. EX EMIT ; 
: |SPC EX 
: SPC  |C. ,<     32  CONST BL
: `bs  DUP 0; 1- CALL SPC THEN 
       |C. ,<      8  CONST  bs       
: `LF  |C. ,<     10  CONST  lf       
: `CR  |C. ,<     13  CONST  cr 
: `C-  |C. ,<     '-  CONST  c- 
1  CONST  ONE
HERE 2- =: BYE 
  
: EOS! bs (SET2 ,<   0 VAR EOS 

: `MASK| EX 1- 
: AND NAND NOT ;
>, `MASK| ,<  \ USED IN fLUSH.CF
  4 CONST NBUFS    
: W>B `MASK| ,<
256 CONST 1B
\ >, `MASK| ,<
 16 CONST 1H

' `TIB CONST TIB
\ : 1L& `MASK| ,<
  64  CONST 1L

   -1 CONST TRUE
: ON  TRUE SKIP
: OFF 0 
: SWAP! SWAP ! (;   EX 
: `EL? BLK 0<>; 
: `\ |LTIB DUP 0; 1- 
: L/ (@&; ,< -64 ,

>, `MASK| ,<  \ USED
1024  CONST 1K
 
\ ============ PRIMITIVE METHODS ===============

: SWAP| EX SWAP ;
: @ISTR J SWAP|
: @+ PUSH @R+ POP; 
: @2 @+ @ ;

: T> T
: DEA> 4+ 
: NAME> CSTR +  ;

HERE >, (D#0 @2 
: WITHIN OVER- PUSH - POP U< ;
\ N: `BREL? -128 , 128 , 
=, PRNTBL 32 , 240 ,
  
: DROP| EX DROP;
: NIP| EX NIP ;   
\ : NOP;  ;

: I J ;
: ("SW ("SKIP B?" 1+ 
: (XARY 2* POP + @ PUSH;
: IXEC J
: EXECUTE PUSH; 
: S1- U1+
: 1-; 1- ; 
: EOSZ DROP|
: EOS? EOS
: @0<>? A! 0 @!A ;
: ?XEP+| DUP 1+ AHEAD 
: ?XEP-| 1-
: ?XEP| DUP     THEN
: XEP| XR EXECUTE POP; @R+ @R+
: |SAFE! A! @!A XA PUSH A@ EXECUTE POP POP!;
: |ROT EX
: ROT -ROT -ROT ;

: TUCK DUP -ROT ;
: W>BB SWAP|
: SPLIT DUP W>B XEP| HW>B ;
: 2DUP OVER OVER ;

\ : WITHIN OVER- PUSH - POP U< ;

\ COMPILER BASIC PRIMITIVES  ------------ 

: `SOURCE BLK 0; ETIB 0= 0; BLK BLOCK 1K + TO ETIB ;
: (LIT, (MAC ,< 2 C, ,"(#"  2ALIGNED
: (;,   (MAC ,< 2 C, ,"(;"  2ALIGNED
: `(MAC (MAC ,< 4 C, ,"(MAC"  2ALIGNED
: A-L XEP|  
: I- J - ;
: S+L XEP| 
: A+L XEP| 
: I+ J + ; 
: 31& (@&; ,< 31 ,  
: @I J @ ;
: |@! XR @I EXECUTE POP!;
: +!  |@! + ;
: XOR! |@! XOR ;
: (<RNG| RANGE>S A+L SKIP
: (RNG| RANGE>S  SKIP
: ASTR| A!
: STR| XR POP    
: .TIMES DROP|   
: TIMES PUSH XR  
: TIMES| (FOR CALL BEGIN J EXECUTE THEN (NEXT RELS<
 RDROP RDROP; 
: SPACES TIMES| SPC ;    
: ODDH? !"ODDH?" ;;
: HODD H (| ODDH?  DUP \ H TO FIX HERE 
: ODD (@&; ,< 1 , 
>, @R+
: = XOR 0= ;
: MEMTI| A+L 0   
: TI| BLK XR LTIB PUSH
 ETIB PUSH PUSH CALL EX POP POP POP THEN
 TO BLK TO LTIB TO ETIB 
: /BLK BLK 0; 0 TO ETIB ; 

\ STRINGS ---------------------------

: FND? TOKEN? (| N?? 
: TFND T  FND ;
\ : C@, C@ 
: |ALIGNED EX    
: ALIGNED NOP \  |LASTH  FIX
 HODD NIP 0; $90 
: C, |H  
: C!+ PUSH C!R+ POP;
: ((" ("SKIP ;; 
' |ALIGNED VECTOR  v",

: "STR, '" 
: `", WORD ?C@ N?? 
: ", CSTR v", DUP C, 
: S, STR| CSTR C, ; 
: M: ';  
: ?M: AT |SAFE! ,< 0 , VAL' HOFS , >,
   CALL TARG:C `(MAC `", THEN 
: <M> MOBJ   |H TO MOBJ ;   


: T. T   
: WID.  4+ 
: ID. |SPC 
: ". CSTR        
: TYPE STR| CSTR EMIT ; 
: ((." ("SKIP  ". ;;  

: XY? 1K LTIB - ;
: ?|CR 0; 
: |CR EX 
: CR TO cr TO lf 0 TO CNTC ;
: `OK ."_ok" CR .">>_"  ;;  
: `. EMT! KEY! CR TBUF ID. NOP ID. CR BLK 0;  \ ERRA
  BLK>SCR ZBLK XY? 
: >XY TO 1K ,< 0 VALUE XY

: `WITHSTK @R+ @R+ WITHIN 0= (JUMP AT ((;" ,<
: `RP `WITHSTK `R_BTM  `R_TOP ,< 5 C, ,"RSTK?"
: `SP `WITHSTK `S_BTM  `S_TOP ,< 5 C, ,"DSTK?"
: `STACK TR-| RP@  `RP   SP@ 2- `SP    vPIN  ;; 

\ NUMBERS ---------------------------

: U/ NIP|    : U/MOD A! 0 
: (UM/ SWAP| TWICE TWICE -/ -/ -/ -/ ;
: UMOD U/MOD DROP;
: UM/MOD U/MOD XEP| (UM/ ; \ ( UD U - U UD )

: 9>? 9 SKIP
: OPT? ONE OVER U<  (@&; ,< 7 , 
HERE >, (D#0 @  
: BASE! 2- W>B 2+ ,<
  10 VALUE BASE 
N: `DECI 10 , N: `BIN 2 , N: `HEX 16 ,  DROP

: `BLOCK [ 1B + ]
: 1K* 1K
: U* DROP|
: UM* A! 0 TWICE TWICE +* +* +* +* ;
' `BLOCK VAL' BLOCK T!

: DIG? '0 - 9>? - DUP BASE U< ;
>, (PNT2 ,<  0 DEFER @STATE 
: `DIG# BASE! 0 ;
: `ERRN 0& A! ;
: `DIG^  TO @STATE  31& SKIP
: `ADIG' TO @STATE  
: `MUL+  PUSH BASE U* POP +
: `DIGICHK  TO @STATE A@ OPT? NIP    IF
   ("SW ,< 5 C, '' C, '^ C, '# C, '$ C, '%  C, 2ALIGNED
  >, CALL `ADIG' `DIG^ `DIG# `HEX `BIN  THEN
  A@  THEN DIG? (IF `ERRN  `MUL+ ;
: S1+ PUSH  
: `CONV; 1- POP
: 1+; 1+ ; 
: `-? OPT? 0; OVER C@ c- = 0; S1- EX XEP| NEG ;
: "># CSTR
: S># `DECI 0 -ROT DUP (IF 1-; `-?  NIP| 
: CONV  `DIGICHK FOR PUSH C@R+ J 1+ A! @STATE POP 
    A@ (IF `CONV; NEXT 1+ ;
: ">NUM  TR-| "># ?? ;  \  vDBG ,< 4 , >,
: ">NUMC  ">NUM 
: #,, TR-| 
  (LIT, , ;  \ 68C

: S6 (| CALL XEP| XEP| XEP| THEN 
: S3 |SPC CALL TWICE THEN ROT DUP 
: H. W>BB CALL 
: B. |SPC THEN  W>B 1H U/MOD TWICE 
: DIG. |C. 
: ALPHA 9>? + (@+; ,< '0 ,   \ FOR NUMOUT 

: . DUP 0< IF NEG TO c- THEN  
: U. `DECI SKIP 
: .H `HEX SKIP
: .B `BIN |SPC 
: `U.  BASE U/MOD  SKIP? RECURSE DIG. ;

>, EOS! : `CR2 RDROP RDROP; 
: `CH A@ PRNTBL 0; A@ SKIP 
: `tab BL DUP A! EMIT 2DUP + A@ SWAP! 1+ ; 
: `CHTAB ("SW ,< 5 C, ^H C, ^I C, ^M C, ^Z C, 127 C, 
>, `CH `bs `tab `CR2  TO `CR2 NOOP 
 |SPC : ACCEPT PUSH 0 BEGIN KEY `CHTAB DUP I = UNTIL EXIT ;

: ,' |, 
: ' FND?
: @DEF? @2 
: UNDEF? ODD !"UNDEF?" ;;
HERE >, (D#0
: `ADR+  @ (| + 
: ADR' '  TO ODD ODDH? ; 
N: TO' -2 ,  N: AT' -4 , N: VAL' 2 , DROP
HERE >, (D#0 `ADR+ PUSH; ,<
N: TO -2 ,   N: AT -4 , N: X:` 0 , DROP 
HERE >, (D#0 `ADR+ , ;
N: FTO` -2 ,  N: FAT` -4 , N: FVAL` 2 ,  DROP 
 

>, (D#1 PUSH 
: >PUSH @ISTR 2- SWAP @2 WITHIN 0= !"FULL?" @I !- POP!;
: >POP  @ISTR    SWAP @2 WITHIN 0= !"EMPTY?"  @I @+ POP!;
 (VAR3 AT >PUSH 
: HNDLS >POP ,< 168 , 128 , 168 ,
\ 40 ALLOT
: STKINI DUP PUSH 4+ @ POP!;
 (VAR3 AT >PUSH 
: STK> >POP ,< 208 , 168 , 208 ,
: STKSZ  DUP PUSH 4+ @ POP @ - 2/ (;
 (VAR3 AT >PUSH 
: STK< >POP ,< 248 , 208 , 248 ,
: HTOP AT HNDLS @ @ ;
: <CLR> AT STK> STKINI  AT STK< STKINI ;
: <MORE?> AT STK> STKSZ  AT STK< STKSZ + ;

: DEA? DUP 4+ C@ ;
: CMOVE SWAP  : S>M A! FOR CSTR XA C!R+ XA NEXT
: 2DROP DROP DROP;  : S+! XEP| TUCK J STR + S>M J +! ;
: EDICT T SKIP BEGIN DEA> DEA? 0= UNTIL ;
: `ADDNAME? J @ H U< 0; J 4+ 1+ C@ '` <> 0;
 J DUP DEA> J - H S+! DROP ;
: PRUNE  [ TO T H STR + OFF H ++ H>T ] EDICT XEP|   H DUP OFF
 T BEGIN DEA? WHILE PUSH `ADDNAME? POP DEA> REPEAT DROP ;
\ : .T (LIT _ENTRY WFIND DROP DEA> DEA> ; END OF WORDLIST

\ IO  -------------------------------------

: ">Z CSTR 
: S>Z TO S! DUP NAME> OFF 1+ ; \ TO S TBUF

\ INTS DOS, FILES & VIDEO

: `fsk 1K TUCK UM* SCRH EX SCRH 
: IO? _FL ODD !"IO?" ;;
: `File| ">Z EX IO? _AX ;
: XDROT XEP| 
: DROT |ROT  
: D0 0 0 ;
HERE >, (D#0 C@ (INT# TO _FL TO _AX TO _BX TO _CX TO _DX ;
N: (DOS  $21 ,  
=, (VID  $10 , 

: THRU (RNG| ?XEP+| 
: LOAD TR-| 1K OVER TI| VAL @EVAL ; 

: `FTOP| TO HNDLS HNDLS EX TO HNDLS ;
:  `RW IXEC ! IXEC ONE RDROP; ,<
HERE >, (D#0 @ DROT (DOS ;
>, `FTOP| 
: FOPEN `File| ,< 
N: Fopen $3D02 ,
>, `FTOP| 
: FCREATE `File| ,< 
N: Fcreate $3C00 ,
\ : LineIn OVER ! DUP [ 1+ CSTR ] ,<
\ N: `LineIn2 $A00 ,
=, StdPut   $200 ,  \ 

HERE >, (D#0 @ (DOS ;
>, `RW  (VAR3 ,< N: Fread  $3F00 , 0 ,
>, `RW  (VAR3 ,< N: Fwrite $4000 , 0 , 
: `RWPOS `fsk ,<
=, Fseek  $4200 ,

HERE >, (D#0 @ XDROT (DOS ; 
N: Fsize $4202 , 
N: Fpos $4201 , 
N: Fcut $4000 , 
: `ALLCLR <CLR>
: `CLSD AT HNDLS STKSZ TIMES| \ CLOSES ALL FILES 
: HCLOSE HNDLS ,<
=, Fclose $3E00 , 

: StdGet 0 
: FKEY  ^Z AT Fread ROT Fread TO Fread @ ;
: ERRput 2  
: FEMIT SWAP AT Fwrite ROT Fwrite ;
: FGet HTOP FKEY ;

: WBLK `RWPOS Fwrite IO? ;
: RBLK `RWPOS Fread  IO? ; 

: @OPENI| TOKEN? TO FOPEN EOSZ @R+ (LIT KEY |SAFE! ;
: INCLUDE  @OPENI| FGet   SKIP BEGIN EVAL
CR TIB 1L ACCEPT EOS? UNTIL EVAL  HCLOSE ;
: FTYPE @OPENI| FGet  AT |SAFE! BE EMIT
  BEGIN  CR FIB 1L ACCEPT EOS? UNTIL  HCLOSE ;

\ 0 VAR VAR1  \ TESTING |SAFE!
\ : TESTV AT |SAFE! ,< 20 , ' VAR1 2+ , >, : V. VAR1 @ . ;

\ INCLUDE XTEND.CF \ HERE .  TEST11 3292
\ INCLUDE NUMOUT.CF
 INCLUDE DEBUG.CF  \ 530
 INCLUDE UPACK.CF  \ 230 B
 
\ INCLUDE WORDS1.CF
\ INCLUDE INITER.CF
 
\ L_ _STR?
\   DW _AFT_NAME,_1M,_C@,_RET
\ : "? DUP ?C@ + C@ TO = ,< '" , >, ;;
\ : CONV FOR PUSH C@R+ DIG? (IF `CONV; BASE*+ POP NEXT 1+ ;
\ : TEST0 TR-| 1 2 3 4 5 6 ;;
\ : TESTN TEST0  "-$1234"
\ : CONV0
\  CSTR `DECI 0 -ROT (?IF 2+; `-? CONV1 NIP ;
\ 
\ : TEST2  "#'1'2" CONV0 ;

