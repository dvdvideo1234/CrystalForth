CR ."FUNC"
FORGET FUN
: FUN ;
: WD? BL -ROT (PARS ; \ END-ADDR & LEN --> WA WL NEWLEN

  0 VALUE `PAR^  \ RUNTIME OF FUNC:
2#> : `@PAR @ : `PAR+ `PAR^ + ;   0#> `@PAR @ ;  1#> `@PAR ! ;
<M> ROT 3MKR `PQUAN ,  <M> 
-2 -2 8 FMLY `PQUAN `V0 `V1 `V2 `V3 `V4 `V5 `V6 `V7

: (PAR C@R+ C@R+ OVER OVER +        \ PARS LOCS AND  PARS+LOCS
  `PAR^ XR RP@ TO `PAR^  SWAP       \ SAVE & SET PARPTR
  NEG 2* `PAR+ DUP RP! PUSH XR PUSH \ SIZE CALC & ALLOC AT RSP
  FOR-   0 !R+  NEXT- DROP          \ `ZEROS 
  FOR- SWAP !R+ NEXT- DROP RDROP    \ `FILLPAR
  EX   `PAR^ RP!  POP  TO `PAR^ ;   \ ON EXIT FUNCTION

: `SCANP; POP  NOT `V2 + TO `V2  : `!TBUF TBUF OFF ;

: `>WORD DROP|  : `>PAR# DROP|  : SCANP#
 (PAR ,< 3 C, 0 C, >, `V0 `V1  MEMTI| [ `V2 `V1 LTIB - ] `V2
  `!TBUF FOR TOKEN NIP (IF `SCANP;   NEXT RDROP; ,<

0 VALUE `OLDT   
: RETURN` `OLDT TO T ; \ COMPILETIME OF FUNC:
: LOC/` AHEAD` CSTK> CSP! ,<` ;
: /LOC  CSP? TO CSTK>  THEN`  >, ;

: `FNC? PARS# @ XEP| bs J U<  !"#FNPARS" C: : ; 
: FUNC:`  : FUNC: `FNC? T TO `OLDT 
  FOR I 2* 2* 2* (# `V0 + 0 (TEXT) I 1+
 `>WORD  TBUF  N3   NEXT RDROP  (# (PAR , PARS# 2@ OVER- C, C, ;    
 
BYTE. WD?

( 
~( 
A \ FIRST  PARAMETTER
B \ SECOND PARAMETTER
~) 
FUNC: A+B 
LOC/
  : G A B - ;
  : D A B + ;
  : E A B U* ;
  BL =: `
/LOC
G .
D .
E .
RETURN ; 
)

\ (TEXT) EVAL

\ ;FUNC"
