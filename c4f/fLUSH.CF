\ FLUSH
     
    0 VALUE `PREV 
: `+BUF CALL 1+ TO NBUFS DUP (SET2 THEN ,< 
    0 CONST  `USE 
: `@FBUFS `PREV ,< 
    4 WARY `FBUFS  
: `@BUFS  `PREV ,< 
    4 WARY `BUFS 

: WBLK `RWPOS Fwrite IO? ;
: RBLK `RWPOS Fread  IO? ; 
: `@BUF `PREV 1K* FIRST + ; 
: UPDATE  `@FBUFS ON ; 
: -BUF `@BUFS ON 
: DISCARD `@FBUFS OFF ; 
: !BUFS  `NBUFS TIMES| `+BUF TO `PREV
: `?SAVE `@FBUFS C@ 0; `@BUF `@BUFS @ WBLK DISCARD ;

: FLUSH !BUFS       
: /BUFS `NBUFS TIMES| `+BUF TO `PREV
: `EMPTY-BUF -BUF   
: `/BUF `@BUF 1K ERASE ;
: `?BUF PUSH 0 `BUFS `NBUFS POP WSCAN ;
: `;ABLK /BLK  XR PUSH J `?BUF EX `@BUF EXIT ;
: BUFFER `;ABLK -IF `?BUF
  -IF DROP  BEGIN `+BUF `PREV - UNTIL
     `USE THEN THEN TO `PREV `?SAVE `/BUF J `@BUFS ! ;
: BLOCK `;ABLK -IF DROP J BUFFER J RBLK ;THEN TO `PREV ;
: `-USE SCRH 1+ 0; SCRH Fclose 
: `/SCR -1 TO SCRH ; 

: USE/ `/SCR /BUFS ; 
: FCUT FLUSH `fsk 0 SCRH Fwrite ;
: USING TOKEN? 
: USED FLUSH `-USE FOPEN TO SCRH ; 
\  ' BLOCK VAL! vBLK  \ FIX  
\  USE/  USING PIF.COM 


