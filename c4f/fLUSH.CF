\ FLUSH
     
    0 VALUE `PREV 
: `+BUF CALL 1+ TO NBUFS DUP (SET2 THEN ,< 
    0 CONST  `USE 
: `@FBUFS `PREV ,< 
    4 WARY `FBUFS  
: `@BUFS  `PREV ,< 
    4 WARY `BUFS 

: `@BUF `PREV 1K* FIRST + ; 
: UPDATE  `@FBUFS ON ; 
: -BUF `@BUFS ON 
: DISCARD `@FBUFS `OFF ; 
: !BUFS  NBUFS TIMES| `+BUF TO `PREV  
: `?SAVE `@FBUFS C@ 0;
 `@BUF `@BUFS @ TO Fseek Fwrite IO?  DISCARD ;

: FLUSH !BUFS       
: /BUFS  NBUFS TIMES| `+BUF TO `PREV
: `EMPTY-BUF -BUF   
: `/BUF `@BUF 1K ERASE ;
: `?BUF PUSH 0 `BUFS NBUFS POP WSCAN ;
: `;ABLK /BLK  XR PUSH J `?BUF EX `@BUF EXIT ;
: BUFFER `;ABLK -IF `?BUF
  -IF DROP  BEGIN `+BUF `PREV - UNTIL
     `USE THEN THEN TO `PREV `?SAVE `/BUF J `@BUFS ! ;
: BLOCK `;ABLK -IF DROP J BUFFER J
 TO Fseek Fread  IO?  ;THEN TO `PREV ;

: USE/ /SCR /BUFS ; 
: FCUT FLUSH TO Fseek  0 SWAP Fwrite ;
: USING TOKEN? 
: USED FLUSH -USE FOPEN TO SCRH ; 
USE/  \ USING PIF.COM 
: `SOURCE BLK 0; ETIB 0<>; BLK BLOCK 1K + TO ETIB ;

: THRU (RNG| ?XEP+| 
: LOAD TR-| 1K OVER TI| VAL `EVAL ; 


\ 345678901234
\ CR .( FLUSH   ) BYTE. `PREV

