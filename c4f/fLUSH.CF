\ FLUSH

   -1 CONST TRUE
: ON  TRUE : SWAP! SWAP ! ;   
: OFF 0    SWAP! ;   
     
    4 CONST `NBUFS    
    0 VALUE `PREV 
$E800 VALUE  FIRST 
    0 VALUE  `USE 
   -1 VALUE  SCRH

: `@FBUFS `PREV ,< 
    4 BARY `FBUFS  
: `@BUFS  `PREV ,< 
    4 WARY `BUFS 
	

: IO? _FL ODD !"IO?" ;;
: `File| >ZSTR 
: `|IO? (EX IO? _AX _DX TO _DX2 ;
HERE >, (D#0 @ DROT (DOS ;
\ >, >FTOP| 
: FOPEN `File| ,< 
N: `Fopen $3D02 ,
\ >, >FTOP| 
: FCREATE `File| ,< 
N: `Fcreate $3C00 ,
=, StdPut $200 , 
HERE >, (D#0 @ XDROT (DOS ; 
\ : CLSD NFILES AFILE - TIMES|
\  FTOP> ,<
=, Fclose $3E00 , 


: `1KRW| DROP; 1K 
: `AXDX| SCRH `|IO? ;
: `fsk 1K UM* `AXDX| Fseek ; 
: WBLK `fsk |DROP `1KRW| Fwrite ;
: RBLK `fsk |DROP `1KRW| Fread ; 
: `@BUF `PREV 1K U* FIRST + ; 
: UPDATE  `@FBUFS C_ON ; 
: -BUF `@BUFS ON 
: DISCARD `@FBUFS C_OFF ; 
: `+BUF `USE 1+ `NBUFS 1- AND (DUP TO `USE ;    
: !BUFS  `NBUFS TIMES| `+BUF TO `PREV
: `?SAVE `@FBUFS C@ 0; `@BUF `@BUFS @ WBLK DISCARD ;

: FLUSH !BUFS       
: /BUFS `NBUFS TIMES| `+BUF TO `PREV
: `EMPTY-BUF -BUF   
: `/BUF `@BUF 1K ERASE ;
: `?BUF (PUSH 0 `BUFS `NBUFS (POP WSCAN ;
: `;ABLK /BLK  (XR (PUSH (J `?BUF (EX `@BUF (RDROP;
: BUFFER `;ABLK -IF `?BUF  -IF DROP; BEGIN `+BUF `PREV - UNTIL
     `USE THEN THEN TO `PREV `?SAVE `/BUF (J `@BUFS ! ;
: BLOCK `;ABLK -IF DROP; (J BUFFER (J RBLK ;THEN TO `PREV ;
: `-USE SCRH 1+ 0; SCRH Fclose 
: `/SCR -1 TO SCRH ; 
: SOURCE BLK 0; ETIB 0<>; BLK BLOCK 1K + TO ETIB ;

: USE/ `/SCR /BUFS ; 
: FCUT FLUSH `fsk 0 SCRH Fwrite ;
: USING TOKEN? 
: USED FLUSH `-USE FOPEN TO SCRH ; 
: THRU (RNG| ?XEP+| 
: LOAD 1K (OVER TI| VAL EVAL ; 
\  ' BLOCK VAL! vBLK  \ FIX  
\  USE/  USING PIF.COM 

