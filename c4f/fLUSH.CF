\ FLUSH
4 CONST `NBUFS    
ZDO VALUE 4 TIMES `PREV FIRST `USE SCRH
   -1 TO SCRH  
$E800 TO FIRST 
: `@FBUFS `PREV ,< 
`NBUFS BARY `FBUFS  
: `@BUFS  `PREV ,< 
`NBUFS WARY `BUFS   

: `1KRW| DROP 1K 
: `AXDX| SCRH `IO?| ;
: `fsk 1K UM* `AXDX| Fseek ; 
: WBLK `fsk |DROP `1KRW| Fwrite ;
: RBLK `fsk |DROP `1KRW| Fread ; 
: `@BUF `PREV 1K U* FIRST + ; 
: UPDATE  `@FBUFS C_ON ; 
: -BUF `@BUFS ON 
: DISCARD `@FBUFS C_OFF ; 
: `+BUF `USE 1+ `NBUFS 1- AND DUP TO `USE ;    
: !BUFS  `NBUFS TIMES| `+BUF TO `PREV
: `?SAVE `@FBUFS C@ 0; `@BUF `@BUFS @ WBLK DISCARD ;

: FLUSH !BUFS       
: /BUFS `NBUFS TIMES| `+BUF TO `PREV
: `EMPTY-BUF -BUF   
: `/BUF `@BUF 1K ERASE ;
: `?BUF PUSH 0 `BUFS `NBUFS POP SCAN ;
: `;ABLK /BLK  XR PUSH J `?BUF EX `@BUF RDROP;
: BUFFER `;ABLK -IF `?BUF  -IF DROP BEGIN `+BUF `PREV - UNTIL
     `USE THEN THEN TO `PREV `?SAVE `/BUF J `@BUFS ! ;
: BLOCK `;ABLK -IF DROP J BUFFER J RBLK ;THEN TO `PREV ;
: `-USE SCRH 1+ 0; SCRH Fclose 
: `/SCR -1 TO SCRH ; 
: USE/ `/SCR /BUFS ; 
: FCUT FLUSH `fsk 0 SCRH Fwrite ;
: USING TOKEN? 
: USED FLUSH `-USE FOPEN TO SCRH ; 
: THRU ITER| 
: LOAD 1K OVER TI| VAL EVAL ; 
' BLOCK VAL! vBLK  \ FIX  
 USE/  USING PIF.COM 

