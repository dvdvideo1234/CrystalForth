Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 1
NF.asm



      1				     ;._IF		     ;._JUMP	     ;._RET	     ;._NEXT
      2				     ;._PUSH	     ;._DUP	     ;._POP	     ;._J
      3				     ;._XCHG	     ;._RLDP
      4				     ;_SDIV	     ;_PMUL	     ;_PLSAVG  ;_NAND
      5
      6				     ;_EX		     ;_EXECUTE	     ;_XEP		     ;_XTIMES
      7				     ;_DXEP	     ;_@EXEC	     ;_2EXIT	     ;_XDROP
      8				     ;_@STR	     ;_?SKIP	     ;_ABORT	     ;_EXEC
      9				     ;_DROPX	     ;_EXIT	     ;_DRET	     ;_SKIP
     10
     11				     ;!_XOR	     ;!_ALIGN	     ;_NOT		     ;_NEG
     12				     ;_ADD		     ;!_ZEQ	     ;_DIV2	     ;!_LIT
     13
     14				     ;_RDROP	     ;_SWAP	     ;_NOP		     ;_DROP
     15
     16
     17				     ;_TIB		     ;_SETPNT	     ;_ACCEPT	     ;_0
     18				     ;_BL	 ;_OK			     ;_TBUF	     ;_HERE
     19				     ;_ETIB	     ;_TBL		     ;_NUM		     ;_LTIB
     20				     ;_DICT	     ;_CNTC
     21
     22				     ;_STR		     ;_STM		     ;_LDB		     ;_STP
     23				     ;_INC		     ;_SWAPST	     ;_LD	 ;_ST
     24				     ;_DEC		     ;_CMOVEU	     ;_STRPUSH	     ;_MAKESTR
     25				     ;_COUNT	     ;_MPUSH	     ;_CMOVE	     ;_DLDB
     26
     27				     ;_FND		     ;_TICK	     ;_EVAL	     ;_WORD
     28				     ;_COMPNUM ;_SEMICOM     ;_NUMBER	     ;_TOKEN?
     29				     ;_TO_STR	     ;_TO_DICT	     ;_ABORT?	     ;_HENTRY
     30				     ;_COMLIT	     ;_?FINDC	     ;_CLIT	     ;_XZ??
     31				     ;_DOIT?	     ;_ERROR	     ;_REINI	     ;_NZ??
     32				     ;_@NC		     ;_XDICT	     ;_XHERE	     ;_@EVAL
     33				     ;_Z??		     ;_TOKEN	     ;_PARSE	     ;_HDICT
     34				     ;_@_INI	     ;_COLON	     ;_ENTRY	     ;_INIT
     35				     ;_COMMA	     ;_?FIND	     ;_SEMI	     ;_LPAR
     36				     ;_RPAR	     ;_PARS
     37
     38				      locals  @@
     39
     40	      =0000		     ?NOPCNT = 0
     41	      =	dword ptr	     pd	 equ dword ptr
     42	      =	word  ptr	     pw	 equ word  ptr
     43	      =	byte  ptr	     pb	 equ byte  ptr
     44
     45	      =0002		     TO_    =  2
     46	      =0004		     AT_    =  4
     47	      =0006		     VAL_   =  6
     48
     49				     SKIPr_   MACRO reg
     50					     mov   reg,0
     51					     org   $-2
     52					 ENDM
     53
     54				     JMP_    MACRO LBL
     55					     jmp  SHORT	LBL
     56					     ENDM
     57
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 2
NF.asm



     58				     SKIPW_  MACRO
     59					     DB	   0BFH
     60					     ENDM
     61
     62				     SKIPA_   MACRO
     63					     DB	   03DH
     64					     ENDM
     65
     66				     SKIPB_   MACRO
     67					     DB	   03CH
     68					     ENDM
     69
     70				     X_	     MACRO
     71					     xchg Rsp,DSP
     72					     ENDM
     73
     74				     CLR_    MACRO REG
     75				       XOR   REG,REG
     76					     ENDM
     77
     78				     DPUSH   MACRO REG
     79					     X_
     80					     PUSH  REG
     81					     X_
     82					     ENDM
     83
     84				     DPOP    MACRO REG
     85					     X_
     86					     POP     REG
     87					     X_
     88					     ENDM
     89
     90				     TWICE_  macro
     91					     DW	     $+2
     92					 endm
     93
     94				     RDEC_    macro
     95					     DW	     @_NEXT_
     96					     TWICE
     97					 endm
     98
     99				     LDP_ MACRO	  REG
    100					     XCHG    REG,AX
    101					     LODSW
    102					     TEST    AL,1
    103					     XCHG    REG,AX
    104				       ENDM
    105
    106				     ?ZERO_ MACRO REG
    107				       OR  REG,REG
    108				       ENDM
    109
    110				     ALIGN_  MACRO  FLAG
    111				       IF    ($-START+FLAG) AND	1
    112				       NOP
    113				     ?NOPCNT = ?NOPCNT+1
    114				       ENDIF
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 3
NF.asm



    115				       ENDM
    116
    117				     L_	     MACRO LBL
    118					     ALIGN_  0
    119				     LBL:
    120					 ENDM
    121
    122				     P_	     MACRO LBL
    123					     ALIGN_  0
    124					     NOP
    125				     LBL:
    126					     org   $-1
    127				       ENDM
    128
    129				     XTSK_   macro   LBL,ADR
    130					     ALIGN_  1
    131					     SKIPA_
    132					     P_	     LBL
    133					     DW	ADR
    134					     ENDM
    135
    136				     ;qqqqq = 0
    137				     ;ppppp = qqqqq
    138
    139				     nam_    macro   msg
    140					     local   endstr
    141					     db	     endstr-$-1
    142					     db	     msg
    143				     endstr  label   byte
    144					     endm
    145
    146				     VAR_    macro   LBL,DAT
    147				       L_ LBL
    148				       DW      _VAR@,DAT
    149				       ENDM
    150
    151				     XT_     macro   LBL,ADR
    152				       P_ LBL
    153				       DW      ADR
    154				       ENDM
    155
    156				     value_  macro   lbl,dat
    157				       ALIGN_ 0
    158				       DW _SETVAL@
    159				       const_  lbl,dat
    160				       endm
    161
    162				     DEFER_  macro   lbl,dat
    163				       L_ LBL
    164				       DW     _JUMP,dat
    165				       endm
    166
    167				     vector_ macro   lbl,dat
    168				       ALIGN_ 0
    169				       DW _SETVAL@
    170				       DEFER_	lbl,dat
    171				       endm
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 4
NF.asm



    172
    173				     point_  macro   lbl,LBL2,dat
    174				       L_ LBL
    175				       DW _POP
    176				       vector_	 lbl2,dat
    177				       endm
    178
    179				     const_  macro   lbl,dat
    180				       L_ LBL
    181				       DW    _CONS@,DAT
    182				       endm
    183
    184				     entry_  macro ADR,DAT,nam
    185				       DW    ADR,DAT
    186				       nam_  nam
    187				       endm
    188
    189
    190				     ; REGISTERS
    191				     ; SI INSTRUCTION POINTER
    192				     ; SP RETURN STACK POINTER
    193				     ; AX DATA STACK POINTER
    194				     ; CX DATA STACK TOP REGISTER
    195
    196				     ; DI WORK REGISTER
    197				     ; BX ADRESS REGISTER  ?
    198				     ; DX BX DI	- SCRATCH
    199				     ; BP   - NOT USED
    200				     ;
    201
    202
    203				     ; REGISTERS     for interpretter
    204	      =SI		       I       = SI  ; INSTUCTION POINTER
    205	      =SP		       RSP = SP	     ; RETURN	     STACK POINTER
    206	      =BP		       RT  = BP	     ; RETURN	     STACK TOP
    207	      =AX		       DSP = AX	     ; DATA STACK POINTER
    208
    209	      =BX		       T   = BX	 ; DATA	STACK TOP REGISTER
    210	      =BL		       TL  = BL	 ; DATA	STACK TOP REGISTER
    211	      =BH		       TH  = BH	 ; DATA	STACK TOP REGISTER
    212	      =DI			     A	 = DI	     ; ADDRESS REGISTER
    213	      =CL		       WL    = CL
    214	      =CH		       WH    = CH
    215	      =CX		       W   = CX	 ; WORK	REGISTER
    216	      =DX		       R   = DX	 ; IO &	ARITH REG
    217
    218					     ; CX DI SCRATCH
    219					     ; KEEP I DSP RDP RT
    220
    221	      =DI		       NACC  =	     DI
    222	      =BP			     NBASE   =	     BP
    223
    224				     ; MINIMAL SET INTERPRETTER	COMMANDS
    225				     ; METHOD	    COMMANDS  (DOES (VAR (CONST	(CONST2	(DEFER (DEFER2
    226				     ;			      (SETVAR (SETVAR2 (CONST3 (SETPOINT (POINT
    227				     ;			      (BARY (WARY (RW_BLK
    228				     ; CONTROL	    COMMANDS  (IF (JUMP	(CALL (NEXT (FOR (NEST (EXEC (PERF
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 5
NF.asm



    229				     ;			      (GOTO (RETURN (EX	(XNEST (IFZ (IFM
    230				     ; RETURN STACK COMMANDS  POP PUSH RDROP I J
    231				     ; DATA STACK   COMMANDS  DUP DROP XCHG
    232				     ; MATH	    COMMANDS  +2/ LIT  ABS NEG NOT _ 1-	2- 1+ 2+
    233				     ; LOGICAL	    COMMANDS  XOR AND
    234				     ; DATA TRANSF  COMMANDS  @R+ !R+ C!R+
    235				     ; IO	    COMMANDS  (IO
    236
    237	0000			     MyCseg  segment para  use16
    238
    239					     assume cs:	MyCseg,	 ds: MyCseg, ss: MyCseg, es: MyCseg
    240
    241					     org 100h
    242
    243	      =-0100		     @TBUF   = -256	     ; 256
    244	      =-0200		     @TIB    = @TBUF * 2     ; 256
    245	      =-0400		     @R_TOP  = @TIB * 2	     ; 512  RSTACK
    246	      =-0800		     @S_TOP  = @R_TOP *	2    ; 1024 DSTACK
    247	      =-1000		     @VOCTOP = @S_TOP *	2    ; 2048 = 4	BUFFERS	* 512
    248
    249	0100			     Start   Label byte
    250	0100			     _Start:
    251	0100  BB 1000		       mov   bx,1000h	  ; only 64k allocate
    252	0103  B4 4A		       mov   ah,4ah
    253	0105  CD 21		       int   21h
    254	0107			     @ABORT:
    255	0107  E8 006E		       CALL  @INIT
    256	010A  016Cr		       DW    _INIT
    257	010C  03FEr 011Er 011Ar	  +  @MAINLP DW	_EVAL,_TIB,_TBL,_ACCEPT,_OK,_JUMP,@MAINLP
    258	      015Cr 0158r 03A3r	  +
    259	      010Cr
    260
    261				       CONST_  _TBL,80H
1   262				       L_ _TBL
2   263					     ALIGN_  0
3   264				       IF    ($-START+0) AND 1
3   265				       NOP
3   266				     ?NOPCNT = ?NOPCNT+1
3   267				       ENDIF
2   268	011A			     _TBL:
1   269	011A  03D0r 0080	       DW    _CONS@,80H
    270				       CONST_  _TIB,-512
1   271				       L_ _TIB
2   272					     ALIGN_  0
3   273				       IF    ($-START+0) AND 1
3   274				       NOP
3   275				     ?NOPCNT = ?NOPCNT+1
3   276				       ENDIF
2   277	011E			     _TIB:
1   278	011E  03D0r FE00	       DW    _CONS@,-512
    279				       CONST_  _TBUF,-256
1   280				       L_ _TBUF
2   281					     ALIGN_  0
3   282				       IF    ($-START+0) AND 1
3   283				       NOP
3   284				     ?NOPCNT = ?NOPCNT+1
3   285				       ENDIF
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 6
NF.asm



2   286	0122			     _TBUF:
1   287	0122  03D0r FF00	       DW    _CONS@,-256
    288				       CONST_  _0,0
1   289				       L_ _0
2   290					     ALIGN_  0
3   291				       IF    ($-START+0) AND 1
3   292				       NOP
3   293				     ?NOPCNT = ?NOPCNT+1
3   294				       ENDIF
2   295	0126			     _0:
1   296	0126  03D0r 0000	       DW    _CONS@,0
    297				       CONST_  _1,1
1   298				       L_ _1
2   299					     ALIGN_  0
3   300				       IF    ($-START+0) AND 1
3   301				       NOP
3   302				     ?NOPCNT = ?NOPCNT+1
3   303				       ENDIF
2   304	012A			     _1:
1   305	012A  03D0r 0001	       DW    _CONS@,1
    306				       CONST_  _BL,32
1   307				       L_ _BL
2   308					     ALIGN_  0
3   309				       IF    ($-START+0) AND 1
3   310				       NOP
3   311				     ?NOPCNT = ?NOPCNT+1
3   312				       ENDIF
2   313	012E			     _BL:
1   314	012E  03D0r 0020	       DW    _CONS@,32
    315
    316
    317				      L_ _XHERE
1   318					     ALIGN_  0
2   319				       IF    ($-START+0) AND 1
2   320				       NOP
2   321				     ?NOPCNT = ?NOPCNT+1
2   322				       ENDIF
1   323	0132			     _XHERE:
    324	0132  0138r 0399r		     DW	_HERE,_EX
    325				       VALUE_  _HERE,FREEMEM
1   326				       ALIGN_ 0
2   327				       IF    ($-START+0) AND 1
2   328				       NOP
2   329				     ?NOPCNT = ?NOPCNT+1
2   330				       ENDIF
1   331	0136  03D6r		       DW _SETVAL@
1   332				       const_  _HERE,FREEMEM
2   333				       L_ _HERE
3   334					     ALIGN_  0
4   335				       IF    ($-START+0) AND 1
4   336				       NOP
4   337				     ?NOPCNT = ?NOPCNT+1
4   338				       ENDIF
3   339	0138			     _HERE:
2   340	0138  03D0r 04F6r	       DW    _CONS@,FREEMEM
    341				       VALUE_  _ETIB,0
1   342				       ALIGN_ 0
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 7
NF.asm



2   343				       IF    ($-START+0) AND 1
2   344				       NOP
2   345				     ?NOPCNT = ?NOPCNT+1
2   346				       ENDIF
1   347	013C  03D6r		       DW _SETVAL@
1   348				       const_  _ETIB,0
2   349				       L_ _ETIB
3   350					     ALIGN_  0
4   351				       IF    ($-START+0) AND 1
4   352				       NOP
4   353				     ?NOPCNT = ?NOPCNT+1
4   354				       ENDIF
3   355	013E			     _ETIB:
2   356	013E  03D0r 0000	       DW    _CONS@,0
    357				       VALUE_  _LTIB,0
1   358				       ALIGN_ 0
2   359				       IF    ($-START+0) AND 1
2   360				       NOP
2   361				     ?NOPCNT = ?NOPCNT+1
2   362				       ENDIF
1   363	0142  03D6r		       DW _SETVAL@
1   364				       const_  _LTIB,0
2   365				       L_ _LTIB
3   366					     ALIGN_  0
4   367				       IF    ($-START+0) AND 1
4   368				       NOP
4   369				     ?NOPCNT = ?NOPCNT+1
4   370				       ENDIF
3   371	0144			     _LTIB:
2   372	0144  03D0r 0000	       DW    _CONS@,0
    373				      L_ _XDICT
1   374					     ALIGN_  0
2   375				       IF    ($-START+0) AND 1
2   376				       NOP
2   377				     ?NOPCNT = ?NOPCNT+1
2   378				       ENDIF
1   379	0148			     _XDICT:
    380	0148  014Er 0399r		     DW	_DICT,_EX
    381				       VALUE_  _DICT,@VOCTOP
1   382				       ALIGN_ 0
2   383				       IF    ($-START+0) AND 1
2   384				       NOP
2   385				     ?NOPCNT = ?NOPCNT+1
2   386				       ENDIF
1   387	014C  03D6r		       DW _SETVAL@
1   388				       const_  _DICT,@VOCTOP
2   389				       L_ _DICT
3   390					     ALIGN_  0
4   391				       IF    ($-START+0) AND 1
4   392				       NOP
4   393				     ?NOPCNT = ?NOPCNT+1
4   394				       ENDIF
3   395	014E			     _DICT:
2   396	014E  03D0r F000	       DW    _CONS@,@VOCTOP
    397				       VALUE_  _CNTC,0
1   398				       ALIGN_ 0
2   399				       IF    ($-START+0) AND 1
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 8
NF.asm



2   400				       NOP
2   401				     ?NOPCNT = ?NOPCNT+1
2   402				       ENDIF
1   403	0152  03D6r		       DW _SETVAL@
1   404				       const_  _CNTC,0
2   405				       L_ _CNTC
3   406					     ALIGN_  0
4   407				       IF    ($-START+0) AND 1
4   408				       NOP
4   409				     ?NOPCNT = ?NOPCNT+1
4   410				       ENDIF
3   411	0154			     _CNTC:
2   412	0154  03D0r 0000	       DW    _CONS@,0
    413	      =MYCSEG:0156	     _@NC = $-2
    414
    415				       ;DEFER_O	_EMIT,_DEMIT
    416				       DEFER_  _OK,_nop
1   417				       L_ _OK
2   418					     ALIGN_  0
3   419				       IF    ($-START+0) AND 1
3   420				       NOP
3   421				     ?NOPCNT = ?NOPCNT+1
3   422				       ENDIF
2   423	0158			     _OK:
1   424	0158  03A3r 03F8r	       DW     _JUMP,_nop
    425				       DEFER_  _ACCEPT,_nop ;_ACC
1   426				       L_ _ACCEPT
2   427					     ALIGN_  0
3   428				       IF    ($-START+0) AND 1
3   429				       NOP
3   430				     ?NOPCNT = ?NOPCNT+1
3   431				       ENDIF
2   432	015C			     _ACCEPT:
1   433	015C  03A3r 03F8r	       DW     _JUMP,_nop
    434				       DEFER_  _NUM,@NUM
1   435				       L_ _NUM
2   436					     ALIGN_  0
3   437				       IF    ($-START+0) AND 1
3   438				       NOP
3   439				     ?NOPCNT = ?NOPCNT+1
3   440				       ENDIF
2   441	0160			     _NUM:
1   442	0160  03A3r 032Fr	       DW     _JUMP,@NUM
    443				       DEFER_  _ERROR,_drop; _IDTYP
1   444				       L_ _ERROR
2   445					     ALIGN_  0
3   446				       IF    ($-START+0) AND 1
3   447				       NOP
3   448				     ?NOPCNT = ?NOPCNT+1
3   449				       ENDIF
2   450	0164			     _ERROR:
1   451	0164  03A3r 0391r	       DW     _JUMP,_drop
    452
    453				       POINT_  _REINI,_INIT,_@_INI
1   454				       L_ _REINI
2   455					     ALIGN_  0
3   456				       IF    ($-START+0) AND 1
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 9
NF.asm



3   457				       NOP
3   458				     ?NOPCNT = ?NOPCNT+1
3   459				       ENDIF
2   460	0168			     _REINI:
1   461	0168  038Fr		       DW _POP
1   462				       vector_	 _INIT,_@_INI
2   463				       ALIGN_ 0
3   464				       IF    ($-START+0) AND 1
3   465				       NOP
3   466				     ?NOPCNT = ?NOPCNT+1
3   467				       ENDIF
2   468	016A  03D6r		       DW _SETVAL@
2   469				       DEFER_	_INIT,_@_INI
3   470				       L_ _INIT
4   471					     ALIGN_  0
5   472				       IF    ($-START+0) AND 1
5   473				       NOP
5   474				     ?NOPCNT = ?NOPCNT+1
5   475				       ENDIF
4   476	016C			     _INIT:
3   477	016C  03A3r 0468r	       DW     _JUMP,_@_INI
    478				       POINT_  _SETPNT,_DOIT?,0
1   479				       L_ _SETPNT
2   480					     ALIGN_  0
3   481				       IF    ($-START+0) AND 1
3   482				       NOP
3   483				     ?NOPCNT = ?NOPCNT+1
3   484				       ENDIF
2   485	0170			     _SETPNT:
1   486	0170  038Fr		       DW _POP
1   487				       vector_	 _DOIT?,0
2   488				       ALIGN_ 0
3   489				       IF    ($-START+0) AND 1
3   490				       NOP
3   491				     ?NOPCNT = ?NOPCNT+1
3   492				       ENDIF
2   493	0172  03D6r		       DW _SETVAL@
2   494				       DEFER_	_DOIT?,0
3   495				       L_ _DOIT?
4   496					     ALIGN_  0
5   497				       IF    ($-START+0) AND 1
5   498				       NOP
5   499				     ?NOPCNT = ?NOPCNT+1
5   500				       ENDIF
4   501	0174			     _DOIT?:
3   502	0174  03A3r 0000	       DW     _JUMP,0
    503
    504	0178			     @INIT:
    505	0178  5E		       POP   I
    506	0179  BC FC00		       MOV   RSP,@R_TOP
    507	017C  B8 F800		       MOV   DSP,@S_TOP
    508				       JMP_  @MAIN
1   509	017F  EB 05			     jmp  SHORT	@MAIN
    510
    511				     ; -----------------  MAIN	LOOP  ---------------
    512
    513	0181			     @NEST:
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 10
NF.asm



    514	0181  55		       PUSH  RT
    515	0182  8B EE		       MOV   RT,I
    516	0184  8B F7		       MOV   I,A
    517	0186			     @MAIN:
    518				       LDP_  A
1   519	0186  97			     XCHG    A,AX
1   520	0187  AD			     LODSW
1   521	0188  A8 01			     TEST    AL,1
1   522	018A  97			     XCHG    A,AX
    523	018B  74 F4		       JE      @NEST
    524	018D  47		       INC   A
    525	018E  FF 55 FE		       CALL  [A-2]
    526				       JMP_  @MAIN
1   527	0191  EB F3			     jmp  SHORT	@MAIN
    528
    529				     ; -------------- CONTROL  -------------
    530
    531	0193			     @?SKIP:
    532				       ?ZERO_ T
1   533	0193  0B DB		       OR  T,T
    534	0195  74 02		       JE    @IFM1
    535	0197  C3		       RET
    536	0198			     @IF:
    537	0198  4B		       DEC   T
    538	0199			     @IFM1:
    539	0199  43		       INC   T
    540				       DPOP  T
1   541					     X_
2   542	019A  94			     xchg Rsp,DSP
1   543	019B  5B			     POP     T
1   544					     X_
2   545	019C  94			     xchg Rsp,DSP
    546	019D  74 06		       JE    @JUMP
    547	019F			     @SKIP:
    548	019F  46		       INC   I
    549	01A0			     @SKIP1:
    550	01A0  46		       INC   I
    551	01A1  C3		       RET
    552
    553	01A2			     @NEXT:    ; (NEXT
    554	01A2  4D		       DEC   RT
    555	01A3  78 FA		       JS    @SKIP
    556	01A5			     @JUMP:    ; (JUMP
    557	01A5  8B 34		       MOV   I,[I]
    558	01A7  C3		       RET
    559
    560	01A8			     @FOR:
    561	01A8  8B 34		       MOV   I,[I]
    562	01AA			     @PUSH:
    563	01AA  59		       POP   W
    564	01AB  55		       PUSH  RT
    565	01AC  8B EB		       MOV   RT,T
    566				       DPOP  T
1   567					     X_
2   568	01AE  94			     xchg Rsp,DSP
1   569	01AF  5B			     POP     T
1   570					     X_
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 11
NF.asm



2   571	01B0  94			     xchg Rsp,DSP
    572	01B1  FF E1		       JMP   W
    573
    574	01B3			     @POP:
    575				       Dpush T
1   576					     X_
2   577	01B3  94			     xchg Rsp,DSP
1   578	01B4  53			     PUSH  T
1   579					     X_
2   580	01B5  94			     xchg Rsp,DSP
    581	01B6  8B DD		       MOV   T,RT
    582				       JMP_  @RDROP
1   583	01B8  EB 05			     jmp  SHORT	@RDROP
    584
    585	01BA			     @DROPX:
    586				       DPOP  T
1   587					     X_
2   588	01BA  94			     xchg Rsp,DSP
1   589	01BB  5B			     POP     T
1   590					     X_
2   591	01BC  94			     xchg Rsp,DSP
    592	01BD			     @RET:
    593	01BD  8B F5		       MOV   I,RT
    594	01BF			     @RDROP:
    595	01BF  59		       POP   W
    596	01C0  5D		       POP   RT
    597	01C1  FF E1		       JMP   W
    598
    599	01C3			     @EX:
    600	01C3  87 F5		       XCHG  I,RT
    601	01C5  C3		       RET
    602
    603				     ;---------- LOGICAL COMMANDS  XOR AND NOT ULESS ZEQ -------------
    604
    605				      XT_ _ULESS,@NIP@
1   606				       P_ _ULESS
2   607					     ALIGN_  0
3   608				       IF    ($-START+0) AND 1
3   609				       NOP
3   610				     ?NOPCNT = ?NOPCNT+1
3   611				       ENDIF
2   612	01C6  90			     NOP
2   613	01C7			     _ULESS:
2   614					     org   $-1
1   615	01C6  0247r		       DW      @NIP@
    616	01C8  2B CB		       SUB   W,T
    617				       JMP_  @FLAG
1   618	01CA  EB 03			     jmp  SHORT	@FLAG
    619
    620	01CC			     @ZEQ:
    621	01CC  83 EB 01		       SUB   T,1
    622	01CF			     @FLAG:
    623	01CF  1B DB		       SBB   T,T
    624	01D1  C3		       RET
    625
    626				      XT_ _XOR,@NIP@
1   627				       P_ _XOR
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 12
NF.asm



2   628					     ALIGN_  0
3   629				       IF    ($-START+0) AND 1
3   630				       NOP
3   631				     ?NOPCNT = ?NOPCNT+1
3   632				       ENDIF
2   633	01D2  90			     NOP
2   634	01D3			     _XOR:
2   635					     org   $-1
1   636	01D2  0247r		       DW      @NIP@
    637	01D4  33 D9		       XOR   T,W
    638	01D6  C3		       RET
    639
    640				      XT_ _NAND,@NIP@
1   641				       P_ _NAND
2   642					     ALIGN_  0
3   643				       IF    ($-START+0) AND 1
3   644	01D7  90		       NOP
3   645	      =0001		     ?NOPCNT = ?NOPCNT+1
3   646				       ENDIF
2   647	01D8  90			     NOP
2   648	01D9			     _NAND:
2   649					     org   $-1
1   650	01D8  0247r		       DW      @NIP@
    651	01DA  23 D9		       AND   T,W
    652	01DC			     @NOT:
    653	01DC  43		       INC   T
    654	01DD			     @NEG:
    655	01DD  F7 DB		       NEG   T
    656	01DF  C3		       RET
    657
    658				     ;------------------ STRING	COMMANDS --------------------
    659
    660				      XT_  _CMOVEU,@PARAM3@
1   661				       P_ _CMOVEU
2   662					     ALIGN_  0
3   663				       IF    ($-START+0) AND 1
3   664				       NOP
3   665				     ?NOPCNT = ?NOPCNT+1
3   666				       ENDIF
2   667	01E0  90			     NOP
2   668	01E1			     _CMOVEU:
2   669					     org   $-1
1   670	01E0  025Er		       DW      @PARAM3@
    671	01E2  87 F9		       XCHG  DI,CX
    672	01E4  03 F9		       ADD   DI,CX
    673	01E6			     @MPUSH:
    674	01E6  03 F1		       ADD   SI,CX   ; AFTER NAME ADDRESS
    675	01E8  FD		       STD	     ; BACKWARDS
    676	01E9  A6		       CMPSB	     ; PREPARE FOR DIRECTION
    677	01EA  F3> A4		       REP   MOVSB   ; NAME  MOVE
    678	01EC  FC		       CLD
    679	01ED			     @PUSHB1:
    680	01ED  47		       INC   DI
    681	01EE			     @PUSHB:
    682				       Dpush DI
1   683					     X_
2   684	01EE  94			     xchg Rsp,DSP
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 13
NF.asm



1   685	01EF  57			     PUSH  DI
1   686					     X_
2   687	01F0  94			     xchg Rsp,DSP
    688	01F1  C3		       RET
    689
    690				      XT_  _STRPUSH,@PARAM2@	   ; S!-
1   691				       P_ _STRPUSH
2   692					     ALIGN_  0
3   693				       IF    ($-START+0) AND 1
3   694				       NOP
3   695				     ?NOPCNT = ?NOPCNT+1
3   696				       ENDIF
2   697	01F2  90			     NOP
2   698	01F3			     _STRPUSH:
2   699					     org   $-1
1   700	01F2  025Br		       DW      @PARAM2@
    701	01F4  8A 0C		       mov   Wl,[Si]
    702				       CLR_  Wh
1   703	01F6  32 ED		       XOR   Wh,Wh
    704	01F8  41		       INC   W
    705				      XTSK_  _MPUSH,@PARAM3@ ; SI CX DI	  ASSUME
1   706					     ALIGN_  1
2   707				       IF    ($-START+1) AND 1
2   708				       NOP
2   709				     ?NOPCNT = ?NOPCNT+1
2   710				       ENDIF
1   711					     SKIPA_
2   712	01F9  3D			     DB	   03DH
1   713					     P_	     _MPUSH
2   714					     ALIGN_  0
3   715				       IF    ($-START+0) AND 1
3   716				       NOP
3   717				     ?NOPCNT = ?NOPCNT+1
3   718				       ENDIF
2   719	01FA  90			     NOP
2   720	01FB			     _MPUSH:
2   721					     org   $-1
1   722	01FA  025Er			     DW	@PARAM3@
    723				       JMP_  @MPUSH
1   724	01FC  EB E8			     jmp  SHORT	@MPUSH
    725
    726				      XT_   _CMOVE,@PARAM3@	     ; CMOVE
1   727				       P_ _CMOVE
2   728					     ALIGN_  0
3   729				       IF    ($-START+0) AND 1
3   730				       NOP
3   731				     ?NOPCNT = ?NOPCNT+1
3   732				       ENDIF
2   733	01FE  90			     NOP
2   734	01FF			     _CMOVE:
2   735					     org   $-1
1   736	01FE  025Er		       DW      @PARAM3@
    737	0200  87 F9		       XCHG  DI,CX
    738				       JMP_  @CMOVE
1   739	0202  EB 07			     jmp  SHORT	@CMOVE
    740
    741				      XT_   _MAKESTR,@PARAM3@	     ; S!
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 14
NF.asm



1   742				       P_ _MAKESTR
2   743					     ALIGN_  0
3   744				       IF    ($-START+0) AND 1
3   745				       NOP
3   746				     ?NOPCNT = ?NOPCNT+1
3   747				       ENDIF
2   748	0204  90			     NOP
2   749	0205			     _MAKESTR:
2   750					     org   $-1
1   751	0204  025Er		       DW      @PARAM3@
    752	0206  88 0D		       MOV   [DI],WL
    753				       CLR_  WH
1   754	0208  32 ED		       XOR   WH,WH
    755	020A  47		       INC   DI
    756	020B			     @CMOVE:
    757	020B  F3> A4		       REP   MOVSB   ; NAME  MOVE
    758				       JMP_  @PUSHB
1   759	020D  EB DF			     jmp  SHORT	@PUSHB
    760
    761				     ;-------------- TRANSFER ------------------------
    762
    763				      XT_ _NIP,@NIP@
1   764				       P_ _NIP
2   765					     ALIGN_  0
3   766				       IF    ($-START+0) AND 1
3   767	020F  90		       NOP
3   768	      =0002		     ?NOPCNT = ?NOPCNT+1
3   769				       ENDIF
2   770	0210  90			     NOP
2   771	0211			     _NIP:
2   772					     org   $-1
1   773	0210  0247r		       DW      @NIP@
    774	0212  C3		       RET
    775
    776	0213			     @XA:
    777	0213  87 EA		       XCHG  RT,R
    778	0215  C3		       RET
    779
    780				      XT_ _XA,@XA
1   781				       P_ _XA
2   782					     ALIGN_  0
3   783				       IF    ($-START+0) AND 1
3   784				       NOP
3   785				     ?NOPCNT = ?NOPCNT+1
3   786				       ENDIF
2   787	0216  90			     NOP
2   788	0217			     _XA:
2   789					     org   $-1
1   790	0216  0213r		       DW      @XA
    791
    792				      XT_ _STM,@NIP2M@
1   793				       P_ _STM
2   794					     ALIGN_  0
3   795				       IF    ($-START+0) AND 1
3   796				       NOP
3   797				     ?NOPCNT = ?NOPCNT+1
3   798				       ENDIF
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 15
NF.asm



2   799	0218  90			     NOP
2   800	0219			     _STM:
2   801					     org   $-1
1   802	0218  0245r		       DW      @NIP2M@
    803				       JMP_  @ST
1   804	021A  EB 02			     jmp  SHORT	@ST
    805
    806				      XT_ _ST,@NIP@
1   807				       P_ _ST
2   808					     ALIGN_  0
3   809				       IF    ($-START+0) AND 1
3   810				       NOP
3   811				     ?NOPCNT = ?NOPCNT+1
3   812				       ENDIF
2   813	021C  90			     NOP
2   814	021D			     _ST:
2   815					     org   $-1
1   816	021C  0247r		       DW      @NIP@
    817	021E			     @ST:
    818	021E  89 0F		       MOV [T],W
    819	0220  C3		       RET
    820
    821				      XT_ _STP,@NIP2P@
1   822				       P_ _STP
2   823					     ALIGN_  0
3   824				       IF    ($-START+0) AND 1
3   825	0221  90		       NOP
3   826	      =0003		     ?NOPCNT = ?NOPCNT+1
3   827				       ENDIF
2   828	0222  90			     NOP
2   829	0223			     _STP:
2   830					     org   $-1
1   831	0222  0242r		       DW      @NIP2P@
    832	0224  89 4F FE		       MOV   [T-@WORDSIZE],W
    833	0227  C3		       RET
    834
    835				      XT_ _STBP,@NIP1P@
1   836				       P_ _STBP
2   837					     ALIGN_  0
3   838				       IF    ($-START+0) AND 1
3   839				       NOP
3   840				     ?NOPCNT = ?NOPCNT+1
3   841				       ENDIF
2   842	0228  90			     NOP
2   843	0229			     _STBP:
2   844					     org   $-1
1   845	0228  0243r		       DW      @NIP1P@
    846	022A  88 4F FF		       MOV   [T-1],WL
    847	022D  C3		       RET
    848
    849	022E			     @RLDP:
    850				       DPUSH  T
1   851					     X_
2   852	022E  94			     xchg Rsp,DSP
1   853	022F  53			     PUSH  T
1   854					     X_
2   855	0230  94			     xchg Rsp,DSP
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 16
NF.asm



    856	0231  3E: 8B 5E	00	       MOV   T,DS:[RT]
    857	0235			     @RSKIP:
    858	0235  8D 6E 02		       LEA   RT,[RT+@WORDSIZE]
    859	0238  C3		       RET
    860
    861	0239			     @RSTP:
    862	0239  3E: 89 5E	00	       MOV   DS:[RT],T
    863				       DPOP  T
1   864					     X_
2   865	023D  94			     xchg Rsp,DSP
1   866	023E  5B			     POP     T
1   867					     X_
2   868	023F  94			     xchg Rsp,DSP
    869	0240  EB F3		       JMP   @RSKIP
    870
    871	0242			     @NIP2P@:
    872	0242  43		       INC   T
    873	0243			     @NIP1P@:
    874	0243  43		       INC   T
    875				       SKIPA_
1   876	0244  3D			     DB	   03DH
    877	0245			     @NIP2M@:
    878	0245  4B		       DEC   T
    879	0246			     @NIP1M@:
    880	0246  4B		       DEC   T
    881	0247			     @NIP@:
    882				       DPOP  W
1   883					     X_
2   884	0247  94			     xchg Rsp,DSP
1   885	0248  59			     POP     W
1   886					     X_
2   887	0249  94			     xchg Rsp,DSP
    888	024A  FF E7		       JMP   A
    889
    890	024C			     @RETUPLE2@:; USES & RETURNS TOP & NEXT ELEMENT ONTO STACK
    891				       DPOP  W
1   892					     X_
2   893	024C  94			     xchg Rsp,DSP
1   894	024D  59			     POP     W
1   895					     X_
2   896	024E  94			     xchg Rsp,DSP
    897	024F			     @RETUPLE1@:   ; USES TOP |	RETURNS	TOP & NEXT ELEMENT ONTO	STACK
    898	024F  FF D7		       CALL  A
    899	0251			     @RETVAL:
    900				       DPUSH W
1   901					     X_
2   902	0251  94			     xchg Rsp,DSP
1   903	0252  51			     PUSH  W
1   904					     X_
2   905	0253  94			     xchg Rsp,DSP
    906	0254  C3		       RET
    907
    908	0255			     @RETVAL@:
    909	0255  FF D7		       CALL  A
    910	0257  87 D9		       XCHG  T,W
    911				       JMP_  @RETVAL
1   912	0259  EB F6			     jmp  SHORT	@RETVAL
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 17
NF.asm



    913
    914	025B			     @PARAM2@:
    915				       Dpush  T
1   916					     X_
2   917	025B  94			     xchg Rsp,DSP
1   918	025C  53			     PUSH  T
1   919					     X_
2   920	025D  94			     xchg Rsp,DSP
    921	025E			     @PARAM3@:
    922	025E  56 52 55		       PUSH  I R RT
    923				       x_
1   924	0261  94			     xchg Rsp,DSP
    925	0262  59		       pop   Cx
    926	0263  5E		       pop   SI
    927				       x_
1   928	0264  94			     xchg Rsp,DSP
    929	0265  87 DF		       xchg  t,a
    930	0267  FF D3		       CALL  T
    931	0269  5D 5A 5E		       POP   RT	R I
    932
    933				     ;vvvvvvvvvvvvvv STACK vvvvvvvvvvvvvvvvvv
    934
    935	026C			     @DROP:
    936				       DPOP  T
1   937					     X_
2   938	026C  94			     xchg Rsp,DSP
1   939	026D  5B			     POP     T
1   940					     X_
2   941	026E  94			     xchg Rsp,DSP
    942	026F  C3		       RET
    943
    944	0270			     @BEMIT:
    945	0270  93		       XCHG  T,AX
    946	0271  B4 0E		       MOV   AH,0EH
    947	0273  CD 10		       INT   10H
    948	0275  93		       XCHG  T,AX
    949				       JMP_  @DROP
1   950	0276  EB F4			     jmp  SHORT	@DROP
    951
    952				      XT_ _PLUS,@NIP@
1   953				       P_ _PLUS
2   954					     ALIGN_  0
3   955				       IF    ($-START+0) AND 1
3   956				       NOP
3   957				     ?NOPCNT = ?NOPCNT+1
3   958				       ENDIF
2   959	0278  90			     NOP
2   960	0279			     _PLUS:
2   961					     org   $-1
1   962	0278  0247r		       DW      @NIP@
    963	027A  03 D9		       ADD   T,W
    964	027C  C3		       RET
    965
    966	027D			     @XCHG:
    967	027D  87 DD		       XCHG  T,RT
    968	027F  C3		       RET
    969
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 18
NF.asm



    970				      XT_ _OVER,@RETUPLE2@
1   971				       P_ _OVER
2   972					     ALIGN_  0
3   973				       IF    ($-START+0) AND 1
3   974				       NOP
3   975				     ?NOPCNT = ?NOPCNT+1
3   976				       ENDIF
2   977	0280  90			     NOP
2   978	0281			     _OVER:
2   979					     org   $-1
1   980	0280  024Cr		       DW      @RETUPLE2@
    981	0282			     @DUP:
    982				       Dpush T
1   983					     X_
2   984	0282  94			     xchg Rsp,DSP
1   985	0283  53			     PUSH  T
1   986					     X_
2   987	0284  94			     xchg Rsp,DSP
    988	0285  C3		       RET
    989
    990	0286			     @J:
    991	0286  8B FC		       MOV   A,RSP
    992				       Dpush SS:A[@WORDSIZE*2]
1   993					     X_
2   994	0288  94			     xchg Rsp,DSP
1   995	0289  36: FF 75	04		     PUSH  SS:A[@WORDSIZE*2]
1   996					     X_
2   997	028D  94			     xchg Rsp,DSP
    998	028E  C3		       RET
    999
   1000				     ;^^^^^^^^^^^^^^^^ MATH & LOGIC ^^^^^^^^^^^^^^^^^^
   1001
   1002	028F			     @DEC:
   1003	028F  FF 0F		       DEC   PW	[T]
   1004				       JMP_  @DROP
1  1005	0291  EB D9			     jmp  SHORT	@DROP
   1006
   1007	0293			     @INC:
   1008	0293  FF 07		       INC   PW	[T]
   1009				       JMP_  @DROP
1  1010	0295  EB D5			     jmp  SHORT	@DROP
   1011
   1012	0297			     @ALIGN:
   1013	0297  F6 C3 01		       TEST  TL,1
   1014	029A  75 0F		       JnE     @1p
   1015	029C  C3		       ret
   1016
   1017				      XT_ _CSTR,@RETVAL@
1  1018				       P_ _CSTR
2  1019					     ALIGN_  0
3  1020				       IF    ($-START+0) AND 1
3  1021	029D  90		       NOP
3  1022	      =0004		     ?NOPCNT = ?NOPCNT+1
3  1023				       ENDIF
2  1024	029E  90			     NOP
2  1025	029F			     _CSTR:
2  1026					     org   $-1
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 19
NF.asm



1  1027	029E  0255r		       DW      @RETVAL@
   1028				       CLR_  WH
1  1029	02A0  32 ED		       XOR   WH,WH
   1030	02A2  8A 0F		       MOV   WL,[T]
   1031	02A4  43		       INC   T
   1032	02A5  C3		       RET
   1033
   1034				      XT_ _STR,@RETVAL@
1  1035				       P_ _STR
2  1036					     ALIGN_  0
3  1037				       IF    ($-START+0) AND 1
3  1038				       NOP
3  1039				     ?NOPCNT = ?NOPCNT+1
3  1040				       ENDIF
2  1041	02A6  90			     NOP
2  1042	02A7			     _STR:
2  1043					     org   $-1
1  1044	02A6  0255r		       DW      @RETVAL@
   1045	02A8  8B 0F		       MOV   W,[T]
   1046	02AA			     @2p:
   1047	02AA  43		       INC     T
   1048	02AB			     @1p:
   1049	02AB  43		       INC     T
   1050	02AC  C3		       RET
   1051
   1052	02AD			     @2M:
   1053	02AD  4B		       DEC   T
   1054	02AE			     @1M:
   1055	02AE  4B		       DEC   T
   1056	02AF  C3		       RET
   1057
   1058	02B0			     @LDB:
   1059	02B0  8A 1F		       MOV   TL,[T]
   1060	02B2			     @W_B:
   1061				       CLR_  TH
1  1062	02B2  32 FF		       XOR   TH,TH
   1063	02B4  C3		       RET
   1064
   1065				      XT_ _SWAP,@RETUPLE2@
1  1066				       P_ _SWAP
2  1067					     ALIGN_  0
3  1068				       IF    ($-START+0) AND 1
3  1069	02B5  90		       NOP
3  1070	      =0005		     ?NOPCNT = ?NOPCNT+1
3  1071				       ENDIF
2  1072	02B6  90			     NOP
2  1073	02B7			     _SWAP:
2  1074					     org   $-1
1  1075	02B6  024Cr		       DW      @RETUPLE2@
   1076	02B8			     @SWAP:
   1077	02B8  87 D9		       XCHG  T,W
   1078	02BA  C3		       RET
   1079
   1080	02BB			     @LD:
   1081	02BB  8B 1F		       MOV   T,[T]
   1082	02BD  C3		       RET
   1083
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 20
NF.asm



   1084				      XT_ _PLAVG,@RETUPLE2@	     ; (+2/
1  1085				       P_ _PLAVG
2  1086					     ALIGN_  0
3  1087				       IF    ($-START+0) AND 1
3  1088				       NOP
3  1089				     ?NOPCNT = ?NOPCNT+1
3  1090				       ENDIF
2  1091	02BE  90			     NOP
2  1092	02BF			     _PLAVG:
2  1093					     org   $-1
1  1094	02BE  024Cr		       DW      @RETUPLE2@
   1095	02C0  03 CB		       ADD   W,T
   1096	02C2  8B D9		       MOV   T,W
   1097	02C4			     @DIV2:
   1098	02C4  D1 DB		       RCR   T,1
   1099	02C6			     NO_DIV:
   1100	02C6  C3		       RET
   1101
   1102				      XT_ _D2DIV,@RETUPLE2@	     ; (D2/
1  1103				       P_ _D2DIV
2  1104					     ALIGN_  0
3  1105				       IF    ($-START+0) AND 1
3  1106	02C7  90		       NOP
3  1107	      =0006		     ?NOPCNT = ?NOPCNT+1
3  1108				       ENDIF
2  1109	02C8  90			     NOP
2  1110	02C9			     _D2DIV:
2  1111					     org   $-1
1  1112	02C8  024Cr		       DW      @RETUPLE2@
   1113				       JMP_  @D2DIV
1  1114	02CA  EB 09			     jmp  SHORT	@D2DIV
   1115
   1116				      XT_ _PMUL,@RETUPLE2@	     ; (+*
1  1117				       P_ _PMUL
2  1118					     ALIGN_  0
3  1119				       IF    ($-START+0) AND 1
3  1120				       NOP
3  1121				     ?NOPCNT = ?NOPCNT+1
3  1122				       ENDIF
2  1123	02CC  90			     NOP
2  1124	02CD			     _PMUL:
2  1125					     org   $-1
1  1126	02CC  024Cr		       DW      @RETUPLE2@
   1127	02CE  F6 C1 01			     TEST    WL,1
   1128	02D1  74 02			     JZ	     @D2DIV
   1129	02D3  03 DA			     ADD     t,R
   1130	02D5			     @D2DIV:
   1131	02D5  D1 DB			     RCR     T,1
   1132	02D7  D1 D9			     RCR     W,1
   1133	02D9  C3		       RET
   1134
   1135				      XT_  _SDIV,@RETUPLE2@	; (-/
1  1136				       P_ _SDIV
2  1137					     ALIGN_  0
3  1138				       IF    ($-START+0) AND 1
3  1139				       NOP
3  1140				     ?NOPCNT = ?NOPCNT+1
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 21
NF.asm



3  1141				       ENDIF
2  1142	02DA  90			     NOP
2  1143	02DB			     _SDIV:
2  1144					     org   $-1
1  1145	02DA  024Cr		       DW      @RETUPLE2@
   1146	02DC  D1 E1			     SHL     W,1
   1147	02DE  D1 D3			     RCL     T,1
   1148	02E0  3B DA			     CMP     T,R
   1149	02E2  72 E2			     JB		 NO_DIV
   1150	02E4  2B DA			     SUB     T,R
   1151	02E6  41			     INC     W
   1152	02E7  C3		       RET
   1153
   1154				     ;---------------- FIND -----------------------
   1155
   1156				      XT_  _FND,@PARAM2@     ; (FIND
1  1157				       P_ _FND
2  1158					     ALIGN_  0
3  1159				       IF    ($-START+0) AND 1
3  1160				       NOP
3  1161				     ?NOPCNT = ?NOPCNT+1
3  1162				       ENDIF
2  1163	02E8  90			     NOP
2  1164	02E9			     _FND:
2  1165					     org   $-1
1  1166	02E8  025Br		       DW      @PARAM2@
   1167	02EA  33 C9		       XOR   CX,CX
   1168	02EC			     NEXTfnd:
   1169	02EC  56		       PUSH  SI
   1170	02ED  03 F9		       ADD     DI,CX
   1171	02EF  8D 7D 04		       LEA   dI,[DI+4]
   1172	02F2  8A 0D		       mov   cl,[DI]
   1173	02F4  E3 0C		       Jcxz  @FND?
   1174	02F6  41		       INC   CX
   1175	02F7  F3> A6		       repe  cmpsb
   1176	02F9  5E		       POP   SI
   1177	02FA  75 F0		       JNE   NEXTFND
   1178	02FC  B1 02		       mov   cL,2	 ; fnd_ok
   1179	02FE  01 4D 02		       ADD     [DI+2],CX
   1180				       SKIPB_
1  1181	0301  3C			     DB	   03CH
   1182	0302			     @FND?:
   1183	0302  5F		       POP   DI
   1184				       x_
1  1185	0303  94			     xchg Rsp,DSP
   1186	0304  57		       PUSH  DI	     ; LENGTH OF THE SOURCE
   1187	0305  51		       PUSH  CX	     ; REST LEN	OF BUF
   1188				       X_
1  1189	0306  94			     xchg Rsp,DSP
   1190	0307  C3		       RET
   1191
   1192				     ;----------------	     PARSE   -----------------
   1193				     ;	CHAR etib ltib	/  START LEN >IN
   1194
   1195				      XT_  _PARS,@PARAM3@ ;= (PARS
1  1196				       P_ _PARS
2  1197					     ALIGN_  0
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 22
NF.asm



3  1198				       IF    ($-START+0) AND 1
3  1199				       NOP
3  1200				     ?NOPCNT = ?NOPCNT+1
3  1201				       ENDIF
2  1202	0308  90			     NOP
2  1203	0309			     _PARS:
2  1204					     org   $-1
1  1205	0308  025Er		       DW      @PARAM3@
   1206	030A  87 F9		       XCHG  DI,CX
   1207	030C  96		       XCHG  AX,SI     ; DSP SAVE
   1208	030D  2B F9		       SUB   DI,CX
   1209	030F  E3 0A		       JCXZ  @@SKIPX
   1210	0311  3C 20		       CMP   AL,' '
   1211	0313  75 06		       JNE   @@SKIPX
   1212	0315  F3> AE		       REPE  SCASB
   1213	0317  74 02		       JE      @@SKIPX
   1214	0319  4F		       DEC   DI
   1215	031A  41		       INC   CX
   1216	031B			     @@SKIPX:
   1217	031B  8B D7		       MOV   DX,di     ;     START OF THE SOURCE
   1218	031D  E3 05		       JCXZ  @@WEX
   1219	031F  F2> AE		       REPNE SCASB
   1220	0321  75 01		       JNE   @@WEX
   1221	0323  4F		       DEC   DI
   1222	0324			     @@WEX:	       ; END OF	THE SOURCE  IN DI
   1223	0324  96		       XCHG  AX,SI     ; DSP RESTORE
   1224	0325  2B FA		       SUB   DI,DX     ; LENGTH	OF THE WORD
   1225				       X_
1  1226	0327  94			     xchg Rsp,DSP
   1227	0328  52		       PUSH  DX
   1228	0329  57		       PUSH  DI
   1229	032A  51		       PUSH  CX		  ; CX REMAIN LENGTH OF	THE BUFFER
   1230				       X_
1  1231	032B  94			     xchg Rsp,DSP
   1232	032C  C3		       RET
   1233
   1234				      XT_  @num,@PARAM2@      ;= (>#	   ; (NUM
1  1235				       P_ @num
2  1236					     ALIGN_  0
3  1237				       IF    ($-START+0) AND 1
3  1238	032D  90		       NOP
3  1239	      =0007		     ?NOPCNT = ?NOPCNT+1
3  1240				       ENDIF
2  1241	032E  90			     NOP
2  1242	032F			     @num:
2  1243					     org   $-1
1  1244	032E  025Br		       DW      @PARAM2@
   1245	0330  50		       push  ax	       ; DSP SAVE
   1246	0331  B8 000A		       MOV   AX,10     ; base := 10
   1247	0334  E8 0006		       CALL  @@NUM
   1248	0337  58		       pop   AX	       ; DSP RESTORE
   1249				       X_
1  1250	0338  94			     xchg Rsp,DSP
   1251	0339  53		       PUSH  BX
   1252	033A  51		       PUSH  CX
   1253				       X_
1  1254	033B  94			     xchg Rsp,DSP
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 23
NF.asm



   1255	033C  C3		       RET
   1256
   1257	033D			     @@NUM:
   1258	033D  E8 0016		       CALL  @@numini
   1259	0340  E8 003B		       CALL  @@SGN
   1260	0343			     @@NUMZ:
   1261	0343  E8 0002		       CALL  @@N1
   1262				       JMP_  @@NUMZ
1  1263	0346  EB FB			     jmp  SHORT	@@NUMZ
   1264
   1265	0348			     @@n1:
   1266	0348  3C 24		       cmp   al,'$'	; BASE := 16
   1267	034A  75 04		       JNE   @@N2
   1268	034C  B0 10		       MOV   al,16
   1269	034E  EB 08		       jmp   SHORT @@setbas
   1270
   1271	0350  3C 23		     @@N2:   cmp  al,'#'     ; BASE := CX
   1272	0352  75 0B		       JNE   @@N3
   1273	0354  8A C3		       mov   al,Bl
   1274	0356			     @@numini:
   1275	0356  33 DB		       Xor   Bx,Bx	; ACCUMULATOR
   1276	0358			     @@setbas:
   1277	0358  8B F8		       mov   DI,ax
   1278	035A			     @@END?:
   1279	035A  E3 1F		       JCXZ  @@ERNUM
   1280	035C			     @@GETC:
   1281	035C  49		       deC   CX
   1282	035D  AC		       LODSB
   1283	035E  C3		       RET
   1284
   1285	035F			     @@N3:
   1286	035F  3C 3A		       cmp   al,'9'+1
   1287	0361  72 08		       jc    @@ton2
   1288	0363  24 DF		       AND   AL,0DFH
   1289	0365  3C 41		       cmp   al,'A'	 ; no case sensivity
   1290	0367  72 12		       jc    @@ERNUM
   1291	0369  2C 07		       sub   al,7
   1292	036B			     @@ton2:
   1293	036B  2C 30		       sub   al,'0'
   1294	036D  3B C7		       cmp   ax,DI
   1295	036F  73 0A		       jnc   @@ERNUM
   1296	0371  93		       xchg  ax,Bx
   1297	0372  F7 E7		       mul   DI
   1298	0374  93		       xchg  ax,Bx
   1299	0375  03 D8		       add   Bx,ax
   1300	0377  E3 03		       JCXZ  @@EXNUM
   1301	0379  EB E1		       JMP   @@GETC
   1302	037B			     @@ERNUM:
   1303	037B  41		       INC   CX
   1304	037C			     @@EXNUM:
   1305	037C  5A		       pop   dx	   ; rdrop
   1306	037D			     @@noEXn:
   1307	037D  C3		       RET
   1308
   1309	037E			     @@SGN:
   1310	037E  3C 2D		       CMP   AL,'-'	; SGN
   1311	0380  75 C6		       JNE   @@N1
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 24
NF.asm



   1312	0382  5A		       POP   dX
   1313	0383  E8 FFD4		       CALL  @@END?
   1314	0386  FF D2		       CALL  dX
   1315	0388  F7 DB		       NEG   bX
   1316	038A  C3		       RET
   1317
   1318				     ;------------------------------------------------
   1319
   1320				      XT_  _J,@J		 ;. J
1  1321				       P_ _J
2  1322					     ALIGN_  0
3  1323				       IF    ($-START+0) AND 1
3  1324	038B  90		       NOP
3  1325	      =0008		     ?NOPCNT = ?NOPCNT+1
3  1326				       ENDIF
2  1327	038C  90			     NOP
2  1328	038D			     _J:
2  1329					     org   $-1
1  1330	038C  0286r		       DW      @J
   1331				      XT_ _POP,@POP	     ;.	POP
1  1332				       P_ _POP
2  1333					     ALIGN_  0
3  1334				       IF    ($-START+0) AND 1
3  1335				       NOP
3  1336				     ?NOPCNT = ?NOPCNT+1
3  1337				       ENDIF
2  1338	038E  90			     NOP
2  1339	038F			     _POP:
2  1340					     org   $-1
1  1341	038E  01B3r		       DW      @POP
   1342				      XT_ _DROP,@DROP		     ; DROP
1  1343				       P_ _DROP
2  1344					     ALIGN_  0
3  1345				       IF    ($-START+0) AND 1
3  1346				       NOP
3  1347				     ?NOPCNT = ?NOPCNT+1
3  1348				       ENDIF
2  1349	0390  90			     NOP
2  1350	0391			     _DROP:
2  1351					     org   $-1
1  1352	0390  026Cr		       DW      @DROP
   1353				      XT_ _XCHG,@XCHG		     ;.	XCHG
1  1354				       P_ _XCHG
2  1355					     ALIGN_  0
3  1356				       IF    ($-START+0) AND 1
3  1357				       NOP
3  1358				     ?NOPCNT = ?NOPCNT+1
3  1359				       ENDIF
2  1360	0392  90			     NOP
2  1361	0393			     _XCHG:
2  1362					     org   $-1
1  1363	0392  027Dr		       DW      @XCHG
   1364				      XT_ _PUSH,@PUSH
1  1365				       P_ _PUSH
2  1366					     ALIGN_  0
3  1367				       IF    ($-START+0) AND 1
3  1368				       NOP
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 25
NF.asm



3  1369				     ?NOPCNT = ?NOPCNT+1
3  1370				       ENDIF
2  1371	0394  90			     NOP
2  1372	0395			     _PUSH:
2  1373					     org   $-1
1  1374	0394  01AAr		       DW      @PUSH
   1375				      XT_ _DUP ,@DUP
1  1376				       P_ _DUP
2  1377					     ALIGN_  0
3  1378				       IF    ($-START+0) AND 1
3  1379				       NOP
3  1380				     ?NOPCNT = ?NOPCNT+1
3  1381				       ENDIF
2  1382	0396  90			     NOP
2  1383	0397			     _DUP:
2  1384					     org   $-1
1  1385	0396  0282r		       DW      @DUP
   1386				      ;XT_ _OVER,@OVER
   1387
   1388				      XT_ _EX	  ,@EX
1  1389				       P_ _EX
2  1390					     ALIGN_  0
3  1391				       IF    ($-START+0) AND 1
3  1392				       NOP
3  1393				     ?NOPCNT = ?NOPCNT+1
3  1394				       ENDIF
2  1395	0398  90			     NOP
2  1396	0399			     _EX:
2  1397					     org   $-1
1  1398	0398  01C3r		       DW      @EX
   1399				      XT_ _DROPX  ,@DROPX
1  1400				       P_ _DROPX
2  1401					     ALIGN_  0
3  1402				       IF    ($-START+0) AND 1
3  1403				       NOP
3  1404				     ?NOPCNT = ?NOPCNT+1
3  1405				       ENDIF
2  1406	039A  90			     NOP
2  1407	039B			     _DROPX:
2  1408					     org   $-1
1  1409	039A  01BAr		       DW      @DROPX
   1410				      XT_ _FOR,@FOR
1  1411				       P_ _FOR
2  1412					     ALIGN_  0
3  1413				       IF    ($-START+0) AND 1
3  1414				       NOP
3  1415				     ?NOPCNT = ?NOPCNT+1
3  1416				       ENDIF
2  1417	039C  90			     NOP
2  1418	039D			     _FOR:
2  1419					     org   $-1
1  1420	039C  01A8r		       DW      @FOR
   1421				      XT_ _NEXT,@NEXT		     ;.	(NEXT
1  1422				       P_ _NEXT
2  1423					     ALIGN_  0
3  1424				       IF    ($-START+0) AND 1
3  1425				       NOP
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 26
NF.asm



3  1426				     ?NOPCNT = ?NOPCNT+1
3  1427				       ENDIF
2  1428	039E  90			     NOP
2  1429	039F			     _NEXT:
2  1430					     org   $-1
1  1431	039E  01A2r		       DW      @NEXT
   1432				      XT_ _IF,@IF		     ; (IF
1  1433				       P_ _IF
2  1434					     ALIGN_  0
3  1435				       IF    ($-START+0) AND 1
3  1436				       NOP
3  1437				     ?NOPCNT = ?NOPCNT+1
3  1438				       ENDIF
2  1439	03A0  90			     NOP
2  1440	03A1			     _IF:
2  1441					     org   $-1
1  1442	03A0  0198r		       DW      @IF
   1443				      XT_ _JUMP,@JUMP		     ;.	(JUMP
1  1444				       P_ _JUMP
2  1445					     ALIGN_  0
3  1446				       IF    ($-START+0) AND 1
3  1447				       NOP
3  1448				     ?NOPCNT = ?NOPCNT+1
3  1449				       ENDIF
2  1450	03A2  90			     NOP
2  1451	03A3			     _JUMP:
2  1452					     org   $-1
1  1453	03A2  01A5r		       DW      @JUMP
   1454				      XT_ _RET,@RET	     ;.	(;
1  1455				       P_ _RET
2  1456					     ALIGN_  0
3  1457				       IF    ($-START+0) AND 1
3  1458				       NOP
3  1459				     ?NOPCNT = ?NOPCNT+1
3  1460				       ENDIF
2  1461	03A4  90			     NOP
2  1462	03A5			     _RET:
2  1463					     org   $-1
1  1464	03A4  01BDr		       DW      @RET
   1465				      XT_ _SKIP,@SKIP		     ; SKIP
1  1466				       P_ _SKIP
2  1467					     ALIGN_  0
3  1468				       IF    ($-START+0) AND 1
3  1469				       NOP
3  1470				     ?NOPCNT = ?NOPCNT+1
3  1471				       ENDIF
2  1472	03A6  90			     NOP
2  1473	03A7			     _SKIP:
2  1474					     org   $-1
1  1475	03A6  019Fr		       DW      @SKIP
   1476				      XT_ _SKIP1,@SKIP1		     ; SKIP1
1  1477				       P_ _SKIP1
2  1478					     ALIGN_  0
3  1479				       IF    ($-START+0) AND 1
3  1480				       NOP
3  1481				     ?NOPCNT = ?NOPCNT+1
3  1482				       ENDIF
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 27
NF.asm



2  1483	03A8  90			     NOP
2  1484	03A9			     _SKIP1:
2  1485					     org   $-1
1  1486	03A8  01A0r		       DW      @SKIP1
   1487				      XT_ _ABORT,@ABORT		     ; ABORT
1  1488				       P_ _ABORT
2  1489					     ALIGN_  0
3  1490				       IF    ($-START+0) AND 1
3  1491				       NOP
3  1492				     ?NOPCNT = ?NOPCNT+1
3  1493				       ENDIF
2  1494	03AA  90			     NOP
2  1495	03AB			     _ABORT:
2  1496					     org   $-1
1  1497	03AA  0107r		       DW      @ABORT
   1498				      XT_ _RDROP  ,@RDROP
1  1499				       P_ _RDROP
2  1500					     ALIGN_  0
3  1501				       IF    ($-START+0) AND 1
3  1502				       NOP
3  1503				     ?NOPCNT = ?NOPCNT+1
3  1504				       ENDIF
2  1505	03AC  90			     NOP
2  1506	03AD			     _RDROP:
2  1507					     org   $-1
1  1508	03AC  01BFr		       DW      @RDROP
   1509				      XT_ _?SKIP,@?SKIP
1  1510				       P_ _?SKIP
2  1511					     ALIGN_  0
3  1512				       IF    ($-START+0) AND 1
3  1513				       NOP
3  1514				     ?NOPCNT = ?NOPCNT+1
3  1515				       ENDIF
2  1516	03AE  90			     NOP
2  1517	03AF			     _?SKIP:
2  1518					     org   $-1
1  1519	03AE  0193r		       DW      @?SKIP
   1520
   1521				      XT_ _NOT,@NOT
1  1522				       P_ _NOT
2  1523					     ALIGN_  0
3  1524				       IF    ($-START+0) AND 1
3  1525				       NOP
3  1526				     ?NOPCNT = ?NOPCNT+1
3  1527				       ENDIF
2  1528	03B0  90			     NOP
2  1529	03B1			     _NOT:
2  1530					     org   $-1
1  1531	03B0  01DCr		       DW      @NOT
   1532				      XT_ _ZEQ ,@ZEQ
1  1533				       P_ _ZEQ
2  1534					     ALIGN_  0
3  1535				       IF    ($-START+0) AND 1
3  1536				       NOP
3  1537				     ?NOPCNT = ?NOPCNT+1
3  1538				       ENDIF
2  1539	03B2  90			     NOP
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 28
NF.asm



2  1540	03B3			     _ZEQ:
2  1541					     org   $-1
1  1542	03B2  01CCr		       DW      @ZEQ
   1543
   1544				      XT_ _DEC,@DEC
1  1545				       P_ _DEC
2  1546					     ALIGN_  0
3  1547				       IF    ($-START+0) AND 1
3  1548				       NOP
3  1549				     ?NOPCNT = ?NOPCNT+1
3  1550				       ENDIF
2  1551	03B4  90			     NOP
2  1552	03B5			     _DEC:
2  1553					     org   $-1
1  1554	03B4  028Fr		       DW      @DEC
   1555				      XT_ _INC,@INC
1  1556				       P_ _INC
2  1557					     ALIGN_  0
3  1558				       IF    ($-START+0) AND 1
3  1559				       NOP
3  1560				     ?NOPCNT = ?NOPCNT+1
3  1561				       ENDIF
2  1562	03B6  90			     NOP
2  1563	03B7			     _INC:
2  1564					     org   $-1
1  1565	03B6  0293r		       DW      @INC
   1566				      XT_ _RLDP,@RLDP
1  1567				       P_ _RLDP
2  1568					     ALIGN_  0
3  1569				       IF    ($-START+0) AND 1
3  1570				       NOP
3  1571				     ?NOPCNT = ?NOPCNT+1
3  1572				       ENDIF
2  1573	03B8  90			     NOP
2  1574	03B9			     _RLDP:
2  1575					     org   $-1
1  1576	03B8  022Er		       DW      @RLDP
   1577				      XT_ _LDB,@LDB
1  1578				       P_ _LDB
2  1579					     ALIGN_  0
3  1580				       IF    ($-START+0) AND 1
3  1581				       NOP
3  1582				     ?NOPCNT = ?NOPCNT+1
3  1583				       ENDIF
2  1584	03BA  90			     NOP
2  1585	03BB			     _LDB:
2  1586					     org   $-1
1  1587	03BA  02B0r		       DW      @LDB
   1588				      XT_ _LD,@LD
1  1589				       P_ _LD
2  1590					     ALIGN_  0
3  1591				       IF    ($-START+0) AND 1
3  1592				       NOP
3  1593				     ?NOPCNT = ?NOPCNT+1
3  1594				       ENDIF
2  1595	03BC  90			     NOP
2  1596	03BD			     _LD:
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 29
NF.asm



2  1597					     org   $-1
1  1598	03BC  02BBr		       DW      @LD
   1599				      XT_ _RSTP,@RSTP
1  1600				       P_ _RSTP
2  1601					     ALIGN_  0
3  1602				       IF    ($-START+0) AND 1
3  1603				       NOP
3  1604				     ?NOPCNT = ?NOPCNT+1
3  1605				       ENDIF
2  1606	03BE  90			     NOP
2  1607	03BF			     _RSTP:
2  1608					     org   $-1
1  1609	03BE  0239r		       DW      @RSTP
   1610
   1611				      XT_ _ALIGN,@ALIGN
1  1612				       P_ _ALIGN
2  1613					     ALIGN_  0
3  1614				       IF    ($-START+0) AND 1
3  1615				       NOP
3  1616				     ?NOPCNT = ?NOPCNT+1
3  1617				       ENDIF
2  1618	03C0  90			     NOP
2  1619	03C1			     _ALIGN:
2  1620					     org   $-1
1  1621	03C0  0297r		       DW      @ALIGN
   1622				      XT_ _NEG,@NEG
1  1623				       P_ _NEG
2  1624					     ALIGN_  0
3  1625				       IF    ($-START+0) AND 1
3  1626				       NOP
3  1627				     ?NOPCNT = ?NOPCNT+1
3  1628				       ENDIF
2  1629	03C2  90			     NOP
2  1630	03C3			     _NEG:
2  1631					     org   $-1
1  1632	03C2  01DDr		       DW      @NEG
   1633				      XT_ _2M,@2M
1  1634				       P_ _2M
2  1635					     ALIGN_  0
3  1636				       IF    ($-START+0) AND 1
3  1637				       NOP
3  1638				     ?NOPCNT = ?NOPCNT+1
3  1639				       ENDIF
2  1640	03C4  90			     NOP
2  1641	03C5			     _2M:
2  1642					     org   $-1
1  1643	03C4  02ADr		       DW      @2M
   1644				      XT_ _1M,@1M
1  1645				       P_ _1M
2  1646					     ALIGN_  0
3  1647				       IF    ($-START+0) AND 1
3  1648				       NOP
3  1649				     ?NOPCNT = ?NOPCNT+1
3  1650				       ENDIF
2  1651	03C6  90			     NOP
2  1652	03C7			     _1M:
2  1653					     org   $-1
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 30
NF.asm



1  1654	03C6  02AEr		       DW      @1M
   1655				      XT_ _1P,@1P
1  1656				       P_ _1P
2  1657					     ALIGN_  0
3  1658				       IF    ($-START+0) AND 1
3  1659				       NOP
3  1660				     ?NOPCNT = ?NOPCNT+1
3  1661				       ENDIF
2  1662	03C8  90			     NOP
2  1663	03C9			     _1P:
2  1664					     org   $-1
1  1665	03C8  02ABr		       DW      @1P
   1666				      XT_ _2P,@2P
1  1667				       P_ _2P
2  1668					     ALIGN_  0
3  1669				       IF    ($-START+0) AND 1
3  1670				       NOP
3  1671				     ?NOPCNT = ?NOPCNT+1
3  1672				       ENDIF
2  1673	03CA  90			     NOP
2  1674	03CB			     _2P:
2  1675					     org   $-1
1  1676	03CA  02AAr		       DW      @2P
   1677				      XT_ _W_B,@W_B
1  1678				       P_ _W_B
2  1679					     ALIGN_  0
3  1680				       IF    ($-START+0) AND 1
3  1681				       NOP
3  1682				     ?NOPCNT = ?NOPCNT+1
3  1683				       ENDIF
2  1684	03CC  90			     NOP
2  1685	03CD			     _W_B:
2  1686					     org   $-1
1  1687	03CC  02B2r		       DW      @W_B
   1688
   1689				      XT_  _BEMIT,@BEMIT
1  1690				       P_ _BEMIT
2  1691					     ALIGN_  0
3  1692				       IF    ($-START+0) AND 1
3  1693				       NOP
3  1694				     ?NOPCNT = ?NOPCNT+1
3  1695				       ENDIF
2  1696	03CE  90			     NOP
2  1697	03CF			     _BEMIT:
2  1698					     org   $-1
1  1699	03CE  0270r		       DW      @BEMIT
   1700
   1701				     ;-----------------------------------------------------
   1702
   1703				      L_ _CONS@
1  1704					     ALIGN_  0
2  1705				       IF    ($-START+0) AND 1
2  1706				       NOP
2  1707				     ?NOPCNT = ?NOPCNT+1
2  1708				       ENDIF
1  1709	03D0			     _CONS@:
   1710	03D0  038Fr 03BDr 03A5r	       DW _POP,_LD,_RET
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 31
NF.asm



   1711
   1712				      L_ _SETVAL@
1  1713					     ALIGN_  0
2  1714				       IF    ($-START+0) AND 1
2  1715				       NOP
2  1716				     ?NOPCNT = ?NOPCNT+1
2  1717				       ENDIF
1  1718	03D6			     _SETVAL@:
   1719	03D6  038Fr		       DW _POP
   1720				      L_ _2P_ST
1  1721					     ALIGN_  0
2  1722				       IF    ($-START+0) AND 1
2  1723				       NOP
2  1724				     ?NOPCNT = ?NOPCNT+1
2  1725				       ENDIF
1  1726	03D8			     _2P_ST:
   1727	03D8  03CBr 021Dr 03A5r	       dw _2P,_ST,_RET
   1728
   1729				     ;------------------------------------
   1730
   1731	03DE			     _MAKER@:
   1732	03DE  048Ar		       dw _HENTRY
   1733	03E0			     _commaer@:
   1734	03E0  038Fr		       dw _POP
   1735	03E2			     _commaer:
   1736	03E2  03BDr 03A3r 04C8r	       DW _LD,_JUMP,_comma
   1737
   1738
   1739				      L_ _XTIMES
1  1740					     ALIGN_  0
2  1741				       IF    ($-START+0) AND 1
2  1742				       NOP
2  1743				     ?NOPCNT = ?NOPCNT+1
2  1744				       ENDIF
1  1745	03E8			     _XTIMES:
   1746	03E8  039Dr 03F0r		     DW	_FOR,@@LPS
   1747	03EC  038Dr 04A8r	     @@LPS0  DW	_J,_EXECUTE
   1748	03F0  039Fr 03ECr	     @@LPS   DW	_NEXT,@@LPS0
   1749				      L_ _2EXIT
1  1750					     ALIGN_  0
2  1751				       IF    ($-START+0) AND 1
2  1752				       NOP
2  1753				     ?NOPCNT = ?NOPCNT+1
2  1754				       ENDIF
1  1755	03F4			     _2EXIT:
   1756	03F4  03ADr			     DW	_RDROP
   1757				      L_ _EXIT
1  1758					     ALIGN_  0
2  1759				       IF    ($-START+0) AND 1
2  1760				       NOP
2  1761				     ?NOPCNT = ?NOPCNT+1
2  1762				       ENDIF
1  1763	03F6			     _EXIT:
   1764	03F6  03ADr			     DW	_RDROP
   1765				      L_ _NOP
1  1766					     ALIGN_  0
2  1767				       IF    ($-START+0) AND 1
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 32
NF.asm



2  1768				       NOP
2  1769				     ?NOPCNT = ?NOPCNT+1
2  1770				       ENDIF
1  1771	03F8			     _NOP:
   1772	03F8  03A5r			     DW	_RET
   1773
   1774				      L_ _XDROP
1  1775					     ALIGN_  0
2  1776				       IF    ($-START+0) AND 1
2  1777				       NOP
2  1778				     ?NOPCNT = ?NOPCNT+1
2  1779				       ENDIF
1  1780	03FA			     _XDROP:
   1781	03FA  0399r			     DW	_EX
   1782				      L_ _DRET
1  1783					     ALIGN_  0
2  1784				       IF    ($-START+0) AND 1
2  1785				       NOP
2  1786				     ?NOPCNT = ?NOPCNT+1
2  1787				       ENDIF
1  1788	03FC			     _DRET:
   1789	03FC  039Br			     DW	_DROPX
   1790
   1791				      L_ _EVAL
1  1792					     ALIGN_  0
2  1793				       IF    ($-START+0) AND 1
2  1794				       NOP
2  1795				     ?NOPCNT = ?NOPCNT+1
2  1796				       ENDIF
1  1797	03FE			     _EVAL:
   1798	03FE  03F8r			     DW	_NOP
   1799				      L_ _@EVAL
1  1800					     ALIGN_  0
2  1801				       IF    ($-START+0) AND 1
2  1802				       NOP
2  1803				     ?NOPCNT = ?NOPCNT+1
2  1804				       ENDIF
1  1805	0400			     _@EVAL:
   1806	0400  043Er 0438r 03A1r	  +	     DW	_TOKEN,_DLDB,_IF,_DRET,_DOIT?,_JUMP,_@EVAL
   1807	      03FCr 0174r 03A3r	  +
   1808	      0400r
   1809
   1810				      L_ _SEMICOM
1  1811					     ALIGN_  0
2  1812				       IF    ($-START+0) AND 1
2  1813				       NOP
2  1814				     ?NOPCNT = ?NOPCNT+1
2  1815				       ENDIF
1  1816	040E			     _SEMICOM:
   1817	040E  03E0r 03A5r		     DW	_commaer@,_RET		     ; (;,
   1818
   1819				      L_ _clit
1  1820					     ALIGN_  0
2  1821				       IF    ($-START+0) AND 1
2  1822				       NOP
2  1823				     ?NOPCNT = ?NOPCNT+1
2  1824				       ENDIF
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 33
NF.asm



1  1825	0412			     _clit:
   1826	0412  03E0r 04E2r		     dw	_commaer@,_lit	     ; (LIT,
   1827
   1828				      L_ _NUMBER
1  1829					     ALIGN_  0
2  1830				       IF    ($-START+0) AND 1
2  1831				       NOP
2  1832				     ?NOPCNT = ?NOPCNT+1
2  1833				       ENDIF
1  1834	0416			     _NUMBER:
   1835	0416  029Fr 0160r 0422r	  +	     DW	_CSTR,_NUM,_NZ??,_RET
   1836	      03A5r
   1837
   1838				      L_ _XZ??
1  1839					     ALIGN_  0
2  1840				       IF    ($-START+0) AND 1
2  1841				       NOP
2  1842				     ?NOPCNT = ?NOPCNT+1
2  1843				       ENDIF
1  1844	041E			     _XZ??:
   1845	041E  0399r			     DW	_EX
   1846				      L_ _Z??
1  1847					     ALIGN_  0
2  1848				       IF    ($-START+0) AND 1
2  1849				       NOP
2  1850				     ?NOPCNT = ?NOPCNT+1
2  1851				       ENDIF
1  1852	0420			     _Z??:
   1853	0420  03B3r			     DW	_ZEQ
   1854				      L_ _NZ??
1  1855					     ALIGN_  0
2  1856				       IF    ($-START+0) AND 1
2  1857				       NOP
2  1858				     ?NOPCNT = ?NOPCNT+1
2  1859				       ENDIF
1  1860	0422			     _NZ??:
   1861	0422  047Ar			     DW	     _ABORT?
   1862					     NAM_  " ?"
1  1863	0424  02			     db	     ??0000-$-1
1  1864	0425  20 3F			     db	     " ?"
1  1865	0427			     ??0000  label   byte
   1866	0427  03A5r			     DW	     _RET
   1867
   1868				      L_ _DXEP
1  1869					     ALIGN_  0
2  1870				       IF    ($-START+0) AND 1
2  1871	0429  90		       NOP
2  1872	      =0009		     ?NOPCNT = ?NOPCNT+1
2  1873				       ENDIF
1  1874	042A			     _DXEP:
   1875	042A  0397r			     DW	_DUP
   1876				      L_ _XEP
1  1877					     ALIGN_  0
2  1878				       IF    ($-START+0) AND 1
2  1879				       NOP
2  1880				     ?NOPCNT = ?NOPCNT+1
2  1881				       ENDIF
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 34
NF.asm



1  1882	042C			     _XEP:
   1883	042C  0393r 04A8r 038Fr	  +	     DW	_XCHG,_EXECUTE,_POP,_RET
   1884	      03A5r
   1885
   1886				      L_ _TOKEN?
1  1887					     ALIGN_  0
2  1888				       IF    ($-START+0) AND 1
2  1889				       NOP
2  1890				     ?NOPCNT = ?NOPCNT+1
2  1891				       ENDIF
1  1892	0434			     _TOKEN?:
   1893	0434  043Er 041Er		     DW	_TOKEN,_XZ??
   1894				      L_ _DLDB				     ; DUP C@
1  1895					     ALIGN_  0
2  1896				       IF    ($-START+0) AND 1
2  1897				       NOP
2  1898				     ?NOPCNT = ?NOPCNT+1
2  1899				       ENDIF
1  1900	0438			     _DLDB:
   1901	0438  0397r 03BBr 03A5r		     DW	_DUP,_LDB,_RET
   1902				      L_ _TOKEN
1  1903					     ALIGN_  0
2  1904				       IF    ($-START+0) AND 1
2  1905				       NOP
2  1906				     ?NOPCNT = ?NOPCNT+1
2  1907				       ENDIF
1  1908	043E			     _TOKEN:
   1909	043E  012Er			     DW	_BL
   1910				      L_ _WORD
1  1911					     ALIGN_  0
2  1912				       IF    ($-START+0) AND 1
2  1913				       NOP
2  1914				     ?NOPCNT = ?NOPCNT+1
2  1915				       ENDIF
1  1916	0440			     _WORD:
   1917	0440  0452r 0122r		     DW	_PARSE,_TBUF
   1918				      L_ _TO_STR
1  1919					     ALIGN_  0
2  1920				       IF    ($-START+0) AND 1
2  1921				       NOP
2  1922				     ?NOPCNT = ?NOPCNT+1
2  1923				       ENDIF
1  1924	0444			     _TO_STR:
   1925	0444  042Ar 0205r 04E2r	  +	     DW	_DXEP,_MAKESTR,_LIT,'`'
   1926	      0060
   1927				      L_ _SWAPST
1  1928					     ALIGN_  0
2  1929				       IF    ($-START+0) AND 1
2  1930				       NOP
2  1931				     ?NOPCNT = ?NOPCNT+1
2  1932				       ENDIF
1  1933	044C			     _SWAPST:
   1934	044C  02B7r 021Dr 03A5r		     DW	_SWAP,_ST,_RET
   1935				      L_ _PARSE
1  1936					     ALIGN_  0
2  1937				       IF    ($-START+0) AND 1
2  1938				       NOP
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 35
NF.asm



2  1939				     ?NOPCNT = ?NOPCNT+1
2  1940				       ENDIF
1  1941	0452			     _PARSE:
   1942	0452  03F8r 013Er 0144r	  +	     DW	_NOP,_ETIB,_LTIB,_PARS,TO_+_LTIB,_RET
   1943	      0309r 0146r 03A5r
   1944
   1945				      L_ _HDICT
1  1946					     ALIGN_  0
2  1947				       IF    ($-START+0) AND 1
2  1948				       NOP
2  1949				     ?NOPCNT = ?NOPCNT+1
2  1950				       ENDIF
1  1951	045E			     _HDICT:
   1952	045E  0138r 02A7r		 DW  _HERE,_STR
   1953				      L_ _TO_DICT
1  1954					     ALIGN_  0
2  1955				       IF    ($-START+0) AND 1
2  1956				       NOP
2  1957				     ?NOPCNT = ?NOPCNT+1
2  1958				       ENDIF
1  1959	0462			     _TO_DICT:
   1960	0462  0148r 01FBr 03A5r		     DW	_XDICT,_MPUSH,_RET
   1961
   1962				      L_ _@_INI
1  1963					     ALIGN_  0
2  1964				       IF    ($-START+0) AND 1
2  1965				       NOP
2  1966				     ?NOPCNT = ?NOPCNT+1
2  1967				       ENDIF
1  1968	0468			     _@_INI:
   1969	0468  045Er 03FEr		 DW  _HDICT,_EVAL
   1970	046C  011Ar 029Fr 0168r		 DW _TBL,_CSTR,_REINI
   1971	0472  049Er 0126r 0146r	  +	 DW  _LPAR,_0,TO_+_LTIB,_RET
   1972	      03A5r
   1973
   1974				      L_ _ABORT?
1  1975					     ALIGN_  0
2  1976				       IF    ($-START+0) AND 1
2  1977				       NOP
2  1978				     ?NOPCNT = ?NOPCNT+1
2  1979				       ENDIF
1  1980	047A			     _ABORT?:
   1981	047A  04E6r 02B7r 03A1r	  +	     DW	_@STR,_SWAP,_IF,_DRET,_ERROR,_ABORT
   1982	      03FCr 0164r 03ABr
   1983
   1984				      L_ _COLON
1  1985					     ALIGN_  0
2  1986				       IF    ($-START+0) AND 1
2  1987				       NOP
2  1988				     ?NOPCNT = ?NOPCNT+1
2  1989				       ENDIF
1  1990	0486			     _COLON:
   1991	0486  03C1r 04ACr		     DW	_ALIGN,_RPAR	      ;	:
   1992				      L_ _HENTRY
1  1993					     ALIGN_  0
2  1994				       IF    ($-START+0) AND 1
2  1995				       NOP
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 36
NF.asm



2  1996				     ?NOPCNT = ?NOPCNT+1
2  1997				       ENDIF
1  1998	048A			     _HENTRY:
   1999	048A  0138r			     DW	_HERE
   2000				      L_ _ENTRY
1  2001					     ALIGN_  0
2  2002				       IF    ($-START+0) AND 1
2  2003				       NOP
2  2004				     ?NOPCNT = ?NOPCNT+1
2  2005				       ENDIF
1  2006	048C			     _ENTRY:
   2007	048C  0126r 02B7r 0434r		     DW	_0,_SWAP,_TOKEN?
   2008	0492  0148r 01F3r 0219r	  +	     DW	_XDICT,_STRPUSH,_STM,_STM,_RET
   2009	      0219r 03A5r
   2010
   2011				      L_ _SEMI
1  2012					     ALIGN_  0
2  2013				       IF    ($-START+0) AND 1
2  2014				       NOP
2  2015				     ?NOPCNT = ?NOPCNT+1
2  2016				       ENDIF
1  2017	049C			     _SEMI:
   2018	049C  040Er			     DW	_SEMICOM
   2019				      L_ _LPAR				     ; INTERPRETTER
1  2020					     ALIGN_  0
2  2021				       IF    ($-START+0) AND 1
2  2022				       NOP
2  2023				     ?NOPCNT = ?NOPCNT+1
2  2024				       ENDIF
1  2025	049E			     _LPAR:
   2026	049E  0170r 04DCr 03A1r	  +	     DW	_SETPNT,_?FIND,_IF,_NUMBER
   2027	      0416r
   2028				      L_ _@EXEC
1  2029					     ALIGN_  0
2  2030				       IF    ($-START+0) AND 1
2  2031				       NOP
2  2032				     ?NOPCNT = ?NOPCNT+1
2  2033				       ENDIF
1  2034	04A6			     _@EXEC:
   2035	04A6  03BDr		       DW _LD
   2036				      L_ _EXECUTE
1  2037					     ALIGN_  0
2  2038				       IF    ($-START+0) AND 1
2  2039				       NOP
2  2040				     ?NOPCNT = ?NOPCNT+1
2  2041				       ENDIF
1  2042	04A8			     _EXECUTE:
   2043	04A8  0395r 03A5r	       DW _PUSH,_RET
   2044
   2045				      L_ _RPAR		     ; COMPILER
1  2046					     ALIGN_  0
2  2047				       IF    ($-START+0) AND 1
2  2048				       NOP
2  2049				     ?NOPCNT = ?NOPCNT+1
2  2050				       ENDIF
1  2051	04AC			     _RPAR:
   2052	04AC  0170r 04D6r 03B5r	  +	     DW	_SETPNT,_?FINDC,_DEC,_IF,@RPAR2,_@EXEC,_RET
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 37
NF.asm



   2053	      03A1r 04BAr 04A6r	  +
   2054	      03A5r
   2055	04BA  04DCr 03A1r 04C4r	  +  @RPAR2 DW _?FIND,_IF,_COMP_NUM,_JUMP,_commaer
   2056	      03A3r 03E2r
   2057				      L_ _COMP_NUM
1  2058					     ALIGN_  0
2  2059				       IF    ($-START+0) AND 1
2  2060				       NOP
2  2061				     ?NOPCNT = ?NOPCNT+1
2  2062				       ENDIF
1  2063	04C4			     _COMP_NUM:
   2064	04C4  0416r			     DW	_NUMBER
   2065				      L_ _COMLIT
1  2066					     ALIGN_  0
2  2067				       IF    ($-START+0) AND 1
2  2068				       NOP
2  2069				     ?NOPCNT = ?NOPCNT+1
2  2070				       ENDIF
1  2071	04C6			     _COMLIT:
   2072	04C6  0412r			     DW	_cLIT
   2073				      L_ _COMMA
1  2074					     ALIGN_  0
2  2075				       IF    ($-START+0) AND 1
2  2076				       NOP
2  2077				     ?NOPCNT = ?NOPCNT+1
2  2078				       ENDIF
1  2079	04C8			     _COMMA:
   2080	04C8  0132r 0223r 03A5r		     DW	_XHERE,_STP,_RET
   2081
   2082				      L_ _TICK ;_LOCATE	 '
1  2083					     ALIGN_  0
2  2084				       IF    ($-START+0) AND 1
2  2085				       NOP
2  2086				     ?NOPCNT = ?NOPCNT+1
2  2087				       ENDIF
1  2088	04CE			     _TICK:
   2089	04CE  041Er 0434r 03A3r	  +	     DW	_XZ??,_TOKEN?,_JUMP,_?FIND
   2090	      04DCr
   2091
   2092				      L_ _?FINDC
1  2093					     ALIGN_  0
2  2094				       IF    ($-START+0) AND 1
2  2095				       NOP
2  2096				     ?NOPCNT = ?NOPCNT+1
2  2097				       ENDIF
1  2098	04D6			     _?FINDC:
   2099	04D6  042Ar 038Dr 03B7r		     DW	_DXEP,_J,_INC
   2100				      L_ _?FIND
1  2101					     ALIGN_  0
2  2102				       IF    ($-START+0) AND 1
2  2103				       NOP
2  2104				     ?NOPCNT = ?NOPCNT+1
2  2105				       ENDIF
1  2106	04DC			     _?FIND:
   2107	04DC  014Er 02E9r 03A5r		     DW	_DICT,_FND,_RET
   2108
   2109				      L_ _LIT
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 38
NF.asm



1  2110					     ALIGN_  0
2  2111				       IF    ($-START+0) AND 1
2  2112				       NOP
2  2113				     ?NOPCNT = ?NOPCNT+1
2  2114				       ENDIF
1  2115	04E2			     _LIT:
   2116	04E2  03B9r 03A5r		     DW	_RLDP,_RET
   2117
   2118
   2119				      L_ _@STR
1  2120					     ALIGN_  0
2  2121				       IF    ($-START+0) AND 1
2  2122				       NOP
2  2123				     ?NOPCNT = ?NOPCNT+1
2  2124				       ENDIF
1  2125	04E6			     _@STR:
   2126	04E6  038Dr 038Fr 038Fr	  +    DW _J,_POP,_POP,_CSTR,_PLUS,_PUSH,_PUSH,_RET
   2127	      029Fr 0279r 0395r	  +
   2128	      0395r 03A5r
   2129
   2130
   2131				     ;-----------------------------------------------
   2132
   2133	04F6			     freemem:
   2134	04F6  0008		       DW ENDMEM-FREEMEM-2
   2135				       ENTRY_  _ENTRY,0,'=:'
1  2136	04F8  048Cr 0000	       DW    _ENTRY,0
1  2137				       nam_  '=:'
2  2138	04FC  02			     db	     ??0001-$-1
2  2139	04FD  3D 3A			     db	     '=:'
2  2140	04FF			     ??0001  label   byte
   2141	04FF  00		       DB 0
   2142	0500			     EndMem:
   2143
   2144				      L_ _END
1  2145					     ALIGN_  0
2  2146				       IF    ($-START+0) AND 1
2  2147				       NOP
2  2148				     ?NOPCNT = ?NOPCNT+1
2  2149				       ENDIF
1  2150	0500			     _END:
   2151
   2152				     ;lastw = ppppp
   2153
   2154	0500			     MyCseg  ends
   2155					     end  Start
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 39
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??0000			Byte   MYCSEG:0427		   1863	 #1865
??0001			Byte   MYCSEG:04FF		   2138	 #2140
??DATE			Text   "12/11/18"
??FILENAME		Text   "NF	"
??TIME			Text   "14:18:55"
??VERSION		Number 0314
?NOPCNT			Number 0009			   #40	645  #645  768	#768  826  #826	 1022  #1022  1070  #1070  1107	  +
							   #1107  1239	#1239  1325  #1325  1872  #1872
@1M			Near   MYCSEG:02AE		   #1054  1654
@1P			Near   MYCSEG:02AB		   1014	 #1048	1665
@2M			Near   MYCSEG:02AD		   #1052  1643
@2P			Near   MYCSEG:02AA		   #1046  1676
@?SKIP			Near   MYCSEG:0193		   #531	 1519
@@END?			Near   MYCSEG:035A		   #1278  1313
@@ERNUM			Near   MYCSEG:037B		   1279	 1290  1295  #1302
@@EXNUM			Near   MYCSEG:037C		   1300	 #1304
@@GETC			Near   MYCSEG:035C		   #1280  1301
@@LPS			Word   MYCSEG:03F0		   1746	 #1748
@@LPS0			Word   MYCSEG:03EC		   #1747  1748
@@N1			Near   MYCSEG:0348		   1261	 #1265	1311
@@N2			Near   MYCSEG:0350		   1267	 #1271
@@N3			Near   MYCSEG:035F		   1272	 #1285
@@NOEXN			Near   MYCSEG:037D		   #1306
@@NUM			Near   MYCSEG:033D		   1247	 #1257
@@NUMINI		Near   MYCSEG:0356		   1258	 #1274
@@NUMZ			Near   MYCSEG:0343		   #1260  1263
@@SETBAS		Near   MYCSEG:0358		   1269	 #1276
@@SGN			Near   MYCSEG:037E		   1259	 #1309
@@SKIPX			Near   MYCSEG:031B		   1209	 1211  1213  #1216
@@TON2			Near   MYCSEG:036B		   1287	 #1292
@@WEX			Near   MYCSEG:0324		   1218	 1220  #1222
@ABORT			Near   MYCSEG:0107		   #254	 1497
@ALIGN			Near   MYCSEG:0297		   #1012  1621
@BEMIT			Near   MYCSEG:0270		   #944	 1699
@CMOVE			Near   MYCSEG:020B		   739	#756
@CPU			Text   0101H
@CURSEG			Text   MYCSEG			   #237
@D2DIV			Near   MYCSEG:02D5		   1114	 1128  #1130
@DEC			Near   MYCSEG:028F		   #1002  1554
@DIV2			Near   MYCSEG:02C4		   #1097
@DROP			Near   MYCSEG:026C		   #935	 950  1005  1010  1352
@DROPX			Near   MYCSEG:01BA		   #585	 1409
@DUP			Near   MYCSEG:0282		   #981	 1385
@EX			Near   MYCSEG:01C3		   #599	 1398
@FILENAME		Text   NF
@FLAG			Near   MYCSEG:01CF		   618	#622
@FND?			Near   MYCSEG:0302		   1173	 #1182
@FOR			Near   MYCSEG:01A8		   #560	 1420
@IF			Near   MYCSEG:0198		   #536	 1442
@IFM1			Near   MYCSEG:0199		   534	#538
@INC			Near   MYCSEG:0293		   #1007  1565
@INIT			Near   MYCSEG:0178		   255	#504
@J			Near   MYCSEG:0286		   #990	 1330
@JUMP			Near   MYCSEG:01A5		   546	#556  1453
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 40
Symbol Table



@LD			Near   MYCSEG:02BB		   #1080  1598
@LDB			Near   MYCSEG:02B0		   #1058  1587
@MAIN			Near   MYCSEG:0186		   509	#517  527
@MAINLP			Word   MYCSEG:010C		   257	#257
@MPUSH			Near   MYCSEG:01E6		   #673	 724
@NEG			Near   MYCSEG:01DD		   #654	 1632
@NEST			Near   MYCSEG:0181		   #513	 523
@NEXT			Near   MYCSEG:01A2		   #553	 1431
@NIP1M@			Near   MYCSEG:0246		   #879
@NIP1P@			Near   MYCSEG:0243		   845	#873
@NIP2M@			Near   MYCSEG:0245		   802	#877
@NIP2P@			Near   MYCSEG:0242		   831	#871
@NIP@			Near   MYCSEG:0247		   615	636  650  773  816  #881  962
@NOT			Near   MYCSEG:01DC		   #652	 1531
@NUM			Near   MYCSEG:032F		   442	#1242
@PARAM2@		Near   MYCSEG:025B		   700	#914  1166  1244
@PARAM3@		Near   MYCSEG:025E		   670	722  736  751  #921  1205
@POP			Near   MYCSEG:01B3		   #574	 1341
@PUSH			Near   MYCSEG:01AA		   #562	 1374
@PUSHB			Near   MYCSEG:01EE		   #681	 759
@PUSHB1			Near   MYCSEG:01ED		   #679
@RDROP			Near   MYCSEG:01BF		   583	#594  1508
@RET			Near   MYCSEG:01BD		   #592	 1464
@RETUPLE1@		Near   MYCSEG:024F		   #897
@RETUPLE2@		Near   MYCSEG:024C		   #890	 980  1075  1094  1112	1126  1145
@RETVAL			Near   MYCSEG:0251		   #899	 912
@RETVAL@		Near   MYCSEG:0255		   #908	 1027  1044
@RLDP			Near   MYCSEG:022E		   #849	 1576
@RPAR2			Word   MYCSEG:04BA		   2052	 #2055
@RSKIP			Near   MYCSEG:0235		   #857	 869
@RSTP			Near   MYCSEG:0239		   #861	 1609
@R_TOP			Number -0400			   #245	 246  506
@SKIP			Near   MYCSEG:019F		   #547	 555  1475
@SKIP1			Near   MYCSEG:01A0		   #549	 1486
@ST			Near   MYCSEG:021E		   804	#817
@SWAP			Near   MYCSEG:02B8		   #1076
@S_TOP			Number -0800			   #246	 247  507
@TBUF			Number -0100			   #243	 244
@TIB			Number -0200			   #244	 245
@VOCTOP			Number -1000			   #247	 396
@WORDSIZE		Text   2			   #237	 832  858  995
@W_B			Near   MYCSEG:02B2		   #1060  1687
@XA			Near   MYCSEG:0213		   #776	 790
@XCHG			Near   MYCSEG:027D		   #966	 1363
@ZEQ			Near   MYCSEG:01CC		   #620	 1542
A			Number DI			   #212	 516  519  522	524  525  888  898  909	 929  991  995
AT_			Number 0004			   #46
DSP			Number AX			   #207	 507  542  545	568  571  577  580  588	 591  684  687	852  855  +
							   865	868  884  887  893  896	 902  905  917	920  924  928  938  941	  +
							   984	987  994  997  1185  1189  1226	 1231  1250  1254
ENDMEM			Near   MYCSEG:0500		   2134	 #2142
FREEMEM			Near   MYCSEG:04F6		   340	#2133  2134
I			Number SI			   #204	 505  515  516	548  550  557  557  561	 561  593  600	922  931
NACC			Number DI			   #221
NBASE			Number BP			   #222
NEXTFND			Near   MYCSEG:02EC		   #1168  1177
NO_DIV			Near   MYCSEG:02C6		   #1099  1149
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 41
Symbol Table



PB			Text   byte  ptr		   #43
PD			Text   dword ptr		   #41
PW			Text   word  ptr		   #42	1003  1008
R			Number DX			   #216	 777  922  931	1129  1148  1150
RSP			Number SP			   #205	 506  542  545	568  571  577  580  588	 591  684  687	852  855  +
							   865	868  884  887  893  896	 902  905  917	920  924  928  938  941	  +
							   984	987  991  994  997  1185  1189	1226  1231  1250  1254
RT			Number BP			   #206	 514  515  554	564  565  581  593  596	 600  777  856	858  858  +
							   862	922  931  967
START			Byte   MYCSEG:0100		   #249	 264  273  282	291  300  309  319  327	 335  343  351	359  367  +
							   375	383  391  399  407  419	 428  437  446	456  464  472  481  489	  +
							   497	608  629  643  663  693	 707  715  729	744  766  783  795  809	  +
							   824	838  955  973  1020  1037  1068	 1087  1105  1119  1138	 1159	  +
							   1198	 1237  1323  1334  1345	 1356  1367  1378  1391	 1402  1413  1424 +
							   1435	 1446  1457  1468  1479	 1490  1501  1512  1524	 1535  1547  1558 +
							   1569	 1580  1591  1602  1614	 1625  1636  1647  1658	 1669  1680  1692 +
							   1705	 1714  1722  1741  1751	 1759  1767  1776  1784	 1793  1801  1812 +
							   1821	 1830  1840  1848  1856	 1870  1878  1888  1896	 1904  1912  1920 +
							   1929	 1937  1947  1955  1964	 1976  1986  1994  2002	 2013  2021  2030 +
							   2038	 2047  2059  2067  2075	 2084  2094  2102  2111	 2121  2146  2155
T			Number BX			   #209	 533  533  537	539  543  565  569  578	 581  589  616	621  623  +
							   623	637  651  653  655  818	 832  846  853	856  862  866  872  874	  +
							   878	880  910  918  929  930	 939  945  948	963  967  985  1003  1008 +
							   1030	 1031  1045  1047  1049	 1053  1055  1059  1077	 1081  1081  1095 +
							   1096	 1098  1129  1131  1147	 1148  1150
TH			Number BH			   #211	 1062  1062
TL			Number BL			   #210	 1013  1059
TO_			Number 0002			   #45	1942  1971
VAL_			Number 0006			   #47
W			Number CX			   #215	 563  572  595	597  616  637  651  704	 818  832  885	894  903  +
							   910	963  1045  1077	 1095  1096  1132  1146	 1151
WH			Number CH			   #214	 703  703  754	754  1029  1029
WL			Number CL			   #213	 701  752  846	1030  1127
_0			Near   MYCSEG:0126		   #295	 1971  2007
_1			Near   MYCSEG:012A		   #304
_1M			Near   MYCSEG:03C7		   #1652
_1P			Near   MYCSEG:03C9		   #1663
_2EXIT			Near   MYCSEG:03F4		   #1755
_2M			Near   MYCSEG:03C5		   #1641
_2P			Near   MYCSEG:03CB		   #1674  1727
_2P_ST			Near   MYCSEG:03D8		   #1726
_?FIND			Near   MYCSEG:04DC		   2026	 2055  2089  #2106
_?FINDC			Near   MYCSEG:04D6		   2052	 #2098
_?SKIP			Near   MYCSEG:03AF		   #1517
_@EVAL			Near   MYCSEG:0400		   #1805  1806
_@EXEC			Near   MYCSEG:04A6		   #2034  2052
_@NC			Number MYCSEG:0156		   #413
_@STR			Near   MYCSEG:04E6		   1981	 #2125
_@_INI			Near   MYCSEG:0468		   477	#1968
_ABORT			Near   MYCSEG:03AB		   #1495  1981
_ABORT?			Near   MYCSEG:047A		   1861	 #1980
_ACCEPT			Near   MYCSEG:015C		   257	#432
_ALIGN			Near   MYCSEG:03C1		   #1619  1991
_BEMIT			Near   MYCSEG:03CF		   #1697
_BL			Near   MYCSEG:012E		   #313	 1909
_CLIT			Near   MYCSEG:0412		   #1825  2072
_CMOVE			Near   MYCSEG:01FF		   #734
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 42
Symbol Table



_CMOVEU			Near   MYCSEG:01E1		   #668
_CNTC			Near   MYCSEG:0154		   #411
_COLON			Near   MYCSEG:0486		   #1990
_COMLIT			Near   MYCSEG:04C6		   #2071
_COMMA			Near   MYCSEG:04C8		   1736	 #2079
_COMMAER		Near   MYCSEG:03E2		   #1735  2055
_COMMAER@		Near   MYCSEG:03E0		   #1733  1817	1826
_COMP_NUM		Near   MYCSEG:04C4		   2055	 #2063
_CONS@			Near   MYCSEG:03D0		   269	278  287  296  305  314	 340  356  372	396  412  #1709
_CSTR			Near   MYCSEG:029F		   #1025  1835	1970  2126
_D2DIV			Near   MYCSEG:02C9		   #1110
_DEC			Near   MYCSEG:03B5		   #1552  2052
_DICT			Near   MYCSEG:014E		   380	#395  2107
_DLDB			Near   MYCSEG:0438		   1806	 #1900
_DOIT?			Near   MYCSEG:0174		   #501	 1806
_DRET			Near   MYCSEG:03FC		   #1788  1806	1981
_DROP			Near   MYCSEG:0391		   451	#1350
_DROPX			Near   MYCSEG:039B		   #1407  1789
_DUP			Near   MYCSEG:0397		   #1383  1875	1901
_DXEP			Near   MYCSEG:042A		   #1874  1925	2099
_END			Near   MYCSEG:0500		   #2150
_ENTRY			Near   MYCSEG:048C		   #2006  2136
_ERROR			Near   MYCSEG:0164		   #450	 1981
_ETIB			Near   MYCSEG:013E		   #355	 1942
_EVAL			Near   MYCSEG:03FE		   257	#1797  1969
_EX			Near   MYCSEG:0399		   324	380  #1396  1781  1845
_EXECUTE		Near   MYCSEG:04A8		   1747	 1883  #2042
_EXIT			Near   MYCSEG:03F6		   #1763
_FND			Near   MYCSEG:02E9		   #1164  2107
_FOR			Near   MYCSEG:039D		   #1418  1746
_HDICT			Near   MYCSEG:045E		   #1951  1969
_HENTRY			Near   MYCSEG:048A		   1732	 #1998
_HERE			Near   MYCSEG:0138		   324	#339  1952  1999
_IF			Near   MYCSEG:03A1		   #1440  1806	1981  2026  2052  2055
_INC			Near   MYCSEG:03B7		   #1563  2099
_INIT			Near   MYCSEG:016C		   256	#476
_J			Near   MYCSEG:038D		   #1328  1747	2099  2126
_JUMP			Near   MYCSEG:03A3		   257	424  433  442  451  477	 502  #1451  1736  1806	 2055  2089
_LD			Near   MYCSEG:03BD		   #1596  1710	1736  2035
_LDB			Near   MYCSEG:03BB		   #1585  1901
_LIT			Near   MYCSEG:04E2		   1826	 1925  #2115
_LPAR			Near   MYCSEG:049E		   1971	 #2025
_LTIB			Near   MYCSEG:0144		   #371	 1942  1942  1971
_MAKER@			Near   MYCSEG:03DE		   #1731
_MAKESTR		Near   MYCSEG:0205		   #749	 1925
_MPUSH			Near   MYCSEG:01FB		   #720	 1960
_NAND			Near   MYCSEG:01D9		   #648
_NEG			Near   MYCSEG:03C3		   #1630
_NEXT			Near   MYCSEG:039F		   #1429  1748
_NIP			Near   MYCSEG:0211		   #771
_NOP			Near   MYCSEG:03F8		   424	433  #1771  1798  1942
_NOT			Near   MYCSEG:03B1		   #1529
_NUM			Near   MYCSEG:0160		   #441	 1835
_NUMBER			Near   MYCSEG:0416		   #1834  2026	2064
_NZ??			Near   MYCSEG:0422		   1835	 #1860
_OK			Near   MYCSEG:0158		   257	#423
_OVER			Near   MYCSEG:0281		   #978
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 43
Symbol Table



_PARS			Near   MYCSEG:0309		   #1203  1942
_PARSE			Near   MYCSEG:0452		   1917	 #1941
_PLAVG			Near   MYCSEG:02BF		   #1092
_PLUS			Near   MYCSEG:0279		   #960	 2126
_PMUL			Near   MYCSEG:02CD		   #1124
_POP			Near   MYCSEG:038F		   461	486  #1339  1710  1719	1734  1883  2126  2126
_PUSH			Near   MYCSEG:0395		   #1372  2043	2126  2126
_RDROP			Near   MYCSEG:03AD		   #1506  1756	1764
_REINI			Near   MYCSEG:0168		   #460	 1970
_RET			Near   MYCSEG:03A5		   #1462  1710	1727  1772  1817  1835	1866  1883  1901  1934	1942  1960+
							   1971	 2008  2043  2052  2080	 2107  2116  2126
_RLDP			Near   MYCSEG:03B9		   #1574  2116
_RPAR			Near   MYCSEG:04AC		   1991	 #2051
_RSTP			Near   MYCSEG:03BF		   #1607
_SDIV			Near   MYCSEG:02DB		   #1143
_SEMI			Near   MYCSEG:049C		   #2017
_SEMICOM		Near   MYCSEG:040E		   #1816  2018
_SETPNT			Near   MYCSEG:0170		   #485	 2026  2052
_SETVAL@		Near   MYCSEG:03D6		   331	347  363  387  403  468	 493  #1718
_SKIP			Near   MYCSEG:03A7		   #1473
_SKIP1			Near   MYCSEG:03A9		   #1484
_ST			Near   MYCSEG:021D		   #814	 1727  1934
_START			Near   MYCSEG:0100		   #250
_STBP			Near   MYCSEG:0229		   #843
_STM			Near   MYCSEG:0219		   #800	 2008  2008
_STP			Near   MYCSEG:0223		   #829	 2080
_STR			Near   MYCSEG:02A7		   #1042  1952
_STRPUSH		Near   MYCSEG:01F3		   #698	 2008
_SWAP			Near   MYCSEG:02B7		   #1073  1934	1981  2007
_SWAPST			Near   MYCSEG:044C		   #1933
_TBL			Near   MYCSEG:011A		   257	#268  1970
_TBUF			Near   MYCSEG:0122		   #286	 1917
_TIB			Near   MYCSEG:011E		   257	#277
_TICK			Near   MYCSEG:04CE		   #2088
_TOKEN			Near   MYCSEG:043E		   1806	 1893  #1908
_TOKEN?			Near   MYCSEG:0434		   #1892  2007	2089
_TO_DICT		Near   MYCSEG:0462		   #1959
_TO_STR			Near   MYCSEG:0444		   #1924
_ULESS			Near   MYCSEG:01C7		   #613
_WORD			Near   MYCSEG:0440		   #1916
_W_B			Near   MYCSEG:03CD		   #1685
_XA			Near   MYCSEG:0217		   #788
_XCHG			Near   MYCSEG:0393		   #1361  1883
_XDICT			Near   MYCSEG:0148		   #379	 1960  2008
_XDROP			Near   MYCSEG:03FA		   #1780
_XEP			Near   MYCSEG:042C		   #1882
_XHERE			Near   MYCSEG:0132		   #323	 2080
_XOR			Near   MYCSEG:01D3		   #634
_XTIMES			Near   MYCSEG:03E8		   #1745
_XZ??			Near   MYCSEG:041E		   #1844  1893	2089
_Z??			Near   MYCSEG:0420		   #1852
_ZEQ			Near   MYCSEG:03B3		   #1540  1853
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 44
Symbol Table




Macro Name						   Cref	(defined at #)

?ZERO_							   #106	 532
ALIGN_							   #110	 263  272  281	290  299  308  318  326	 334  342  350	358  366  +
							   374	382  390  398  406  418	 427  436  445	455  463  471  480  488	  +
							   496	607  628  642  662  692	 706  714  728	743  765  782  794  808	  +
							   823	837  954  972  1019  1036  1067	 1086  1104  1118  1137	 1158	  +
							   1197	 1236  1322  1333  1344	 1355  1366  1377  1390	 1401  1412  1423 +
							   1434	 1445  1456  1467  1478	 1489  1500  1511  1523	 1534  1546  1557 +
							   1568	 1579  1590  1601  1613	 1624  1635  1646  1657	 1668  1679  1691 +
							   1704	 1713  1721  1740  1750	 1758  1766  1775  1783	 1792  1800  1811 +
							   1820	 1829  1839  1847  1855	 1869  1877  1887  1895	 1903  1911  1919 +
							   1928	 1936  1946  1954  1963	 1975  1985  1993  2001	 2012  2020  2029 +
							   2037	 2046  2058  2066  2074	 2083  2093  2101  2110	 2120  2145
CLR_							   #74	702  753  1028	1061
CONST_							   #179	 261  270  279	288  297  306  332  348	 364  388  404
DEFER_							   #162	 416  425  434	443  469  494
DPOP							   #84	540  566  586  863  882	 891  936
DPUSH							   #78	575  682  850  900  915	 982  992
ENTRY_							   #184	 2135
JMP_							   #54	508  526  582  617  723	 738  758  803	911  949  1004	1009  1113+
							   1262
LDP_							   #99	518
L_							   #117	 262  271  280	289  298  307  317  333	 349  365  373	389  405  +
							   417	426  435  444  454  470	 479  495  1703	 1712  1720  1739  1749	  +
							   1757	 1765  1774  1782  1791	 1799  1810  1819  1828	 1838  1846  1854 +
							   1868	 1876  1886  1894  1902	 1910  1918  1927  1935	 1945  1953  1962 +
							   1974	 1984  1992  2000  2011	 2019  2028  2036  2045	 2057  2065  2073 +
							   2082	 2092  2100  2109  2119	 2144
NAM_							   #139	 1862  2137
POINT_							   #173	 453  478
P_							   #122	 606  627  641	661  691  713  727  742	 764  781  793	807  822  +
							   836	953  971  1018	1035  1066  1085  1103	1117  1136  1157  1196	  +
							   1235	 1321  1332  1343  1354	 1365  1376  1389  1400	 1411  1422  1433 +
							   1444	 1455  1466  1477  1488	 1499  1510  1522  1533	 1545  1556  1567 +
							   1578	 1589  1600  1612  1623	 1634  1645  1656  1667	 1678  1690
RDEC_							   #94
SKIPA_							   #62	711  875
SKIPB_							   #66	1180
SKIPR_							   #49
SKIPW_							   #58
TWICE_							   #90
VALUE_							   #156	 325  341  357	381  397
VAR_							   #146
VECTOR_							   #167	 462  487
XTSK_							   #129	 705
XT_							   #151	 605  626  640	660  690  726  741  763	 780  792  806	821  835  +
							   952	970  1017  1034	 1065  1084  1102  1116	 1135  1156  1195  1234	  +
							   1320	 1331  1342  1353  1364	 1375  1388  1399  1410	 1421  1432  1443 +
							   1454	 1465  1476  1487  1498	 1509  1521  1532  1544	 1555  1566  1577 +
							   1588	 1599  1611  1622  1633	 1644  1655  1666  1677	 1689
X_							   #70	541  544  567  570  576	 579  587  590	683  686  851  854  864	  +
							   867	883  886  892  895  901	 904  916  919	923  927  937  940  983	  +
							   986	993  996  1184	1188  1225  1230  1249	1253
Turbo Assembler	 Version 3.2	    12/11/18 14:18:55	    Page 45
Symbol Table




Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

MYCSEG			16  0500 Para	none		   #237	 239  239  239	239
