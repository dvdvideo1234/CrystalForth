Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 1
NF11.asm



      1				     locals  @@
      2
      3	      =	dword ptr	     pd	 equ dword ptr
      4	      =	word  ptr	     pw	 equ word  ptr
      5	      =	byte  ptr	     pb	 equ byte  ptr
      6
      7	      =-0002		     TO_     =	-2
      8	      =-0004		     AT_     =	-4
      9	      =0002		     VL_     =	2
     10
     11				     JMPS_    MACRO LBL
     12					       jmp  SHORT LBL
     13					     ENDM
     14
     15				     SKIPA_   MACRO
     16					     DB	   03DH
     17					     ENDM
     18
     19				     SKIPC_   MACRO
     20					     DB	   03CH
     21					     ENDM
     22
     23				     SKIPB_   MACRO reg
     24					     mov   reg,0
     25					     org   $-1
     26					     ENDM
     27
     28				     SKIPW_   MACRO reg
     29					     mov   reg,0
     30					     org   $-2
     31					     ENDM
     32
     33				     CLr_   MACRO reg
     34				       XOR   reg,REG
     35				       ENDM
     36
     37				     TWICE_  MACRO
     38				       DW    $+2
     39				       ENDM
     40
     41				     X_	      MACRO
     42				       xchg Rsp,DSP
     43					     ENDM
     44
     45				     TO_R_    MACRO  REG
     46				       PUSH   REG
     47					     ENDM
     48
     49				     R_TO_    MACRO  REG
     50				       POP    REG
     51					     ENDM
     52
     53				     TO_D_    MACRO  REG
     54				       X_
     55				       PUSH   REG
     56				       X_
     57					     ENDM
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 2
NF11.asm



     58
     59				     D_TO_    MACRO  REG
     60				       X_
     61				       POP    REG
     62				       X_
     63					     ENDM
     64
     65				     w2_      macro
     66				       scasw
     67					     endm
     68
     69				     cf_to_   macro  reg
     70				       sbb   reg,reg
     71					     endm
     72
     73				     rchg_    macro   reg
     74				       xchg  ax,reg
     75					     endm
     76
     77				     DUP2_    MACRO   R1,R2
     78				       X_
     79				       PUSH  R1
     80				       PUSH  R2
     81				       X_
     82					     ENDM
     83
     84				     DROP2_   MACRO   R1,R2
     85				       X_
     86				       POP   R1
     87				       POP   R2
     88				       X_
     89					     ENDM
     90
     91				     SWAP_   MACRO
     92				       XCHG  TOP,NXT
     93					     ENDM
     94
     95	      =0000		     qqqqq = 0
     96	      =0000		     ppppp = qqqqq
     97
     98				     nam_    macro   msg
     99				       local endstr
    100				       db    endstr-$-1
    101				       db    msg
    102				     endstr  label   byte
    103					     endm
    104
    105				     CNAM_   MACRO MSG
    106				       nam_ MSG
    107				       ALIGN_ 0
    108				       ENDM
    109
    110				     ln_     macro   token
    111				     ppppp = $
    112				       nam_  token
    113				       dw    qqqqq
    114				     qqqqq = ppppp
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 3
NF11.asm



    115					     endm
    116
    117				     ALIGN_  MACRO  FLAG
    118				       IF ($-START+FLAG) AND 1
    119				       NOP
    120				       ENDIF
    121				       ENDM
    122
    123				     P_	MACRO LBL
    124				       ALIGN_ 0
    125				       NOP
    126				     LBL:
    127				       ORG $-1
    128				       ENDM
    129
    130				     L_	 MACRO LBL
    131				       ALIGN_ 0
    132				     LBL:
    133				       ENDM
    134
    135				     ACALL_  MACRO LBL
    136				       MOV   W,OFFSET LBL
    137				       PUSH  W
    138				       ENDM
    139
    140				     entry_  macro ADR,DAT,nam
    141				       DW    ADR
    142				       DB    DAT
    143				       nam_  nam
    144				       endm
    145
    146				     ; REGISTER	 ASIGNMENTS for	interpretter
    147				     ;-------------------------------------------
    148	      =SI		     ip	 = si	 ; INSTRUCTION POINTER
    149	      =AX		     dsp = ax	 ; DATA	STACK POINTER
    150	      =SP		     rsp = sp	 ; RETURN STACK	POINTER
    151	      =DI		     RA	     = DI	     ; RETURN (	ADDRESS	) STACK	TOP register
    152	      =BP		     AR	 = BP	 ; ARITHMETIC (	ADDRESS	) register
    153
    154	      =CX		     NXT = CX	 ; DATA	STACK NEXT REGISTER
    155	      =CL		     NXTL= CL	 ; DATA	STACK NEXT REGISTER
    156	      =CL		     NXTD= CL	 ; DATA	STACK NEXT REGISTER
    157
    158	      =BX		     top = Bx	 ; DATA	STACK TOP REGISTER
    159	      =BL		     topL= BL	 ; DATA	STACK TOP REGISTER LOW
    160	      =BH		     topH= BH	 ; DATA	STACK TOP REGISTER HI
    161
    162	      =DX		     W	 = DX	 ; WORK	 register (RETURN  register )
    163
    164				     ; MINIMAL SET INTERPRETTER	COMMANDS
    165				     ;--------------------------------------------
    166				     ; CONTROL	    COMMANDS  (IF (JUMP	(RETURN	(IF-
    167				     ; RETURN STACK COMMANDS  POP PUSH
    168				     ; DATA STACK   COMMANDS  DUP J
    169				     ; DATA TRANSF  COMMANDS  @R+ !R+ XCHG XR
    170				     ; MATH	    COMMANDS  +2/ +* -/	NAND
    171				     ; IO	    COMMANDS  (IO
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 4
NF11.asm



    172
    173	0000			     MyCseg  segment para  use16
    174
    175					     assume cs:	MyCseg,	 ds: MyCseg, ss: MyCseg, es: MyCseg
    176
    177					     org 100h
    178
    179	      =-0100		     @TBUF  = -256	       ; -256	 TBUF =	256
    180	      =-0200		     @TIB   = @TBUF * 2	   ; -512    TIB  = 256	 +
    181	      =-0200		     @RTOP  = @TIB	   ; -512  RSTACK = 768	 +
    182	      =-0500		     @STOP  = @TBUF+@TIB*2 ; -1280 DSTACK = 768	 += TOTAL = 2048
    183	      =-1800		     @VOCTOP= @TIB * 12	   ; -6144 = 4 BUFFERS * 1024 +	TOTAL
    184
    185	0100			     Start   Label byte
    186	0100			     _START:
    187	0100  BB 1000		       mov   bx,1000h	  ; only 64k allocate
    188	0103  B4 4A		       mov   ah,4ah
    189	0105  CD 21		       int   21h
    190	0107  B8 0003		       MOV   AX,3
    191	010A  CD 10		       INT   010H
    192	010C  E9 0337		       JMP   @ABORT
    193
    194				      ALIGN_ 0
1   195				       IF ($-START+0) AND 1
1   196	010F  90		       NOP
1   197				       ENDIF
    198
    199	0110  0255r 01E1r	     _LIT    DW	     _RLDP,_RET
    200	0114  01E7r 022Fr 01E1r	     _DOEZ   DW	 _POP,_XCHG,_RET
    201	011A  027Fr		     _DXEP   DW	 _DUP
    202	011C  022Fr 04B6r	     _XEP    DW	 _XCHG,_EXECUT
    203	0120  01E7r 01E1r	     _VAR    DW	 _POP,_RET
    204
    205	0124  0221r		     _XDROP  DW	 _EX
    206	0126  01EFr		     _DROP   DW	 _DROPX
    207	0128  011Cr		     _UCSTR  DW	 _XEP
    208	012A  01FBr 024Br 022Fr	  +  _CSTR   DW	 _PUSH,_RLDBP,_XCHG,_POP,_RET
    209	      01E7r 01E1r
    210	0134  0176r		     _HSTR   DW	 _H
    211	0136  01FBr 0255r 022Fr	  +  _STR    DW	 _PUSH,_RLDP,_XCHG,_POP,_RET
    212	      01E7r 01E1r
    213
    214	0140  01FBr		     _LD     DW	     _PUSH   ; @
    215	0142  0255r 01F5r	     _CON    DW	     _RLDP,_RDROPX
    216
    217	0146  025Br		     _SET    DW	     _RSKIP
    218	0148  0269r		     _SET0   DW	 _RSTP
    219	014A  01F5r		     _EXIT   DW	 _RDROPX
    220
    221	014C  0160r 015Cr	     _READLN DW	 _TIB,_TBL
    222	0150  021Br 0480r	     _ACCEPT DW	 _JUMP,_NOP
    223	0154  021Br 0480r	     _ERROR  DW	 _JUMP,_NOP
    224	0158  021Br 0158r	     _OK     DW	 _JUMP,_OK
    225
    226	015C  0142r 0080	     _TBL    DW	 _CON,80H
    227	0160  0142r FE00	     _TIB    DW	 _CON,@TIB
    228	0164  0142r FF00	     _TBUF   DW	 _CON,@TBUF
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 5
NF11.asm



    229	0168  0142r 0000	     _0	     DW	 _CON,0
    230	016C  0142r 0020	     _BL     DW	 _CON,32
    231
    232	0170  0176r 0221r 0146r	     _HX     DW	 _H,_EX,_SET	      ;	H;
    233	0176  0142r 04ECr 0146r	     _H	     DW	 _CON,_FREEMEM,_SET   ;	H
    234	017C  0142r 0000 0146r	     _ETIB   DW	 _CON,0,_SET
    235	0182  0142r 0000 0146r	     _LTIB   DW	 _CON,0,_SET
    236	0188  0142r 0000	     _MSG    DW	 _CON,0
    237	018C  0192r 0221r 0146r	     _TX     DW	 _T,_EX,_SET	      ;	T;
    238	0192  0142r E800 0146r	     _T	     DW	 _CON,@VOCTOP,_SET    ;	T
    239
    240	0198  01E7r 0146r	     _SETPNT DW	 _POP,_SET
    241	019C  021Br 0000	     _FINDW  DW	 _JUMP,0
    242
    243	01A0  01E7r 0146r	     _REINI  DW	 _POP,_SET
    244	01A4  021Br 0464r	     _INIT   DW	 _JUMP,_INI
    245
    246	01A8  0146r 0142r	       DW _SET,_CON
    247	01AC			     _EMIT:
    248	01AC  01CDr 01B4r 0295r	  +    DW    _BEMIT,_CNTC,_1P,_SET
    249	      0146r
    250	01B4  0142r 0000	     _CNTC  DW _CON,0
    251
    252	01B8  0146r 0142r	       DW _SET,_CON
    253	01BC			     _KEY:
    254	01BC  027Fr 01E1r	       DW    _DUP,_RET
    255
    256
    257	01C0  0225r 0186r 0209r	  +  _ABORT? DW	 _XSTR,TO_+_MSG,_IF,_NOP,_ERROR,_ABORT
    258	      0480r 0154r 0447r
    259
    260
    261				     ; IO	    COMMANDS  (IO  vvvvvvvvvv
    262				     ;---------------------------------------------
    263
    264				     P_	_BEMIT				     ; @_BEMIT
1   265				       ALIGN_ 0
2   266				       IF ($-START+0) AND 1
2   267				       NOP
2   268				       ENDIF
1   269	01CC  90		       NOP
1   270	01CD			     _BEMIT:
1   271				       ORG $-1
    272	01CC  93		       XCHG  AX,TOP
    273	01CD  B4 0E		       MOV	     AH,0EH
    274	01CF  CD 10			     INT     10H
    275	01D1  93		       XCHG  AX,TOP
    276					     JMPS_   @DRP
1   277	01D2  EB 2B			       jmp  SHORT @DRP
    278
    279				     P_	_IO
1   280				       ALIGN_ 0
2   281				       IF ($-START+0) AND 1
2   282				       NOP
2   283				       ENDIF
1   284	01D4  90		       NOP
1   285	01D5			     _IO:
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 6
NF11.asm



1   286				       ORG $-1
    287				       DUP2_   NXT TOP
1   288				       X_
2   289	01D4  94		       xchg Rsp,DSP
1   290	01D5  51		       PUSH  NXT
1   291	01D6  53		       PUSH  TOP
1   292				       X_
2   293	01D7  94		       xchg Rsp,DSP
    294	01D8  57		       PUSH    RA
    295	01D9  FF D6		       CALL    IP
    296				       DROP2_  TOP NXT
1   297				       X_
2   298	01DB  94		       xchg Rsp,DSP
1   299	01DC  5B		       POP   TOP
1   300	01DD  59		       POP   NXT
1   301				       X_
2   302	01DE  94		       xchg Rsp,DSP
    303	01DF  5F		       POP     RA
    304
    305				     P_	_RET			     ; (RET
1   306				       ALIGN_ 0
2   307				       IF ($-START+0) AND 1
2   308				       NOP
2   309				       ENDIF
1   310	01E0  90		       NOP
1   311	01E1			     _RET:
1   312				       ORG $-1
    313	01E0			     @RET:
    314	01E0  8B F7		       MOV	 IP,RA
    315
    316				     P_	_RDROP
1   317				       ALIGN_ 0
2   318				       IF ($-START+0) AND 1
2   319				       NOP
2   320				       ENDIF
1   321	01E2  90		       NOP
1   322	01E3			     _RDROP:
1   323				       ORG $-1
    324	01E2			     @RDROP:
    325	01E2  5A		       POP     W
    326	01E3			     @RDROP1:
    327	01E3  5F		       POP     RA
    328	01E4  FF E2		       JMP     W
    329
    330				     P_	_POP			       ; POP
1   331				       ALIGN_ 0
2   332				       IF ($-START+0) AND 1
2   333				       NOP
2   334				       ENDIF
1   335	01E6  90		       NOP
1   336	01E7			     _POP:
1   337				       ORG $-1
    338	01E6  E8 0095		       CALL  @DUP
    339	01E9  8B DF		       MOV   TOP,RA
    340				       JMPS_ @RDROP
1   341	01EB  EB F5			       jmp  SHORT @RDROP
    342
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 7
NF11.asm



    343				     P_	_DROPX				     ; DROP;
1   344				       ALIGN_ 0
2   345				       IF ($-START+0) AND 1
2   346	01ED  90		       NOP
2   347				       ENDIF
1   348	01EE  90		       NOP
1   349	01EF			     _DROPX:
1   350				       ORG $-1
    351	01EE  E8 007B		       CALL  @DROP
    352				       JMPS_ @RET
1   353	01F1  EB ED			       jmp  SHORT @RET
    354
    355				     P_	_RDROPX			     ; RDROP;
1   356				       ALIGN_ 0
2   357				       IF ($-START+0) AND 1
2   358	01F3  90		       NOP
2   359				       ENDIF
1   360	01F4  90		       NOP
1   361	01F5			     _RDROPX:
1   362				       ORG $-1
    363	01F4  5A		       POP     W
    364	01F5  5E		       POP     IP
    365				       JMPS_ @RDROP1
1   366	01F6  EB EB			       jmp  SHORT @RDROP1
    367
    368				     P_	_FOR
1   369				       ALIGN_ 0
2   370				       IF ($-START+0) AND 1
2   371				       NOP
2   372				       ENDIF
1   373	01F8  90		       NOP
1   374	01F9			     _FOR:
1   375				       ORG $-1
    376	01F8  8B 34		       MOV   IP,[IP]
    377
    378				     P_	_PUSH
1   379				       ALIGN_ 0
2   380				       IF ($-START+0) AND 1
2   381				       NOP
2   382				       ENDIF
1   383	01FA  90		       NOP
1   384	01FB			     _PUSH:
1   385				       ORG $-1
    386	01FA  5A		       POP   W
    387	01FB  57		       PUSH  RA
    388	01FC  52		       PUSH  W
    389	01FD  8B FB		       MOV     RA,TOP
    390	01FF			     @DRP:
    391	01FF  EB 6B 90		       JMP   @DROP
    392
    393				     ; IO	    COMMANDS  (IO  ^^^^^^^
    394
    395				     ; CONTROL	    COMMANDS  (IF (JUMP	(RETURN	(IF-
    396
    397
    398				     P_	_SKIPDR				     ; ?.SKIP
1   399				       ALIGN_ 0
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 8
NF11.asm



2   400				       IF ($-START+0) AND 1
2   401				       NOP
2   402				       ENDIF
1   403	0202  90		       NOP
1   404	0203			     _SKIPDR:
1   405				       ORG $-1
    406	0202  0B DB		       OR    TOP,TOP
    407	0204  74 01		       JZ  @SKIPDR
    408	0206  C3		       RET
    409	0207			     @SKIPDR:
    410	0207  4B		       DEC   TOP
    411				     P_	_IF				 ; (IF
1   412				       ALIGN_ 0
2   413				       IF ($-START+0) AND 1
2   414				       NOP
2   415				       ENDIF
1   416	0208  90		       NOP
1   417	0209			     _IF:
1   418				       ORG $-1
    419				       ACALL_  @DROP
1   420	0208  BA 026Cr		       MOV   W,OFFSET @DROP
1   421	020B  52		       PUSH  W
    422
    423				     P_	_IFZ				 ; (IF#
1   424				       ALIGN_ 0
2   425				       IF ($-START+0) AND 1
2   426				       NOP
2   427				       ENDIF
1   428	020C  90		       NOP
1   429	020D			     _IFZ:
1   430				       ORG $-1
    431	020C  0B DB		       OR    TOP,TOP
    432	020E  74 0A		       JZ    @JUMP
    433
    434				     P_	_SKIP
1   435				       ALIGN_ 0
2   436				       IF ($-START+0) AND 1
2   437				       NOP
2   438				       ENDIF
1   439	0210  90		       NOP
1   440	0211			     _SKIP:
1   441				       ORG $-1
    442	0210			     @SKIP:
    443	0210  8D 74 02		       LEA   ip,[IP+2]
    444	0213  C3		       RET
    445
    446				     P_	_NEXT
1   447				       ALIGN_ 0
2   448				       IF ($-START+0) AND 1
2   449				       NOP
2   450				       ENDIF
1   451	0214  90		       NOP
1   452	0215			     _NEXT:
1   453				       ORG $-1
    454	0214  4F		       DEC   RA
    455				       SKIPW_  W
1   456	0215  BA 0000			     mov   W,0
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 9
NF11.asm



1   457					     org   $-2
    458
    459				     P_	_MIF	       ; (-IF
1   460				       ALIGN_ 0
2   461				       IF ($-START+0) AND 1
2   462				       NOP
2   463				       ENDIF
1   464	0216  90		       NOP
1   465	0217			     _MIF:
1   466				       ORG $-1
    467	0216  43		       INC   TOP
    468	0217			     @IFM:
    469	0217  4B		       DEC   TOP
    470	0218  78 F6		       JS    @SKIP
    471
    472				     P_	_JUMP			     ; (JUMP
1   473				       ALIGN_ 0
2   474				       IF ($-START+0) AND 1
2   475				       NOP
2   476				       ENDIF
1   477	021A  90		       NOP
1   478	021B			     _JUMP:
1   479				       ORG $-1
    480	021A			     @JUMP:
    481	021A  8B 34		       MOV   IP,[IP]
    482	021C  C3		       RET
    483				     P_	_IFM			       ; (IF-
1   484				       ALIGN_ 0
2   485				       IF ($-START+0) AND 1
2   486	021D  90		       NOP
2   487				       ENDIF
1   488	021E  90		       NOP
1   489	021F			     _IFM:
1   490				       ORG $-1
    491	021E  EB F7		       JMP  @IFM
    492
    493				     P_	_EX
1   494				       ALIGN_ 0
2   495				       IF ($-START+0) AND 1
2   496				       NOP
2   497				       ENDIF
1   498	0220  90		       NOP
1   499	0221			     _EX:
1   500				       ORG $-1
    501	0220  87 F7		       XCHG  IP,RA
    502	0222  C3		       RET
    503
    504				     P_	_XSTR
1   505				       ALIGN_ 0
2   506				       IF ($-START+0) AND 1
2   507	0223  90		       NOP
2   508				       ENDIF
1   509	0224  90		       NOP
1   510	0225			     _XSTR:
1   511				       ORG $-1
    512	0224  E8 0023		       CALL  @RLDBP
    513	0227  03 DF		       ADD   TOP,RA
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 10
NF11.asm



    514	0229  E8 0060		       CALL  @ALIGN
    515	022C  4F		       DEC   RA
    516
    517				     P_	_XCHG				     ; XCHG
1   518				       ALIGN_ 0
2   519				       IF ($-START+0) AND 1
2   520	022D  90		       NOP
2   521				       ENDIF
1   522	022E  90		       NOP
1   523	022F			     _XCHG:
1   524				       ORG $-1
    525	022E  87 DF		       XCHG  TOP,RA
    526	0230  C3		       RET
    527
    528				     P_	_XA			     ; XA
1   529				       ALIGN_ 0
2   530				       IF ($-START+0) AND 1
2   531	0231  90		       NOP
2   532				       ENDIF
1   533	0232  90		       NOP
1   534	0233			     _XA:
1   535				       ORG $-1
    536	0232  87 EF		       XCHG  AR,RA
    537	0234  C3		       RET
    538
    539				     ; MAIN  LOOP
    540				     ;--------------------------------------
    541
    542	0235			     @NEST:			     ; (NEST
    543	0235  57		       PUSH  RA
    544	0236  8B FE		       MOV     RA,IP
    545	0238  8B F2		       MOV     IP,W
    546
    547				     P_	_NOP_P
1   548				       ALIGN_ 0
2   549				       IF ($-START+0) AND 1
2   550				       NOP
2   551				       ENDIF
1   552	023A  90		       NOP
1   553	023B			     _NOP_P:
1   554				       ORG $-1
    555	023A			     @MAIN:
    556	023A  92		       XCHG  w,DSP   ; AX = DSP
    557	023B  AD		       LODSW
    558	023C  A8 01		       TEST  AL,1
    559	023E  92		       XCHG  w,DSP
    560	023F  74 F4		       jE      @nest
    561	0241  4A		       DEC     W
    562	0242  FF D2		       CALL  W
    563	0244  EB F4		       JMP   @MAIN
    564
    565	0246			     @RETURN:
    566	0246  5E		       POP   IP
    567	0247  EB F1		       JMP   @MAIN
    568
    569				     ; DATA TRANSFER  COMMANDS	@R+ !R+	XCHG XA
    570				     ;---------------------------------------------
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 11
NF11.asm



    571
    572				     P_	_RLDBP				     ; C@R+
1   573				       ALIGN_ 0
2   574				       IF ($-START+0) AND 1
2   575	0249  90		       NOP
2   576				       ENDIF
1   577	024A  90		       NOP
1   578	024B			     _RLDBP:
1   579				       ORG $-1
    580	024A			     @RLDBP:
    581	024A  E8 0031		       CALL  @DUP
    582	024D  8A 1D		       MOV   TOPL,[RA]
    583	024F  47		       INC   RA
    584
    585				     P_	_W_B	     ; W>B
1   586				       ALIGN_ 0
2   587				       IF ($-START+0) AND 1
2   588				       NOP
2   589				       ENDIF
1   590	0250  90		       NOP
1   591	0251			     _W_B:
1   592				       ORG $-1
    593				       CLR_  TOPH
1   594	0250  32 FF		       XOR   TOPH,TOPH
    595	0252  C3		       RET
    596
    597				     P_	_RLDP				     ; @R+
1   598				       ALIGN_ 0
2   599				       IF ($-START+0) AND 1
2   600	0253  90		       NOP
2   601				       ENDIF
1   602	0254  90		       NOP
1   603	0255			     _RLDP:
1   604				       ORG $-1
    605	0254  E8 0027		       CALL  @DUP
    606	0257  8B 1D		       MOV   TOP,[RA]
    607
    608				     P_	_RSKIP	     ; R2+
1   609				       ALIGN_ 0
2   610				       IF ($-START+0) AND 1
2   611	0259  90		       NOP
2   612				       ENDIF
1   613	025A  90		       NOP
1   614	025B			     _RSKIP:
1   615				       ORG $-1
    616	025A			     @RSKIP:
    617	025A  47		       INC   RA
    618	025B  47		       INC   RA
    619	025C  C3		       RET
    620
    621				     P_	_RSTBP				     ; C!R+
1   622				       ALIGN_ 0
2   623				       IF ($-START+0) AND 1
2   624	025D  90		       NOP
2   625				       ENDIF
1   626	025E  90		       NOP
1   627	025F			     _RSTBP:
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 12
NF11.asm



1   628				       ORG $-1
    629	025E  88 1D		       MOV   [RA],TOPL
    630				       JMPS_ @RSKIP1DR
1   631	0260  EB 09			       jmp  SHORT @RSKIP1DR
    632
    633				     P_	_RSTM
1   634				       ALIGN_ 0
2   635				       IF ($-START+0) AND 1
2   636				       NOP
2   637				       ENDIF
1   638	0262  90		       NOP
1   639	0263			     _RSTM:
1   640				       ORG $-1
    641	0262  4F		       DEC   RA
    642	0263  4F		       DEC   RA
    643
    644				     P_	_RST
1   645				       ALIGN_ 0
2   646				       IF ($-START+0) AND 1
2   647				       NOP
2   648				       ENDIF
1   649	0264  90		       NOP
1   650	0265			     _RST:
1   651				       ORG $-1
    652	0264			     @RST:			     ; !R
    653	0264  89 1D		       MOV   [RA],TOP
    654				       JMPS_ @DROP
1   655	0266  EB 04			       jmp  SHORT @DROP
    656
    657				     P_	_RSTP				     ; !R+
1   658				       ALIGN_ 0
2   659				       IF ($-START+0) AND 1
2   660				       NOP
2   661				       ENDIF
1   662	0268  90		       NOP
1   663	0269			     _RSTP:
1   664				       ORG $-1
    665	0268			     @RSTP:
    666	0268  89 1D		       MOV   [RA],TOP
    667	026A  47		       INC   RA
    668	026B			     @RSKIP1DR:
    669	026B  47		       INC   RA
    670
    671				     ;	STACK COMMANDS	 PUSH DUP
    672				     ;------------------------------------
    673
    674				     P_	_DROP_P
1   675				       ALIGN_ 0
2   676				       IF ($-START+0) AND 1
2   677				       NOP
2   678				       ENDIF
1   679	026C  90		       NOP
1   680	026D			     _DROP_P:
1   681				       ORG $-1
    682	026C			     @DROP:
    683	026C  8B D9		       MOV     TOP,NXT
    684
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 13
NF11.asm



    685				     P_	_NIP
1   686				       ALIGN_ 0
2   687				       IF ($-START+0) AND 1
2   688				       NOP
2   689				       ENDIF
1   690	026E  90		       NOP
1   691	026F			     _NIP:
1   692				       ORG $-1
    693	026E			     @NIP:
    694				       D_TO_  NXT
1   695				       X_
2   696	026E  94		       xchg Rsp,DSP
1   697	026F  59		       POP    NXT
1   698				       X_
2   699	0270  94		       xchg Rsp,DSP
    700	0271  C3		       RET
    701
    702				     P_	_OVER
1   703				       ALIGN_ 0
2   704				       IF ($-START+0) AND 1
2   705				       NOP
2   706				       ENDIF
1   707	0272  90		       NOP
1   708	0273			     _OVER:
1   709				       ORG $-1
    710				       TO_D_ NXT
1   711				       X_
2   712	0272  94		       xchg Rsp,DSP
1   713	0273  51		       PUSH   NXT
1   714				       X_
2   715	0274  94		       xchg Rsp,DSP
    716
    717				     P_	_SWAP
1   718				       ALIGN_ 0
2   719				       IF ($-START+0) AND 1
2   720	0275  90		       NOP
2   721				       ENDIF
1   722	0276  90		       NOP
1   723	0277			     _SWAP:
1   724				       ORG $-1
    725	0276  87 D9		       XCHG  TOP,NXT
    726	0278  C3		       RET
    727
    728				     P_	_TUCK
1   729				       ALIGN_ 0
2   730				       IF ($-START+0) AND 1
2   731	0279  90		       NOP
2   732				       ENDIF
1   733	027A  90		       NOP
1   734	027B			     _TUCK:
1   735				       ORG $-1
    736				       TO_D_ TOP
1   737				       X_
2   738	027A  94		       xchg Rsp,DSP
1   739	027B  53		       PUSH   TOP
1   740				       X_
2   741	027C  94		       xchg Rsp,DSP
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 14
NF11.asm



    742	027D  C3		       RET
    743
    744				     P_	_DUP
1   745				       ALIGN_ 0
2   746				       IF ($-START+0) AND 1
2   747				       NOP
2   748				       ENDIF
1   749	027E  90		       NOP
1   750	027F			     _DUP:
1   751				       ORG $-1
    752	027E			     @DUP:
    753				       TO_D_ NXT
1   754				       X_
2   755	027E  94		       xchg Rsp,DSP
1   756	027F  51		       PUSH   NXT
1   757				       X_
2   758	0280  94		       xchg Rsp,DSP
    759	0281  8B CB		       MOV     NXT,TOP
    760	0283  C3		       RET
    761
    762				     ;	STACK	COMMANDS   J POP
    763				     P_	_J
1   764				       ALIGN_ 0
2   765				       IF ($-START+0) AND 1
2   766				       NOP
2   767				       ENDIF
1   768	0284  90		       NOP
1   769	0285			     _J:
1   770				       ORG $-1
    771	0284  E8 FFF7		       CALL  @DUP
    772	0287  5A		       POP   W
    773	0288  5B		       POP   TOP
    774	0289  53		       PUSH  TOP
    775	028A  FF E2		       JMP   W
    776
    777				     ; MATH	    COMMANDS  +2/ +* -/	NAND
    778				     ;----------------------------------------
    779
    780				     P_	_ALIGN
1   781				       ALIGN_ 0
2   782				       IF ($-START+0) AND 1
2   783				       NOP
2   784				       ENDIF
1   785	028C  90		       NOP
1   786	028D			     _ALIGN:
1   787				       ORG $-1
    788	028C			     @ALIGN:
    789	028C  F6 C3 01		       TEST  TOPL,1
    790	028F  75 03		       JNZ   @1P
    791	0291  C3		       RET
    792
    793				     P_	_3P
1   794				       ALIGN_ 0
2   795				       IF ($-START+0) AND 1
2   796				       NOP
2   797				       ENDIF
1   798	0292  90		       NOP
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 15
NF11.asm



1   799	0293			     _3P:
1   800				       ORG $-1
    801	0292  43		       INC   TOP
    802	0293  43		       INC   TOP
    803				     P_	_1P
1   804				       ALIGN_ 0
2   805				       IF ($-START+0) AND 1
2   806				       NOP
2   807				       ENDIF
1   808	0294  90		       NOP
1   809	0295			     _1P:
1   810				       ORG $-1
    811	0294			     @1P:
    812	0294  43		       INC   TOP
    813	0295  C3		       RET
    814
    815				     P_	_2M
1   816				       ALIGN_ 0
2   817				       IF ($-START+0) AND 1
2   818				       NOP
2   819				       ENDIF
1   820	0296  90		       NOP
1   821	0297			     _2M:
1   822				       ORG $-1
    823	0296  4B		       DEC   TOP
    824				     P_	_1M
1   825				       ALIGN_ 0
2   826				       IF ($-START+0) AND 1
2   827	0297  90		       NOP
2   828				       ENDIF
1   829	0298  90		       NOP
1   830	0299			     _1M:
1   831				       ORG $-1
    832	0298  4B		       DEC   TOP
    833	0299  C3		       RET
    834
    835				     P_	_MDIV
1   836				       ALIGN_ 0
2   837				       IF ($-START+0) AND 1
2   838				       NOP
2   839				       ENDIF
1   840	029A  90		       NOP
1   841	029B			     _MDIV:
1   842				       ORG $-1
    843	029A  D1 E1		       SHL     NXT,1
    844	029C  D1 D3		       RCL   TOP,1
    845	029E  3B DD		       CMP   TOP,AR
    846	02A0  72 03		       JB      @MDIV
    847	02A2  2B DD		       SUB   TOP,AR
    848	02A4  41		       INC     NXT
    849	02A5			     @MDIV:
    850	02A5  C3		       RET
    851
    852				     P_	_PLAVG
1   853				       ALIGN_ 0
2   854				       IF ($-START+0) AND 1
2   855				       NOP
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 16
NF11.asm



2   856				       ENDIF
1   857	02A6  90		       NOP
1   858	02A7			     _PLAVG:
1   859				       ORG $-1
    860	02A6  03 CB		       ADD   NXT,TOP
    861	02A8  8B D9		       MOV   TOP,NXT
    862
    863				     P_	_DIV2
1   864				       ALIGN_ 0
2   865				       IF ($-START+0) AND 1
2   866				       NOP
2   867				       ENDIF
1   868	02AA  90		       NOP
1   869	02AB			     _DIV2:
1   870				       ORG $-1
    871	02AA  D1 DB		       RCR   TOP,1
    872	02AC  C3		       RET
    873
    874				     P_	_PMUL
1   875				       ALIGN_ 0
2   876				       IF ($-START+0) AND 1
2   877	02AD  90		       NOP
2   878				       ENDIF
1   879	02AE  90		       NOP
1   880	02AF			     _PMUL:
1   881				       ORG $-1
    882	02AE  F6 C1 01		       TEST  NXTL,1
    883	02B1  74 02		       JE    @LDIV2
    884	02B3  03 DD		       ADD   TOP, AR
    885
    886				     ;P_ _LDIV2
    887	02B5			     @LDIV2:
    888	02B5  D1 DB		       RCR   TOP,1
    889	02B7  D1 D9		       RCR   NXT,1
    890	02B9  C3		       RET
    891
    892				     P_	_XOR
1   893				       ALIGN_ 0
2   894				       IF ($-START+0) AND 1
2   895				       NOP
2   896				       ENDIF
1   897	02BA  90		       NOP
1   898	02BB			     _XOR:
1   899				       ORG $-1
    900	02BA  33 D9		       XOR   TOP,NXT
    901				       JMPS_ @NIP
1   902	02BC  EB B0			       jmp  SHORT @NIP
    903
    904				     P_	_AND
1   905				       ALIGN_ 0
2   906				       IF ($-START+0) AND 1
2   907				       NOP
2   908				       ENDIF
1   909	02BE  90		       NOP
1   910	02BF			     _AND:
1   911				       ORG $-1
    912	02BE  23 D9		       AND     TOP,NXT
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 17
NF11.asm



    913				       JMPS_ @NIP
1   914	02C0  EB AC			       jmp  SHORT @NIP
    915
    916				     P_	_ADD
1   917				       ALIGN_ 0
2   918				       IF ($-START+0) AND 1
2   919				       NOP
2   920				       ENDIF
1   921	02C2  90		       NOP
1   922	02C3			     _ADD:
1   923				       ORG $-1
    924	02C2  03 D9		       ADD     TOP,NXT
    925				       JMPS_ @NIP
1   926	02C4  EB A8			       jmp  SHORT @NIP
    927
    928				     P_	_ZEQ
1   929				       ALIGN_ 0
2   930				       IF ($-START+0) AND 1
2   931				       NOP
2   932				       ENDIF
1   933	02C6  90		       NOP
1   934	02C7			     _ZEQ:
1   935				       ORG $-1
    936	02C6			     @ZEQ:
    937	02C6  83 EB 01		       SUB   TOP,1
    938	02C9			     @flag:
    939				       cf_to_	TOP
1   940	02C9  1B DB		       sbb   TOP,TOP
    941	02CB  C3		       RET
    942
    943				     P_	_ODD
1   944				       ALIGN_ 0
2   945				       IF ($-START+0) AND 1
2   946				       NOP
2   947				       ENDIF
1   948	02CC  90		       NOP
1   949	02CD			     _ODD:
1   950				       ORG $-1
    951	02CC  D1 EB		       SHR   TOP,1
    952				       JMPS_ @FLAG
1   953	02CE  EB F9			       jmp  SHORT @FLAG
    954
    955				     P_	_0LESS
1   956				       ALIGN_ 0
2   957				       IF ($-START+0) AND 1
2   958				       NOP
2   959				       ENDIF
1   960	02D0  90		       NOP
1   961	02D1			     _0LESS:
1   962				       ORG $-1
    963	02D0  D1 E3		       SHL   TOP,1
    964				       JMPS_ @FLAG
1   965	02D2  EB F5			       jmp  SHORT @FLAG
    966
    967				     ; -----------------------
    968				     ; searching
    969				     ; -----------------------
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 18
NF11.asm



    970
    971				     L_	_MFND
1   972				       ALIGN_ 0
2   973				       IF ($-START+0) AND 1
2   974				       NOP
2   975				       ENDIF
1   976	02D4			     _MFND:
    977	02D4  0192r 0293r 012Ar	  +	 DW  _T,_3P,_CSTR,_ADD,_IO
    978	      02C3r 01D5r
    979	02DE  8B D9			 MOV	 TOP,NXT
    980	02E0  FF 07			 INC	 PW [TOP]
    981	02E2  E8 000B			 CALL	 @FND
    982	02E5  FF 0F			 DEC	 PW [TOP]
    983	02E7  C3			 RET
    984
    985
    986				     L_	_TICK
1   987				       ALIGN_ 0
2   988				       IF ($-START+0) AND 1
2   989				       NOP
2   990				       ENDIF
1   991	02E8			     _TICK:
    992	02E8  04CCr 0406r		 DW _0?ERRX,_TOKEN?
    993				     L_	_DFND
1   994				       ALIGN_ 0
2   995				       IF ($-START+0) AND 1
2   996				       NOP
2   997				       ENDIF
1   998	02EC			     _DFND:
    999	02EC  0192r 01D5r		 DW  _T,_IO
   1000	02F0			     @FND:
   1001					 X_
1  1002	02F0  94		       xchg Rsp,DSP
   1003	02F1  5F 5E				     POP       DI SI
   1004					 CLR_	 CX
1  1005	02F3  33 C9		       XOR   CX,CX
   1006	02F5			     @FND?:
   1007	02F5  03 F9			 ADD	 DI,CX
   1008	02F7  8B D7			 mov	 Dx,DI
   1009	02F9  8D 7D 04			 LEA	       DI,[DI+4]
   1010	02FC  8A 4D 01			 mov	       cl,byte[Di]
   1011	02FF  E3 0A			 jcxz	       @DCX ;not_fnd
   1012	0301  41			 inc	       cx
   1013	0302  56			 PUSH	 SI
   1014	0303  F3> A6			 repe	       cmpsb
   1015	0305  5E			 POP	 SI
   1016	0306  75 ED			 jNZ	       @FND?
   1017	0308  8B F2			 MOV	 SI,DX
   1018	030A  41			 inc	       cx
   1019	030B			     @DCX:
   1020	030B  8B FE			 MOV	 DI,SI
   1021					 JMPS_	 @RETVAL
1  1022	030D  EB 29			       jmp  SHORT @RETVAL
   1023
   1024				     ;-----------------------------------
   1025				     ; PARSING
   1026				     ;-----------------------------------
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 19
NF11.asm



   1027
   1028				      L_ _PARS
1  1029				       ALIGN_ 0
2  1030				       IF ($-START+0) AND 1
2  1031	030F  90		       NOP
2  1032				       ENDIF
1  1033	0310			     _PARS:
   1034	0310  023Br 017Cr 0182r	  +	 DW	 _NOP_P,_ETIB,_LTIB,_IO
   1035	      01D5r
   1036					 X_
1  1037	0318  94		       xchg Rsp,DSP
   1038	0319  59				     POP	       CX
   1039	031A  5F				     POP       DI
   1040	031B  5E				     POP     SI
   1041	031C  96			 XCHG	 SI,AX
   1042	031D  E3 0C			 JCXZ	       @@SKIPX
   1043	031F  2B F9			 SUB	       DI,CX
   1044	0321  3C 20			 CMP	       AL,' '
   1045	0323  75 06			 JNE	       @@SKIPX
   1046	0325  F3> AE			 REPE	       SCASB
   1047	0327  74 02			 JE	       @@SKIPX
   1048	0329  4F			 DEC	       DI
   1049	032A  41			 INC	       CX
   1050	032B			     @@SKIPX:
   1051	032B  8B C7			 MOV	 AX,DI	     ;	START OF THE SOURCE
   1052	032D  57			 PUSH	 DI
   1053	032E  E3 05			 JCXZ	     @@WEX
   1054	0330  F2> AE			 REPNE	     SCASB
   1055	0332  75 01			 JNE	     @@WEX
   1056	0334  4F			 DEC	     DI
   1057	0335			     @@WEX:		   ; END OF THE	SOURCE	IN DI
   1058	0335  2B F8			 SUB	 DI,AX	     ; LENGTH OF THE WORD
   1059	0337  96			 XCHG	 SI,AX
   1060	0338			     @RETVAL:
   1061	0338  57			 PUSH	 DI	     ; LENGTH OF THE WORD
   1062	0339			     @CMP:
   1063	0339  51			 PUSH	 CX	     ; IN CX REMAINS LENGTH OF THE BUFFER
   1064					 X_
1  1065	033A  94		       xchg Rsp,DSP
   1066	033B  C3				     RET
   1067
   1068				     ;----------------	 NUMBERS      ---------------------
   1069
   1070				     L_	_ATOI
1  1071				       ALIGN_ 0
2  1072				       IF ($-START+0) AND 1
2  1073				       NOP
2  1074				       ENDIF
1  1075	033C			     _ATOI:
   1076	033C  01D5r		       DW  _IO
   1077
   1078	      =BX		     @@ADR = BX
   1079	      =CX		     @@ACC = CX
   1080	      =DI		     @@IND = DI
   1081	      =SI		     @@BASE= SI
   1082	      =SI		     @@TMP = SI
   1083	      =DX		     @@OPADR = DX  ; OPTION ADDRESS
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 20
NF11.asm



   1084
   1085				       X_
1  1086	033E  94		       xchg Rsp,DSP
   1087	033F  5F 5B		       POP     @@IND @@ADR
   1088	0341  50		       PUSH    DSP
   1089	0342  8D 19		       LEA     @@ADR,[@@ADR+@@IND]
   1090	0344  F7 D7		       NOT     @@IND
   1091	0346  E8 0005			     CALL      @@ATOI
   1092	0349  58		       POP     DSP
   1093	034A  87 DF		       XCHG    @@ADR,@@IND
   1094					     JMPS_   @RETVAL
1  1095	034C  EB EA			       jmp  SHORT @RETVAL
   1096
   1097	034E			     @@ATOI:
   1098	034E  B0 0A			     MOV     AL,10	     ; BASE 10 INITIALLY
   1099	0350  E8 001D			     CALL    @@SGN
   1100	0353  E8 0032			     CALL    @@numini
   1101	0356			     @@GETC:
   1102	0356  8A 01		       MOV     AL,[@@ADR+@@IND]
   1103	0358  FF D2			     CALL    @@OPADR
   1104	035A  47		       INC     @@IND
   1105	035B  75 F9		       JNZ     @@GETC
   1106	035D  C3		       RET
   1107
   1108	035E  0394r 0391r 038Er	  +  COMOPT  DW	@@B16,@@B8,@@B2,@@KOLI,@@ACCUM,@@DIEZ
   1109	      03DDr 03CFr 0387r
   1110	036A  24 26 25 27 5E 23	     OPTAB   DB	"$&%'^#"
   1111
   1112	0370			     @@SGN:
   1113	0370  47		       INC     @@IND
   1114	0371  74 49			     JZ	     @@ERNUM
   1115	0373  80 39 2D		       CMP     pb [@@ADR+@@IND],'-'	; SGN
   1116	0376  75 0E		       jne     @@EXNUM2
   1117	0378  47		       INC     @@IND
   1118	0379  74 41			     JZ	     @@ERNUM
   1119	037B  5A			     POP     @@OPADR
   1120	037C  FF D2			     CALL    @@OPADR	     ; return to caller
   1121	037E			     @@DNEG:
   1122	037E  F7 D1			     not     @@acc
   1123	0380  F7 D5			     not     AR
   1124	0382			     @@DINC:
   1125	0382  41			     inc     @@acc
   1126	0383  75 01		       jne     @@EXNUM2
   1127	0385  45			     inc     AR
   1128	0386			     @@EXNUM2:
   1129	0386  C3		       RET
   1130
   1131	0387			     @@DIEZ:
   1132	0387  91			     XCHG    @@acc,AX
   1133
   1134	0388			     @@numini:
   1135					     CLR_    @@acc	; ZEROING ACCUMULATOR
1  1136	0388  33 C9		       XOR   @@acc,@@acc
   1137				       CLR_    AR	 ; HI PART ACCUMULATOR
1  1138	038A  33 ED		       XOR   AR,AR
   1139				       JMPS_   @@setbasE
1  1140	038C  EB 08			       jmp  SHORT @@setbasE
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 21
NF11.asm



   1141
   1142	038E			     @@B2:
   1143	038E  B0 02			     MOV	     AL,2	 ; BIN
   1144				       SKIPA_
1  1145	0390  3D			     DB	   03DH
   1146				       ;JMPS_	@@setbasE
   1147
   1148	0391			     @@B8:
   1149	0391  B0 08			     MOV	     AL,8	 ; OCT
   1150				       SKIPA_
1  1151	0393  3D			     DB	   03DH
   1152				       ;JMPS_	@@setbasE
   1153
   1154	0394			     @@B16:		 ; HEX
   1155	0394  B0 10			     MOV	     AL,16
   1156
   1157	0396			     @@setbasE:
   1158	0396  48			     DEC     AX
   1159	0397  48			     DEC     AX
   1160	0398  32 E4			     xor     ah,ah
   1161	039A  8B F0			     mov     @@base,ax
   1162	039C  46			     INC     @@base
   1163	039D  46			     INC     @@base
   1164	039E			     @@NORMAL?:
   1165	039E  E8 001C		       CALL    @@STATE
   1166
   1167	03A1			     @@N16:
   1168	03A1  56		       PUSH    @@base
   1169	03A2  BE 0005			     MOV	       @@TMP,6-1
   1170	03A5			     @@SCANB1:
   1171	03A5  3A 84 036Ar		     CMP	       AL,OPTAB[@@TMP]
   1172	03A9  74 03			     JE		       @@SCANB2
   1173	03AB  4E			     DEC	       @@TMP
   1174	03AC  79 F7			     JNS	       @@SCANB1
   1175	03AE			     @@SCANB2:
   1176	03AE  D1 E6			     SHL	       @@TMP,1
   1177	03B0  8B 94 035Er		     MOV	       @@OPADR,COMOPT[@@TMP]
   1178	03B4  5E		       POP     @@base
   1179
   1180	03B5  78 08		       JS      @@N5
   1181	03B7  47		       INC     @@IND
   1182	03B8  74 02			     JZ	     @@ERNUM
   1183	03BA  4F		       DEC     @@IND
   1184	03BB  C3		       RET
   1185
   1186	03BC			     @@ERNUM:
   1187	03BC  4F			     DEC     @@IND
   1188	03BD			     @@STATE:
   1189	03BD  5A			     pop     @@OPADR	; rdrop
   1190	03BE  C3			     RET
   1191
   1192	03BF			     @@N5:
   1193	03BF  3C 3A			     cmp     al,'9'+1
   1194	03C1  72 06			     jc	     @@ton2
   1195	03C3  3C 41			     cmp     al,'A'	 ; no case sensivity
   1196	03C5  72 F5			     jc	     @@ERNUM
   1197	03C7  2C 07			     sub     al,7
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 22
NF11.asm



   1198	03C9			     @@ton2:
   1199	03C9  2C 30			     sub     al,'0'
   1200	03CB  3B C6			     cmp     ax,@@base
   1201	03CD  73 ED			     jnc     @@ERNUM
   1202	03CF			     @@ACCUM:
   1203	03CF  95			     Xchg    AR,AX
   1204	03D0  F7 E6			     mul     @@base
   1205	03D2  95			     Xchg    AR,AX
   1206	03D3  91			     Xchg    @@acc,AX
   1207	03D4  F7 E6			     mul     @@base
   1208	03D6  91			     Xchg    @@acc,AX
   1209	03D7  03 C8			     add     @@acc,ax
   1210	03D9  13 EA		       ADC     AR,DX
   1211					     JMPS_    @@NORMAL?
1  1212	03DB  EB C1			       jmp  SHORT @@NORMAL?
   1213
   1214	03DD			     @@KOLI:
   1215	03DD  24 1F			     AND	     AL,31
   1216					     JMPS_   @@ACCUM
1  1217	03DF  EB EE			       jmp  SHORT @@ACCUM
   1218
   1219				     ;-------------------------------------
   1220				     ; COMPILING
   1221				     ;-------------------------------------
   1222
   1223				     L_	_HENTRY
1  1224				       ALIGN_ 0
2  1225				       IF ($-START+0) AND 1
2  1226	03E1  90		       NOP
2  1227				       ENDIF
1  1228	03E2			     _HENTRY:
   1229	03E2  0176r			 DW  _H
   1230	03E4			     _ENTRY:
   1231	03E4  0168r			 DW  _0
   1232	03E6			     _ENTRYDZ:	    ; ENTRY#
   1233	03E6  0406r			 DW _TOKEN?
   1234	03E8			     _ENTRYSD:	   ; ENTRY#"
   1235	03E8  040Ar 0295r 018Cr	  +	 DW _DLDB,_1P,_TX,_MPUSH
   1236	      03FEr
   1237	03F0			     _DSTM:
   1238	03F0  03F2r			 DW _STM
   1239	03F2			     _STM:
   1240	03F2  01FBr 0263r 01E7r	  +	 DW _PUSH,_RSTM,_POP,_RET
   1241	      01E1r
   1242
   1243				     L_	_DICTUP		   ; RESTORE DICTIONARY
1  1244				       ALIGN_ 0
2  1245				       IF ($-START+0) AND 1
2  1246				       NOP
2  1247				       ENDIF
1  1248	03FA			     _DICTUP:
   1249	03FA  0134r 018Cr		 DW  _HSTR,_TX
   1250				     L_	_MPUSH
1  1251				       ALIGN_ 0
2  1252				       IF ($-START+0) AND 1
2  1253				       NOP
2  1254				       ENDIF
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 23
NF11.asm



1  1255	03FE			     _MPUSH:
   1256	03FE  01D5r			 DW	 _IO
   1257					 X_
1  1258	0400  94		       xchg Rsp,DSP
   1259	0401  5F				     POP       DI
   1260	0402  59				     POP	       CX
   1261	0403  F9			 STC
   1262					 JMPS_	 @MAKESTR
1  1263	0404  EB 21			       jmp  SHORT @MAKESTR
   1264
   1265				     L_	_TOKEN?
1  1266				       ALIGN_ 0
2  1267				       IF ($-START+0) AND 1
2  1268				       NOP
2  1269				       ENDIF
1  1270	0406			     _TOKEN?:
   1271	0406  0412r 04CCr		 DW _TOKEN,_0?ERRX
   1272	040A			     _DLDB:		     ; .C@
   1273	040A  027Fr		       DW    _DUP
   1274	040C			     _LDB:			     ; C@
   1275	040C  01FBr		       DW    _PUSH
   1276	040E			     _CONB:
   1277	040E  024Br 01F5r	       DW    _RLDBP,_RDROPX
   1278	0412			     _TOKEN:
   1279	0412  016Cr			 DW _BL
   1280	0414			     _PARSE:
   1281	0414  0310r 0180r		 DW _PARS,TO_+_LTIB
   1282	0418			     _TBUFSTR:
   1283	0418  0164r			 DW _TBUF
   1284				     L_	_MAKESTR	 ; S>"!
1  1285				       ALIGN_ 0
2  1286				       IF ($-START+0) AND 1
2  1287				       NOP
2  1288				       ENDIF
1  1289	041A			     _MAKESTR:
   1290	041A  01D5r		       DW _IO
   1291					 X_
1  1292	041C  94		       xchg Rsp,DSP
   1293	041D  5F 59				     POP       DI CX
   1294	041F  B5 00			 MOV	 CH,0
   1295	0421  03 F9			 ADD	 DI,CX
   1296	0423  47			 INC	 DI	     ; SPACE FOR LENGTH
   1297	0424  C6 05 60			 MOV	 PB [DI],'`' ; IMMEDIATE SIGN
   1298					 ;CLC
   1299	0427			     @MAKESTR:
   1300	0427  5E				     POP     SI
   1301	0428  8B D1			 MOV	 DX,CX	     ; SAVE LENGTH
   1302	042A  9C			 PUSHF		     ; SAVE CF & DF
   1303	042B  03 F1			 ADD	 SI,CX	     ; AFTER NAME ADDRESS
   1304	042D  FD			 STD		     ; BACKWARDS
   1305	042E  A6			 CMPSB		     ; PREPARE FOR DIRECTION
   1306	042F  F3> A4			 REP	 MOVSB	     ; NAME (MEMORY) MOVE
   1307	0431  FC			 CLD
   1308	0432  9D			 POPF
   1309	0433  88 15			 MOV	 [DI],DL     ; LENGTH OF THE STRING
   1310	0435  13 F9			 ADC	 di,CX	     ; ADD CARRY TO DI
   1311	0437			     @RETADR:
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 24
NF11.asm



   1312	0437  57			 PUSH	 DI	     ; ADDRESS TO RETURN
   1313					 X_
1  1314	0438  94		       xchg Rsp,DSP
   1315	0439  C3			 RET
   1316
   1317				     L_	_CMOVE
1  1318				       ALIGN_ 0
2  1319				       IF ($-START+0) AND 1
2  1320				       NOP
2  1321				       ENDIF
1  1322	043A			     _CMOVE:
   1323	043A  0124r			 DW  _XDROP
   1324	043C			     _CMOVED:
   1325	043C  01D5r		       DW _IO
   1326					 X_
1  1327	043E  94		       xchg Rsp,DSP
   1328	043F  59 5F 5E				     POP	       CX DI SI
   1329	0442  F3> A4			 REP	 MOVSB
   1330					 JMPS_	 @RETADR
1  1331	0444  EB F1			       jmp  SHORT @RETADR
   1332
   1333				     P_	_ABORT
1  1334				       ALIGN_ 0
2  1335				       IF ($-START+0) AND 1
2  1336				       NOP
2  1337				       ENDIF
1  1338	0446  90		       NOP
1  1339	0447			     _ABORT:
1  1340				       ORG $-1
   1341	0446			     @ABORT:
   1342	0446  BC FE00		       MOV   RSP,@RTOP
   1343	0449  B8 FB00		       MOV   DSP,@STOP
   1344				       ALIGN_ 1
1  1345				       IF ($-START+1) AND 1
1  1346	044C  90		       NOP
1  1347				       ENDIF
   1348	044D  E8 FDF6		       CALL  @RETURN
   1349
   1350				     ; HI LEVEL	 START
   1351				     ;------------------------------------
   1352
   1353	0450  01A4r 01A4r 015Cr	  +    DW    _INIT,_INIT,_TBL,_CSTR
   1354	      012Ar
   1355	0458  04DCr 0158r 014Cr	  +  @MAINLP DW	_EVAL,_OK,_READLN,_JUMP,@MAINLP
   1356	      021Br 0458r
   1357
   1358	0462			     _BYE:
   1359	0462  0001		       DW    1
   1360
   1361
   1362				     ;_MINUS:
   1363				     ;	DW  _NEG
   1364				     ;_PLUS:
   1365				     ;	DW  _PLAVG,_DROPX
   1366
   1367	0464  03FAr 01A0r 0484r	  +  _INI:   DW	 _DICTUP,_REINI,_LPAR,_0,TO_+_LTIB,_EXIT
   1368	      0168r 0180r 014Ar
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 25
NF11.asm



   1369
   1370	0470  0114r 0140r 0211r	     @comaer dw	 _doeZ,_LD,_SKIP
   1371	0476  0221r		     _COMMAX DW	 _EX
   1372	0478  0170r		     _COMMA  DW	 _HX
   1373	047A  01FBr 0269r 01E7r	     _STP    DW	 _PUSH,_RSTP,_POP
   1374	0480  01E1r		     _NOP    DW	 _RET
   1375
   1376	0482  04D8r		     _SEMICO DW	 _SEMI	       ; EXECUTE ( INTERPRETTER	)
   1377	0484  0198r 02ECr 0209r	  +  _LPAR   DW	 _SETPNT,_DFND,_IF,_ANUM,_LD,_RSTEX,_NOP,_RET
   1378	      0494r 0140r 04D4r	  +
   1379	      0480r 01E1r
   1380	0494  0480r		     _ANUM   DW	 _NOP
   1381	0496  012Ar 033Cr	     _STRNUM DW	 _CSTR,_ATOI
   1382	049A			     _N0?ERR:
   1383	049A  01C0r		       DW _ABORT?
   1384				       CNAM_  "?"
1  1385				       nam_ "?"
2  1386	049C  01		       db    ??0000-$-1
2  1387	049D  3F		       db    "?"
2  1388	049E			     ??0000  label   byte
1  1389				       ALIGN_ 0
2  1390				       IF ($-START+0) AND 1
2  1391				       NOP
2  1392				       ENDIF
   1393	049E  01E1r		       DW _RET
   1394
   1395	04A0  03E2r		     _COLON  DW	 _HENTRY       ; COMPILE(ER)
   1396	04A2  0198r		     _RPAR   DW	 _SETPNT
   1397	04A4  0480r 02D4r 0209r	  +  _VCOMP  DW	 _NOP,_MFND,_IF,@COMP,_LD,_DUP,_ODD,_IF,_COMMA
   1398	      04BAr 0140r 027Fr	  +
   1399	      02CDr 0209r 0478r
   1400	04B6  01FBr 01E1r	     _EXECUT DW	 _PUSH,_RET
   1401
   1402	04BA  02ECr 02C7r 0209r	  +  @COMP   DW	 _DFND,_ZEQ,_IF,_comma
   1403	      0478r
   1404	04C2  0480r		     _ANUMC  DW	 _NOP
   1405	04C4  0496r		     _NUMC   DW	 _STRNUM
   1406	04C6  0476r		     _LITC   DW	 _COMMAX
   1407	04C8  0470r 0110r	     _CLIT   DW	 @COMAER,_LIT	       ; (LIT,
   1408
   1409
   1410
   1411	04CC			     _0?ERRX:
   1412	04CC  0221r		       DW  _EX
   1413	04CE			     _0?ERR:
   1414	04CE  02C7r 021Br 049Ar	       DW  _ZEQ,_JUMP,_N0?ERR
   1415
   1416	04D4			     _RSTEX:
   1417	04D4  0265r 01E1r		 DW  _RST,_RET
   1418	04D8			     _SEMI:
   1419	04D8  0470r 01E1r		 DW  @COMAER,_RET	     ; (;,
   1420
   1421				     L_	_EVAL
1  1422				       ALIGN_ 0
2  1423				       IF ($-START+0) AND 1
2  1424				       NOP
2  1425				       ENDIF
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 26
NF11.asm



1  1426	04DC			     _EVAL:
   1427	04DC  0480r			     DW	_NOP
   1428	04DE  0412r 040Ar 0209r	  +  @EVAL   DW	_TOKEN,_DLDB,_IF,_DROP,_FINDW,_JUMP,@EVAL
   1429	      0126r 019Cr 021Br	  +
   1430	      04DEr
   1431
   1432	04EC			     _FREEMEM:
   1433
   1434	04EC  000A		       DW  _END-_FREEMEM-2
   1435				       entry_  _ENTRY,0,"=:"
1  1436	04EE  03E4r		       DW    _ENTRY
1  1437	04F0  00		       DB    0
1  1438				       nam_  "=:"
2  1439	04F1  02		       db    ??0001-$-1
2  1440	04F2  3D 3A		       db    "=:"
2  1441	04F4			     ??0001  label   byte
   1442				       entry_  0,0,""
1  1443	04F4  0000		       DW    0
1  1444	04F6  00		       DB    0
1  1445				       nam_  ""
2  1446	04F7  00		       db    ??0002-$-1
2  1447				       db    ""
2  1448	04F8			     ??0002  label   byte
   1449
   1450	04F8			     _END:
   1451
   1452	      =0000		     lastw = ppppp
   1453
   1454	04F8			     MyCseg  ends
   1455					     end  Start
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 27
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??0000			Byte   MYCSEG:049E		   1386	 #1388
??0001			Byte   MYCSEG:04F4		   1439	 #1441
??0002			Byte   MYCSEG:04F8		   1446	 #1448
??DATE			Text   "01/09/21"
??FILENAME		Text   "NF11	"
??TIME			Text   "09:46:49"
??VERSION		Number 0314
@1P			Near   MYCSEG:0294		   790	#811
@@ACC			Number CX			   #1079  1122	1125  1132  1136  1136	1206  1208  1209
@@ACCUM			Near   MYCSEG:03CF		   1108	 #1202	1217
@@ADR			Number BX			   #1078  1087	1089  1089  1093  1102	1115
@@ATOI			Near   MYCSEG:034E		   1091	 #1097
@@B16			Near   MYCSEG:0394		   1108	 #1154
@@B2			Near   MYCSEG:038E		   1108	 #1142
@@B8			Near   MYCSEG:0391		   1108	 #1148
@@BASE			Number SI			   #1081  1161	1162  1163  1168  1178	1200  1204  1207
@@DIEZ			Near   MYCSEG:0387		   1108	 #1131
@@DINC			Near   MYCSEG:0382		   #1124
@@DNEG			Near   MYCSEG:037E		   #1121
@@ERNUM			Near   MYCSEG:03BC		   1114	 1118  1182  #1186  1196  1201
@@EXNUM2		Near   MYCSEG:0386		   1116	 1126  #1128
@@GETC			Near   MYCSEG:0356		   #1101  1105
@@IND			Number DI			   #1080  1087	1089  1090  1093  1102	1104  1113  1115  1117	1181  1183+
							   1187
@@KOLI			Near   MYCSEG:03DD		   1108	 #1214
@@N16			Near   MYCSEG:03A1		   #1167
@@N5			Near   MYCSEG:03BF		   1180	 #1192
@@NORMAL?		Near   MYCSEG:039E		   #1164  1212
@@NUMINI		Near   MYCSEG:0388		   1100	 #1134
@@OPADR			Number DX			   #1083  1103	1119  1120  1177  1189
@@SCANB1		Near   MYCSEG:03A5		   #1170  1174
@@SCANB2		Near   MYCSEG:03AE		   1172	 #1175
@@SETBASE		Near   MYCSEG:0396		   1140	 #1157
@@SGN			Near   MYCSEG:0370		   1099	 #1112
@@SKIPX			Near   MYCSEG:032B		   1042	 1045  1047  #1050
@@STATE			Near   MYCSEG:03BD		   1165	 #1188
@@TMP			Number SI			   #1082  1169	1171  1173  1176  1177
@@TON2			Near   MYCSEG:03C9		   1194	 #1198
@@WEX			Near   MYCSEG:0335		   1053	 1055  #1057
@ABORT			Near   MYCSEG:0446		   192	#1341
@ALIGN			Near   MYCSEG:028C		   514	#788
@CMP			Near   MYCSEG:0339		   #1062
@COMAER			Word   MYCSEG:0470		   #1370  1407	1419
@COMP			Word   MYCSEG:04BA		   1397	 #1402
@CPU			Text   0101H
@CURSEG			Text   MYCSEG			   #173
@DCX			Near   MYCSEG:030B		   1011	 #1019
@DROP			Near   MYCSEG:026C		   351	391  420  655  #682
@DRP			Near   MYCSEG:01FF		   277	#390
@DUP			Near   MYCSEG:027E		   338	581  605  #752	771
@EVAL			Word   MYCSEG:04DE		   1428	 #1428
@FILENAME		Text   NF11
@FLAG			Near   MYCSEG:02C9		   #938	 953  965
@FND			Near   MYCSEG:02F0		   981	#1000
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 28
Symbol Table



@FND?			Near   MYCSEG:02F5		   #1006  1016
@IFM			Near   MYCSEG:0217		   #468	 491
@JUMP			Near   MYCSEG:021A		   432	#480
@LDIV2			Near   MYCSEG:02B5		   883	#887
@MAIN			Near   MYCSEG:023A		   #555	 563  567
@MAINLP			Word   MYCSEG:0458		   1355	 #1355
@MAKESTR		Near   MYCSEG:0427		   1263	 #1299
@MDIV			Near   MYCSEG:02A5		   846	#849
@NEST			Near   MYCSEG:0235		   #542	 560
@NIP			Near   MYCSEG:026E		   #693	 902  914  926
@RDROP			Near   MYCSEG:01E2		   #324	 341
@RDROP1			Near   MYCSEG:01E3		   #326	 366
@RET			Near   MYCSEG:01E0		   #313	 353
@RETADR			Near   MYCSEG:0437		   #1311  1331
@RETURN			Near   MYCSEG:0246		   #565	 1348
@RETVAL			Near   MYCSEG:0338		   1022	 #1060	1095
@RLDBP			Near   MYCSEG:024A		   512	#580
@RSKIP			Near   MYCSEG:025A		   #616
@RSKIP1DR		Near   MYCSEG:026B		   631	#668
@RST			Near   MYCSEG:0264		   #652
@RSTP			Near   MYCSEG:0268		   #665
@RTOP			Number -0200			   #181	 1342
@SKIP			Near   MYCSEG:0210		   #442	 470
@SKIPDR			Near   MYCSEG:0207		   407	#409
@STOP			Number -0500			   #182	 1343
@TBUF			Number -0100			   #179	 180  182  228
@TIB			Number -0200			   #180	 181  182  183	227
@VOCTOP			Number -1800			   #183	 238
@WORDSIZE		Text   2			   #173
@ZEQ			Near   MYCSEG:02C6		   #936
AR			Number BP			   #152	 536  845  847	884  1123  1127	 1138  1138  1203  1205	 1210
AT_			Number -0004			   #8
COMOPT			Word   MYCSEG:035E		   #1108  1177
DSP			Number AX			   #149	 289  293  298	302  556  559  696  699	 712  715  738	741  755  +
							   758	1002  1037  1065  1086	1088  1092  1258  1292	1314  1327  1343
IP			Number SI			   #148	 295  314  364	376  376  443  443  481	 481  501  544	545  566
LASTW			Number 0000			   #1452
NXT			Number CX			   #154	 290  300  683	697  713  725  756  759	 843  848  860	861  889  +
							   900	912  924  979
NXTD			Number CL			   #156
NXTL			Number CL			   #155	 882
OPTAB			Byte   MYCSEG:036A		   #1110  1171
PB			Text   byte  ptr		   #5  1115  1297
PD			Text   dword ptr		   #3
PPPPP			Number 0000			   #96	1452
PW			Text   word  ptr		   #4  980  982
QQQQQ			Number 0000			   #95	96
RA			Number DI			   #151	 294  303  314	327  339  387  389  454	 501  513  515	525  536  +
							   543	544  582  583  606  617	 618  629  641	642  653  666  667  669
RSP			Number SP			   #150	 289  293  298	302  696  699  712  715	 738  741  755	758  1002 +
							   1037	 1065  1086  1258  1292	 1314  1327  1342
START			Byte   MYCSEG:0100		   #185	 195  266  281	307  318  332  345  357	 370  380  400	413  425  +
							   436	448  461  474  485  495	 506  519  530	549  574  587  599  610	  +
							   623	635  646  659  676  687	 704  719  730	746  765  782  795  805	  +
							   817	826  837  854  865  876	 894  906  918	930  945  957  973  988	  +
							   995	1030  1072  1225  1245	1252  1267  1286  1319	1335  1345  1390  +
							   1423	 1455
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 29
Symbol Table



TOP			Number BX			   #158	 272  275  291	299  339  389  406  406	 410  431  431	467  469  +
							   513	525  606  653  666  683	 725  739  759	773  774  801  802  812	  +
							   823	832  844  845  847  860	 861  871  884	888  900  912  924  937	  +
							   940	940  951  963  979  980	 982
TOPH			Number BH			   #160	 594  594
TOPL			Number BL			   #159	 582  629  789
TO_			Number -0002			   #7  257  1281  1367
VL_			Number 0002			   #9
W			Number DX			   #162	 325  328  363	386  388  420  421  456	 545  556  559	561  562  +
							   772	775
_0			Word   MYCSEG:0168		   #229	 1231  1367
_0?ERR			Near   MYCSEG:04CE		   #1413
_0?ERRX			Near   MYCSEG:04CC		   992	1271  #1411
_0LESS			Near   MYCSEG:02D1		   #961
_1M			Near   MYCSEG:0299		   #830
_1P			Near   MYCSEG:0295		   248	#809  1235
_2M			Near   MYCSEG:0297		   #821
_3P			Near   MYCSEG:0293		   #799	 977
_ABORT			Near   MYCSEG:0447		   257	#1339
_ABORT?			Word   MYCSEG:01C0		   #257	 1383
_ACCEPT			Word   MYCSEG:0150		   #222
_ADD			Near   MYCSEG:02C3		   #922	 977
_ALIGN			Near   MYCSEG:028D		   #786
_AND			Near   MYCSEG:02BF		   #910
_ANUM			Word   MYCSEG:0494		   1377	 #1380
_ANUMC			Word   MYCSEG:04C2		   #1404
_ATOI			Near   MYCSEG:033C		   #1075  1381
_BEMIT			Near   MYCSEG:01CD		   248	#270
_BL			Word   MYCSEG:016C		   #230	 1279
_BYE			Near   MYCSEG:0462		   #1358
_CLIT			Word   MYCSEG:04C8		   #1407
_CMOVE			Near   MYCSEG:043A		   #1322
_CMOVED			Near   MYCSEG:043C		   #1324
_CNTC			Word   MYCSEG:01B4		   248	#250
_COLON			Word   MYCSEG:04A0		   #1395
_COMMA			Word   MYCSEG:0478		   #1372  1397	1402
_COMMAX			Word   MYCSEG:0476		   #1371  1406
_CON			Word   MYCSEG:0142		   #215	 226  227  228	229  230  233  234  235	 236  238  246	250  252
_CONB			Near   MYCSEG:040E		   #1276
_CSTR			Word   MYCSEG:012A		   #208	 977  1353  1381
_DFND			Near   MYCSEG:02EC		   #998	 1377  1402
_DICTUP			Near   MYCSEG:03FA		   #1248  1367
_DIV2			Near   MYCSEG:02AB		   #869
_DLDB			Near   MYCSEG:040A		   1235	 #1272	1428
_DOEZ			Word   MYCSEG:0114		   #200	 1370
_DROP			Word   MYCSEG:0126		   #206	 1428
_DROPX			Near   MYCSEG:01EF		   206	#349
_DROP_P			Near   MYCSEG:026D		   #680
_DSTM			Near   MYCSEG:03F0		   #1237
_DUP			Near   MYCSEG:027F		   201	254  #750  1273	 1397
_DXEP			Word   MYCSEG:011A		   #201
_EMIT			Near   MYCSEG:01AC		   #247
_END			Near   MYCSEG:04F8		   1434	 #1450
_ENTRY			Near   MYCSEG:03E4		   #1230  1436
_ENTRYDZ		Near   MYCSEG:03E6		   #1232
_ENTRYSD		Near   MYCSEG:03E8		   #1234
_ERROR			Word   MYCSEG:0154		   #223	 257
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 30
Symbol Table



_ETIB			Word   MYCSEG:017C		   #234	 1034
_EVAL			Near   MYCSEG:04DC		   1355	 #1426
_EX			Near   MYCSEG:0221		   205	232  237  #499	1371  1412
_EXECUT			Word   MYCSEG:04B6		   202	#1400
_EXIT			Word   MYCSEG:014A		   #219	 1367
_FINDW			Word   MYCSEG:019C		   #241	 1428
_FOR			Near   MYCSEG:01F9		   #374
_FREEMEM		Near   MYCSEG:04EC		   233	#1432  1434
_H			Word   MYCSEG:0176		   210	232  #233  1229
_HENTRY			Near   MYCSEG:03E2		   #1228  1395
_HSTR			Word   MYCSEG:0134		   #210	 1249
_HX			Word   MYCSEG:0170		   #232	 1372
_IF			Near   MYCSEG:0209		   257	#417  1377  1397  1397	1402  1428
_IFM			Near   MYCSEG:021F		   #489
_IFZ			Near   MYCSEG:020D		   #429
_INI			Near   MYCSEG:0464		   244	#1367
_INIT			Word   MYCSEG:01A4		   #244	 1353  1353
_IO			Near   MYCSEG:01D5		   #285	 977  999  1034	 1076  1256  1290  1325
_J			Near   MYCSEG:0285		   #769
_JUMP			Near   MYCSEG:021B		   222	223  224  241  244  #478  1355	1414  1428
_KEY			Near   MYCSEG:01BC		   #253
_LD			Word   MYCSEG:0140		   #214	 1370  1377  1397
_LDB			Near   MYCSEG:040C		   #1274
_LIT			Word   MYCSEG:0110		   #199	 1407
_LITC			Word   MYCSEG:04C6		   #1406
_LPAR			Word   MYCSEG:0484		   1367	 #1377
_LTIB			Word   MYCSEG:0182		   #235	 1034  1281  1367
_MAKESTR		Near   MYCSEG:041A		   #1289
_MDIV			Near   MYCSEG:029B		   #841
_MFND			Near   MYCSEG:02D4		   #976	 1397
_MIF			Near   MYCSEG:0217		   #465
_MPUSH			Near   MYCSEG:03FE		   1235	 #1255
_MSG			Word   MYCSEG:0188		   #236	 257
_N0?ERR			Near   MYCSEG:049A		   #1382  1414
_NEXT			Near   MYCSEG:0215		   #452
_NIP			Near   MYCSEG:026F		   #691
_NOP			Word   MYCSEG:0480		   222	223  257  #1374	 1377  1380  1397  1404	 1427
_NOP_P			Near   MYCSEG:023B		   #553	 1034
_NUMC			Word   MYCSEG:04C4		   #1405
_ODD			Near   MYCSEG:02CD		   #949	 1397
_OK			Word   MYCSEG:0158		   224	#224  1355
_OVER			Near   MYCSEG:0273		   #708
_PARS			Near   MYCSEG:0310		   #1033  1281
_PARSE			Near   MYCSEG:0414		   #1280
_PLAVG			Near   MYCSEG:02A7		   #858
_PMUL			Near   MYCSEG:02AF		   #880
_POP			Near   MYCSEG:01E7		   200	203  208  211  240  243	 #336  1240  1373
_PUSH			Near   MYCSEG:01FB		   208	211  214  #384	1240  1275  1373  1400
_RDROP			Near   MYCSEG:01E3		   #322
_RDROPX			Near   MYCSEG:01F5		   215	219  #361  1277
_READLN			Word   MYCSEG:014C		   #221	 1355
_REINI			Word   MYCSEG:01A0		   #243	 1367
_RET			Near   MYCSEG:01E1		   199	200  203  208  211  254	 #311  1240  1374  1377	 1393  1400  1417 +
							   1419
_RLDBP			Near   MYCSEG:024B		   208	#578  1277
_RLDP			Near   MYCSEG:0255		   199	211  215  #603
_RPAR			Word   MYCSEG:04A2		   #1396
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 31
Symbol Table



_RSKIP			Near   MYCSEG:025B		   217	#614
_RST			Near   MYCSEG:0265		   #650	 1417
_RSTBP			Near   MYCSEG:025F		   #627
_RSTEX			Near   MYCSEG:04D4		   1377	 #1416
_RSTM			Near   MYCSEG:0263		   #639	 1240
_RSTP			Near   MYCSEG:0269		   218	#663  1373
_SEMI			Near   MYCSEG:04D8		   1376	 #1418
_SEMICO			Word   MYCSEG:0482		   #1376
_SET			Word   MYCSEG:0146		   #217	 232  233  234	235  237  238  240  243	 246  248  252
_SET0			Word   MYCSEG:0148		   #218
_SETPNT			Word   MYCSEG:0198		   #240	 1377  1396
_SKIP			Near   MYCSEG:0211		   #440	 1370
_SKIPDR			Near   MYCSEG:0203		   #404
_START			Near   MYCSEG:0100		   #186
_STM			Near   MYCSEG:03F2		   1238	 #1239
_STP			Word   MYCSEG:047A		   #1373
_STR			Word   MYCSEG:0136		   #211
_STRNUM			Word   MYCSEG:0496		   #1381  1405
_SWAP			Near   MYCSEG:0277		   #723
_T			Word   MYCSEG:0192		   237	#238  977  999
_TBL			Word   MYCSEG:015C		   221	#226  1353
_TBUF			Word   MYCSEG:0164		   #228	 1283
_TBUFSTR		Near   MYCSEG:0418		   #1282
_TIB			Word   MYCSEG:0160		   221	#227
_TICK			Near   MYCSEG:02E8		   #991
_TOKEN			Near   MYCSEG:0412		   1271	 #1278	1428
_TOKEN?			Near   MYCSEG:0406		   992	1233  #1270
_TUCK			Near   MYCSEG:027B		   #734
_TX			Word   MYCSEG:018C		   #237	 1235  1249
_UCSTR			Word   MYCSEG:0128		   #207
_VAR			Word   MYCSEG:0120		   #203
_VCOMP			Word   MYCSEG:04A4		   #1397
_W_B			Near   MYCSEG:0251		   #591
_XA			Near   MYCSEG:0233		   #534
_XCHG			Near   MYCSEG:022F		   200	202  208  211  #523
_XDROP			Word   MYCSEG:0124		   #205	 1323
_XEP			Word   MYCSEG:011C		   #202	 207
_XOR			Near   MYCSEG:02BB		   #898
_XSTR			Near   MYCSEG:0225		   257	#510
_ZEQ			Near   MYCSEG:02C7		   #934	 1402  1414

Macro Name						   Cref	(defined at #)

ACALL_							   #135	 419
ALIGN_							   #117	 194  265  280	306  317  331  344  356	 369  379  399	412  424  +
							   435	447  460  473  484  494	 505  518  529	548  573  586  598  609	  +
							   622	634  645  658  675  686	 703  718  729	745  764  781  794  804	  +
							   816	825  836  853  864  875	 893  905  917	929  944  956  972  987	  +
							   994	1029  1071  1224  1244	1251  1266  1285  1318	1334  1344  1389  +
							   1422
CF_TO_							   #69	939
CLR_							   #33	593  1004  1135	 1137
CNAM_							   #105	 1384
DROP2_							   #84	296
DUP2_							   #77	287
D_TO_							   #59	694
ENTRY_							   #140	 1435  1442
Turbo Assembler	 Version 3.2	    01/09/21 09:46:49	    Page 32
Symbol Table



JMPS_							   #11	276  340  352  365  630	 654  901  913	925  952  964  1021  1094 +
							   1139	 1211  1216  1262  1330
LN_							   #110
L_							   #130	 971  986  993	1028  1070  1223  1243	1250  1265  1284  1317	  +
							   1421
NAM_							   #98	1385  1438  1445
P_							   #123	 264  279  305	316  330  343  355  368	 378  398  411	423  434  +
							   446	459  472  483  493  504	 517  528  547	572  585  597  608  621	  +
							   633	644  657  674  685  702	 717  728  744	763  780  793  803  815	  +
							   824	835  852  863  874  892	 904  916  928	943  955  1333
RCHG_							   #73
R_TO_							   #49
SKIPA_							   #15	1144  1150
SKIPB_							   #23
SKIPC_							   #19
SKIPW_							   #28	455
SWAP_							   #91
TO_D_							   #53	710  736  753
TO_R_							   #45
TWICE_							   #37
W2_							   #65
X_							   #41	288  292  297  301  695	 698  711  714	737  740  754  757  1001  +
							   1036	 1064  1085  1257  1291	 1313  1326

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

MYCSEG			16  04F8 Para	none		   #173	 175  175  175	175
