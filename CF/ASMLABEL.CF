: CODE: P=: >CODE ; 
: CODE  HERE =:  >CODE ; 
' C, =: DB,
'  , =: DA,
'  , =: DW,
0 VALUE `FBTYPES 

EXPORT L' 
EXPORT X  
EXPORT X! 
EXPORT =L 
EXPORT =C 
EXPORT =P  \ LAST  TO EXPORT
( ) FUNC: ` ,< UNW UNW

64 CONST FBNUM 
FBNUM WARY FBSRC  
FBNUM WARY FBDST
FBNUM BARY FBTYPE 
 0 FBDST FBNUM CELLS -1 FILL  \ FREE_ALL


18 CONST  FBTYPCNT 
0 BARY FBFIXIND   
   \ (RX,) (RB,) SG,   P,    IS,   IX,   IB,   X,    (SB,)
     1 C,  0 C,  1 C,  0 C,  0 C,  1 C,  0 C,  1 C,  0 C,
   \ W,    C,    ,     WRD,  DA,   DW,   DB,   `RB,  `RW, ,< 
     1 C,  0 C,  1 C,  1 C,  1 C,  1 C,  0 C,  2 C,  3 C,
: GET-TYPE \ FOUND AND EXECUTE FBTYPE RETURNS INDEX
  `FBTYPES FBTYPCNT ' DUP PUSH WSCAN
  DUP 1+ 0",TYPE?" HERE 2+ ;
: DEFINE? 0<>; 
: LDEFINE DROP 0 1 TBUF (=: T ;
: LFND? TOKEN? TFND OVER STARTVOC U< AND ;
: CREATE-UNSET!  LDEFINE
: UNSET! PUSH \ LBLADR
  GET-TYPE FBFIXIND C@ DUP 1- 0=  \ FIXIND
  IF UNW H  I@ ,  POP ! DROP    ;THEN  \ WORD TYPE1
  0 FBDST FBNUM -1 WSCAN DUP 1+ 0"FB-TABLE-FULL"  \ FBIND
  PUSH I FBTYPE C!  \ SAVE FIXIND
  POP XR I FBDST !  \ SAVR DEST  LABEL ADR
  H    POP FBSRC !  \ SAVE SOURCE ADR
  ; \ REGISTER
: `L' LFND?  IF ? CREATE-UNSET!  \ NOT FOUND
  vague? 0= IF ? UNSET!  \ UNSET
  @ ; \ FOUND

: FIX3 ( SRC DST ) OVER R>T - 
: FIX1 ( SRC DST ) SWAP !- DROP ; 
: FIX2 ( SRC DST ) OVER R>T - RB?  
: FIX0 ( SRC DST ) SWAP C!- DROP ;
: FIXTBL (XARY FIX0 FIX1 FIX2 FIX3 ,<

: `X  >,
: `X! HERE ODD ?? LASTH! 
: `=L HERE
: `=C PUSH LFND? DEFINE? vague?  0"ALREADY_DEFINED!" 
  XR PUSH J 2+ DEC J PUSH          \ UNSET>SET LABEL
  BEGIN I WHILE I@ J POP ! PUSH REPEAT  \ SET LIST
  POP POP 2DROP   \ ."=L_" TBUF ID. I DUP H. @ H.
  FBNUM  FOR J I FBDST @ = 
    IF I FBSRC @ J @     \ OVER H. DUP H. 
	  I FBTYPE C@ FIXTBL   \ J WID.
	  0 I FBTYPE C!  0 I FBSRC !  -1 I FBDST ! \ CLEAR 
    THEN 
  NEXT ,< UNW >, (2RDRP; ,<
: `=P ALIGNED HERE 1+ `=C  >CODE ;

EXPORTED `L'     L' 
EXPORTED `X      X  
EXPORTED `X!     X! 
EXPORTED `=L     =L 
EXPORTED `=C     =C
EXPORTED `=P     =P

RETURN`
