: BLK>MEM 1 SKIP
: MEM>BLK 0
(
  ABLK  \ # OF BLK TO WRITE TO
  OFST  \ OFFSET IN BLOCK
  START \ START ADDRESS OF MEMORY PART
  LEN   \ REMAINING LENGTH
  FLMEM \ DESTINATION FLAG
  |
  PART  \ PARTIAL LENGTH TO MOVE
)
FUNC: `MEM>BLK     \ RETURNS LASTBLK  LASTOFS
FLOCK:
  : FULBUF?  1K = ;
  : PREPAREBUF
     LEN 1K OFST 1KMOD - UMIN  TO PART
  ;
  : SMARTBUF      \ RETURNS ADDRESS
     PART FULBUF? IF ABLK BUFFER
  : OFST+ OFST +  ]
  : GETBLOCK
       ABLK BLOCK  OFST+
  ;

  : MOVE>BLK \ ."MEM>BLK_" TO BK
    LEN WHILE| 
	  PREPAREBUF \ PREPARE BUFFER
      START SMARTBUF PART CMOVE  UPDATE !BUFS \ MOVE TO IT
  : NEXTOFS
    PART       AT START +!
    PART NEG   AT LEN +!
    PART OFST+ TO OFST
    LEN
    OFST FULBUF? 0;
      AT ABLK INC
      0 TO OFST
  ;
  : MOVE>MEM? 
    FLMEM (IF MOVE>BLK  \ ."BLK>MEM_" TO BK
    LEN WHILE| 
	  PREPAREBUF
      GETBLOCK   START PART CMOVE   \ MOVE TO IT
      NEXTOFS
  ;

;FLOCK
  MOVE>MEM?
  ABLK  OFST START \ RETURNS
RETURN ;
