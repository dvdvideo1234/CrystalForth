\ FILE <> BLOCKS CONVERTERS   - PART OF FILE_WRITER
CR .( CONV1 )
0 VALUE `LastB  0 VALUE VBLK  0 VALUE OUTH  
: Fput OUTH FEMIT ;   0 VECTOR `CONT@  
: TEXTDUMP ADR' PUSH  : >FILE POP TO `CONT@ 
[ OUTH Fclose ] FCREATE TO OUTH  TO EMIT| Fput `CONT@ ;
: LFBLK UNTIL| 1- DUP |NIP 
: TRIM<BLK BLOCK 1K 
: TRIM< FOR DUP I+ C@ '! U< IF X: -ROT NEXT 0 ;THEN POP 1+ ; 
: `L 2DUP 1+ U< 0; DUP TO `LastB EX `LastB   TRIM<BLK 1L UNITS?
 AHEAD   : B2F TOKEN? : "B2F >FILE `L 1- 
RANGE| BLOCK 1H THEN STR| DUP 1L + XEP| 1L TRIM< TYPE CR ; 
: `NEWBLK? [ SOURCE ] XEP| LTIB 0<>; 1K TO LTIB BLK 1+
DUP TO BLK 0 TO ETIB 
: WIPE DUP  
: WIPES RANGE| BLOCK 1K BLANK  UPDATE FLUSH ; 
: `FREAD DXEP| : FREAD TOKEN? @OPENI| FGet TO EMIT| C: DROP 
 BLKTI| BLK WIPE UNTIL| `NEWBLK? INBUF TO I+ ACCEPT ETIB LTIB -
 CMOVTO DROP UPDATE  \` EOS BLK TO SCR ; 
: FEDIT 100 LFBLK 1+ `FREAD DUP TO VBLK EDIT ; 
: FWIPE VBLK 100 LFBLK WIPES ;

BYTE. `LastB
