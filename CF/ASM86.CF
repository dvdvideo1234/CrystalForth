EXPORT  RW,  
EXPORT  RB,  
EXPORT  SKIPR  
EXPORT  SKIPC  
EXPORT  UNB 
EXPORT  SKIPA 
EXPORT  SKIPB 


0 TO BIBYBA-COUNTER   54 TO HIBBB  
HIBBB 1- LARY `[BBB]  ' `[BBB] VAL' BBB[] !

ENDER  -END-  

\ TABLES --------------------------------------------------
\ cell relative to IP
00 $80 ' .COMMA-(RX)     TB^ CELL# COMMAER (RX,)  ,  
\ byte relative to IP                           
00 $40 ' .COMMA-(RB)     TB^ 1     COMMAER (RB,) C, 
\ Segment: WORD 
00 $20 ' .COMMA-STANDARD TB^ 2     COMMAER SG, WRD, 
\ port number: byte
00 $10 ' .COMMA-STANDARD TB^ 1     COMMAER P,    C, 
\ imm byte data obligatory sIzE
00 $08 ' .COMMA-STANDARD TB^ 1     COMMAER IS,   C, 
\ imm data: cell 
02 $04 ' .COMMA-IMM      TB^ CELL# COMMAER IX,    ,  
\ imm data: byte
01 $04 ' .COMMA-IMM      TB^ 1     COMMAER IB,   C, 
\ imm data: addr/offset
08 $02 ' .COMMA-ADR      TB^ CELL# COMMAER X,     ,  
\ imm byte: addr/offset
04 $02 ' .COMMA-SIGN-BYTE TB^ 1    COMMAER (SB,) C, 
\ obligatory word     
00 $01 ' .COMMA-STANDARD TB^ 2     COMMAER W,  WRD,

\ --------- STANDART fixups ---------- 2FR
\ v-- Bits           \  1 OPERAND IS BYTE \  2 OPERAND IS CELL
\  4 OFFSET DB|      \  8 ADDRESS  DW|    \ 10 Register op    
\ 20 Memory op       \ 40 D0              \ 80 [BP]           

$12 0 $0700 TB^  \ DESTINATION REGISTERS
    $100 0 8 FMLY 1FR AX| CX| DX| BX| SP| BP| SI| DI|
$11 0 $0700 TB^
    $100 0 8 FMLY 1FR AL| CL| DL| BL| AH| CH| DH| BH|
	
$20 0 $0700 TB^ \ MEMORY ADDRESSING    
 $100  0 8 FMLY 1FR X/S X/D P/S P/D /SI /DI -- /BX
$A0 0 $0700 TB^  $600 1FR /BP
 
$60 0 $C000 TB^ $0000 1FR      D0/   \ NO OFFSET
$24 2 $C000 TB^ $4000 1FR      DB/   \ BYTE OFFSET
$28 2 $C000 TB^ $8000 1FR      DW/   \ WORD OFFSET
$10 0 $C000 TB^ $C000 1FR      R|    \ REGISTER REGISTER
$08 2 $C700 TB^ $0600 1FR      /M/  \ MEMORY
\ Overrules D0/ /BP

$02 00 $3800 TB^  \ SOURCE REGISTERS
   $800  0 8 FMLY 1FR AX> CX> DX> BX> SP> BP> SI> DI>
$01 00 $3800 TB^    
   $800  0 8 FMLY 1FR AL> CL> DL> BL> AH> CH> DH> BH> 

00 00 $02 TB^   2 0 2 FMLY 1FI F| T|   
01 00 $01 TB^   0 1FI B|
02 00 $01 TB^   1 1FI W|

\ --------- two fixup operands ----------
$22 00 $FF00 TB^
                $8D 2PI LEA, 
       1 $C4 2 FMLY 2PI LES, LDS,  
$00 00 $FF01 TB^ 
       2 $84 2 FMLY 2PI TEST, XCHG,   
$00 00 $FF03 TB^
                $88 2PI MOV,
         8 0 8 FMLY 2PI ADD, OR, ADC, SBB, AND, SUB, XOR, CMP,

\ --------- one fixup operand ---------- 
 00 $04 $C701 TB^   $C6 2PI MOVI,   $F6 2PI TESTI,  $800 $80 8
FMLY 2PI ADDI, ORI, ADCI, SBBI, ANDI, SUBI, XORI, CMPI,
$12  00  $700 TB^ 8 $40 4 FMLY 1PI INCX, DECX, PUSHX, POPX,
   $90 1PI XCHGX,   
02  $08 $C700 TB^   $800 $83 8 
FMLY 2PI ADDSI, -- ADCSI, SBBSI, -- SUBSI, -- CMPSI,
00  00  $C701 TB^   $800   $FE 2 FMLY 2PI INC, DEC,  
$800 $10F6 6 FMLY 2PI NOT, NEG, MUL, IMUL, DIV, IDIV, 
$02  00 $C700 TB^   $1000 $10FF 2  FMLY 2PI CALLO,  JMPO, 
        $8F 2PI POP,   $30FF 2PI PUSH, 
$22 00  $C700 TB^   $1000 $18FF 2  FMLY 2PI CALLFO, JMPFO,
$11 $04  $700 TB^   $B0 1PI MOVBI,
$12 $04  $700 TB^   $B8 1PI MOVXI,

\ --------- no fixup operands ----------
\ 01 00 $20100 TB^  0 1FR  B1|   02 00 $20100 TB^  1 1FR  W1|

8 $02 $20001 TB^  2 $A0 2 FMLY 1PI MOVTA, MOVFA, 
0 $04 $20001 TB^   $A8 1PI TESTAI,   08 04 8 
FMLY 1PI ADDAI, ORAI, ADCAI, SBBAI, ANDAI, SUBAI, XORAI, CMPAI, 
00 00 $20001 TB^    
            2 $A4 6 FMLY 1PI MOVS, COMPS, -- STOS, LODS, SCAS,       
0 $10 $20001 TB^  2 $E4 2 FMLY 1PI INAI, OUTAI,  
0 $00 $20001 TB^  2 $EC 2 FMLY 1PI INAD, OUTAD, 

\ --------- special fixups ----------
00 00   $1800 TB^ $800 0 4 FMLY 1FR ES| CS| SS| DS| 
$26 1PI SEG,     $1 6 2 FMLY 1PI PUSHS, POPS,
02 00   $DF02 TB^        $8C  2PI MOVSG,
00 $00  $0002 TB^          00 1FI 1|
00 $00  $0002 TB^          02 1FI V|   
00   0  $C703 TB^ 
$800 $D0 8 FMLY 2PI ROL, ROR, RCL, RCR, SHL, SHR, -- SAR,
00 00   $0100 TB^  $100 0 2 FMLY 1FR Y| N|
00 00   $0E00 TB^  $200 0 8 FMLY 1FR O| C| Z| CZ| S| P| L| LE|
00 $40  $0F00 TB^         $70 1PI J,

\ --------- no fixups, BUT COMMAERS  --------------- 
$0A $22 00 TB^           $9A 1PI CALLF,   $EA 1PI JMPF,
$01 $04 00 TB^  $CD 1PI INTI,   1 $D4 2 FMLY 1PI AAM, AAD,
$02 $04 00 TB^  8 $C2 2 FMLY 1PI RET+, RETF+,  
$01 $40 00 TB^           $EB 1PI JMPS,
1 $E0 4 FMLY 1PI LOOPNZ, LOOPZ, LOOP, JCXZ,                      
$02 $80 00 TB^  1 $E8 2 FMLY 1PI CALL, JMP, 
 
\ --------- BARE CODE --------------- 
$00 $00 00 TB^  $90 1PI  NOP, 
8 $C3 2 FMLY 1PI RET,  RETF,   
8 $27 4 FMLY 1PI DAA, DAS, AAA, AAS,                            
1 $98 8 FMLY 1PI CBW, CWD, -- WAIT, PUSHF, POPF, SAHF, LAHF,   
1 $CC 4 FMLY 1PI INT3, -- INTO, IRET,          $D7 1PI XLAT,
1 $F0 6 FMLY 1PI LOCK, -- REP, REPZ, HLT, CMC,                 
1 $F8 6 FMLY 1PI CLC, STC, CLI, STI, CLD, STD,  

\ --------- macroses ---------------

: `SKIPR  MOVXI, ' EXECUTE 
: `1SKIPR 0  IX, UNW ;
: `SKIPC  MOVBI, ' EXECUTE 
: `1SKIPC 0  IB, 
: `UNB 0 C, UNW ;
: `SKIPA  CMPAI, W| `1SKIPR ; 
: `SKIPB  CMPAI, B| `1SKIPC  ;
: `RW, >RW (RX,) ;  
: `RB, >RB RB? (RB,) ;

HERE TO `FBTYPES 
>, (RX,) (RB,) SG,   P,    IS,   IX,   IB,   X,    (SB,)
    W,   C,    ,     WRD,  DA,   DW,   DB,   `RB,  `RW, ,< 

EXPORTED `RW,    RW, 
EXPORTED `RB,    RB, 
EXPORTED `SKIPR  SKIPR  
EXPORTED `SKIPC  SKIPC  
EXPORTED `UNB    UNB 
EXPORTED `SKIPA  SKIPA \ 61
EXPORTED `SKIPB  SKIPB \ 60

T TO STARTVOC  \ START OF OPTABLE
PRUNEM

(
BYTE. `[BBB]
;"TESTASM" 
CODE PPP
  CALL,      L' @FBDST RW,
  J, Z| Y|   L' @FBDST RB,
  SKIPA
  L' @FBDST  DW,
  SKIPB
  L' @FBDST  C,
  NOP,
=L @GAGA  
  0 DW,
=L @FBDST
  RET,
;CODE
' PPP H D-R
)